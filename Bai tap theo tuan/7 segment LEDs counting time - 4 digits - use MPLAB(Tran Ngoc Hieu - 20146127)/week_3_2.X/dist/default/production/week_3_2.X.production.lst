

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Mar 03 19:55:54 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208                           
   209                           	psect	idataBANK0
   210  06E7                     __pidataBANK0:
   211                           
   212                           ;initializer for _D
   213  06E7  347E               	retlw	126
   214  06E8  3400               	retlw	0
   215  06E9  347E               	retlw	126
   216  06EA  3400               	retlw	0
   217  06EB  347F               	retlw	127
   218  06EC  3400               	retlw	0
   219  06ED  347F               	retlw	127
   220  06EE  3400               	retlw	0
   221  06EF  347F               	retlw	127
   222  06F0  3400               	retlw	0
   223  06F1  347F               	retlw	127
   224  06F2  3400               	retlw	0
   225  06F3  347F               	retlw	127
   226  06F4  3400               	retlw	0
   227  06F5  347E               	retlw	126
   228  06F6  3400               	retlw	0
   229  06F7  347F               	retlw	127
   230  06F8  3400               	retlw	0
   231  06F9  347F               	retlw	127
   232  06FA  3400               	retlw	0
   233                           
   234                           ;initializer for _C
   235  06FB  347F               	retlw	127
   236  06FC  3400               	retlw	0
   237  06FD  3446               	retlw	70
   238  06FE  3400               	retlw	0
   239  06FF  345B               	retlw	91
   240  0700  3400               	retlw	0
   241  0701  344F               	retlw	79
   242  0702  3400               	retlw	0
   243  0703  3466               	retlw	102
   244  0704  3400               	retlw	0
   245  0705  346D               	retlw	109
   246  0706  3400               	retlw	0
   247  0707  347D               	retlw	125
   248  0708  3400               	retlw	0
   249  0709  3467               	retlw	103
   250  070A  3400               	retlw	0
   251  070B  347F               	retlw	127
   252  070C  3400               	retlw	0
   253  070D  346F               	retlw	111
   254  070E  3400               	retlw	0
   255                           
   256                           ;initializer for _B
   257  070F  343F               	retlw	63
   258  0710  3400               	retlw	0
   259  0711  3406               	retlw	6
   260  0712  3400               	retlw	0
   261  0713  345B               	retlw	91
   262  0714  3400               	retlw	0
   263  0715  344F               	retlw	79
   264  0716  3400               	retlw	0
   265  0717  3466               	retlw	102
   266  0718  3400               	retlw	0
   267  0719  346D               	retlw	109
   268  071A  3400               	retlw	0
   269  071B  347D               	retlw	125
   270  071C  3400               	retlw	0
   271  071D  3407               	retlw	7
   272  071E  3400               	retlw	0
   273  071F  347F               	retlw	127
   274  0720  3400               	retlw	0
   275  0721  346F               	retlw	111
   276  0722  3400               	retlw	0
   277                           
   278                           ;initializer for _A
   279  0723  343F               	retlw	63
   280  0724  3400               	retlw	0
   281  0725  3406               	retlw	6
   282  0726  3400               	retlw	0
   283  0727  345B               	retlw	91
   284  0728  3400               	retlw	0
   285  0729  344F               	retlw	79
   286  072A  3400               	retlw	0
   287  072B  3466               	retlw	102
   288  072C  3400               	retlw	0
   289  072D  346D               	retlw	109
   290  072E  3400               	retlw	0
   291  072F  347D               	retlw	125
   292  0730  3400               	retlw	0
   293  0731  3407               	retlw	7
   294  0732  3400               	retlw	0
   295  0733  347F               	retlw	127
   296  0734  3400               	retlw	0
   297  0735  346F               	retlw	111
   298  0736  3400               	retlw	0
   299                           
   300                           	psect	idataBANK1
   301  06D3                     __pidataBANK1:
   302                           
   303                           ;initializer for _E
   304  06D3  343F               	retlw	63
   305  06D4  3400               	retlw	0
   306  06D5  3406               	retlw	6
   307  06D6  3400               	retlw	0
   308  06D7  345B               	retlw	91
   309  06D8  3400               	retlw	0
   310  06D9  344F               	retlw	79
   311  06DA  3400               	retlw	0
   312  06DB  3466               	retlw	102
   313  06DC  3400               	retlw	0
   314  06DD  346D               	retlw	109
   315  06DE  3400               	retlw	0
   316  06DF  347D               	retlw	125
   317  06E0  3400               	retlw	0
   318  06E1  3407               	retlw	7
   319  06E2  3400               	retlw	0
   320  06E3  347F               	retlw	127
   321  06E4  3400               	retlw	0
   322  06E5  346F               	retlw	111
   323  06E6  3400               	retlw	0
   324  0007                     _PORTC	set	7
   325  0008                     _PORTD	set	8
   326  0009                     _PORTE	set	9
   327  0005                     _PORTA	set	5
   328  0006                     _PORTB	set	6
   329  0086                     _TRISB	set	134
   330  0089                     _TRISE	set	137
   331  0085                     _TRISA	set	133
   332  0088                     _TRISD	set	136
   333  0087                     _TRISC	set	135
   334                           
   335                           	psect	cinit
   336  07D9                     start_initialization:	
   337                           ; #config settings
   338                           
   339  07D9                     __initialization:
   340                           
   341                           ; Initialize objects allocated to BANK1
   342  07D9  1383               	bcf	3,7	;select IRP bank0
   343  07DA  30B4               	movlw	low (__pdataBANK1+20)
   344  07DB  00FD               	movwf	btemp+-1
   345  07DC  3006               	movlw	high __pidataBANK1
   346  07DD  00FE               	movwf	btemp
   347  07DE  30D3               	movlw	low __pidataBANK1
   348  07DF  00FF               	movwf	btemp+1
   349  07E0  30A0               	movlw	low __pdataBANK1
   350  07E1  0084               	movwf	4
   351  07E2  120A  118A  26C4  120A  118A  	fcall	init_ram0
   352                           
   353                           ; Initialize objects allocated to BANK0
   354  07E7  3070               	movlw	low (__pdataBANK0+80)
   355  07E8  00FD               	movwf	btemp+-1
   356  07E9  3006               	movlw	high __pidataBANK0
   357  07EA  00FE               	movwf	btemp
   358  07EB  30E7               	movlw	low __pidataBANK0
   359  07EC  00FF               	movwf	btemp+1
   360  07ED  3020               	movlw	low __pdataBANK0
   361  07EE  0084               	movwf	4
   362  07EF  120A  118A  26C4  120A  118A  	fcall	init_ram0
   363                           
   364                           ; Clear objects allocated to COMMON
   365  07F4  01F0               	clrf	__pbssCOMMON& (0+127)
   366  07F5  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   367  07F6  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   368  07F7  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   369  07F8  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   370  07F9  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   371  07FA  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   372  07FB  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   373  07FC                     end_of_initialization:	
   374                           ;End of C runtime variable initialization code
   375                           
   376  07FC                     __end_of__initialization:
   377  07FC  0183               	clrf	3
   378  07FD  120A  118A  2F37   	ljmp	_main	;jump to C main() function
   379                           
   380                           	psect	bssCOMMON
   381  0070                     __pbssCOMMON:
   382  0070                     _l:
   383  0070                     	ds	2
   384  0072                     _k:
   385  0072                     	ds	2
   386  0074                     _j:
   387  0074                     	ds	2
   388  0076                     _i:
   389  0076                     	ds	2
   390                           
   391                           	psect	dataBANK0
   392  0020                     __pdataBANK0:
   393  0020                     _D:
   394  0020                     	ds	20
   395  0034                     _C:
   396  0034                     	ds	20
   397  0048                     _B:
   398  0048                     	ds	20
   399  005C                     _A:
   400  005C                     	ds	20
   401                           
   402                           	psect	dataBANK1
   403  00A0                     __pdataBANK1:
   404  00A0                     _E:
   405  00A0                     	ds	20
   406                           
   407                           	psect	inittext
   408  06C0                     init_fetch0:	
   409                           ;	Called with low address in FSR and high address in W
   410                           
   411  06C0  087E               	movf	btemp,w
   412  06C1  008A               	movwf	10
   413  06C2  087F               	movf	btemp+1,w
   414  06C3  0082               	movwf	2
   415  06C4                     init_ram0:	
   416                           ;Called with:
   417                           ;	high address of idata address in btemp 
   418                           ;	low address of idata address in btemp+1 
   419                           ;	low address of data in FSR
   420                           ;	high address + 1 of data in btemp-1
   421                           
   422  06C4  120A  118A  26C0  120A  118A  	fcall	init_fetch0
   423  06C9  0080               	movwf	0
   424  06CA  0A84               	incf	4,f
   425  06CB  0804               	movf	4,w
   426  06CC  067D               	xorwf	btemp+-1,w
   427  06CD  1903               	btfsc	3,2
   428  06CE  3400               	retlw	0
   429  06CF  0AFF               	incf	btemp+1,f
   430  06D0  1903               	btfsc	3,2
   431  06D1  0AFE               	incf	btemp,f
   432  06D2  2EC4               	goto	init_ram0
   433                           
   434                           	psect	cstackCOMMON
   435  0078                     __pcstackCOMMON:
   436  0078                     ?_main:
   437  0078                     ??_main:	
   438                           ; 1 bytes @ 0x0
   439                           
   440                           
   441                           ; 1 bytes @ 0x0
   442  0078                     	ds	2
   443                           
   444                           	psect	maintext
   445  0737                     __pmaintext:	
   446 ;;
   447 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   448 ;;
   449 ;; *************** function _main *****************
   450 ;; Defined at:
   451 ;;		line 37 in file "newmain.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   460 ;; Tracked objects:
   461 ;;		On entry : B00/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   465 ;;      Params:         0       0       0       0       0
   466 ;;      Locals:         0       0       0       0       0
   467 ;;      Temps:          2       0       0       0       0
   468 ;;      Totals:         2       0       0       0       0
   469 ;;Total ram usage:        2 bytes
   470 ;; This function calls:
   471 ;;		Nothing
   472 ;; This function is called by:
   473 ;;		Startup code after reset
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477  0737                     _main:	
   478                           ;psect for function _main
   479                           
   480  0737                     l683:	
   481                           ;incstack = 0
   482                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   483                           
   484                           
   485                           ;newmain.c: 39:     TRISC = 0;
   486  0737  1683               	bsf	3,5	;RP0=1, select bank1
   487  0738  1303               	bcf	3,6	;RP1=0, select bank1
   488  0739  0187               	clrf	7	;volatile
   489                           
   490                           ;newmain.c: 40:     TRISD = 0;
   491  073A  0188               	clrf	8	;volatile
   492                           
   493                           ;newmain.c: 41:     TRISA = 0;
   494  073B  0185               	clrf	5	;volatile
   495                           
   496                           ;newmain.c: 42:     TRISE = 0;
   497  073C  0189               	clrf	9	;volatile
   498                           
   499                           ;newmain.c: 43:     TRISB = 0;
   500  073D  0186               	clrf	6	;volatile
   501                           
   502                           ;newmain.c: 45:     l = 0;
   503  073E  01F0               	clrf	_l
   504  073F  01F1               	clrf	_l+1
   505                           
   506                           ;newmain.c: 46:     while(l < 6)
   507  0740  2FC9               	goto	l715
   508  0741                     l685:
   509                           
   510                           ;newmain.c: 47:     {;newmain.c: 48:         PORTB = E[l];
   511  0741  0870               	movf	_l,w
   512  0742  00F8               	movwf	??_main
   513  0743  0778               	addwf	??_main,w
   514  0744  3EA0               	addlw	(low (_E| 0))& (0+255)
   515  0745  0084               	movwf	4
   516  0746  1383               	bcf	3,7	;select IRP bank1
   517  0747  0800               	movf	0,w
   518  0748  1283               	bcf	3,5	;RP0=0, select bank0
   519  0749  1303               	bcf	3,6	;RP1=0, select bank0
   520  074A  0086               	movwf	6	;volatile
   521  074B                     l687:
   522                           
   523                           ;newmain.c: 49:         k = 0;
   524  074B  01F2               	clrf	_k
   525  074C  01F3               	clrf	_k+1
   526                           
   527                           ;newmain.c: 50:         while(k<10)
   528  074D  2FB4               	goto	l711
   529  074E                     l689:
   530                           
   531                           ;newmain.c: 51:         {;newmain.c: 52:             PORTA = C[k];
   532  074E  0872               	movf	_k,w
   533  074F  00F8               	movwf	??_main
   534  0750  0778               	addwf	??_main,w
   535  0751  3E34               	addlw	(low (_C| 0))& (0+255)
   536  0752  0084               	movwf	4
   537  0753  1383               	bcf	3,7	;select IRP bank0
   538  0754  0800               	movf	0,w
   539  0755  1283               	bcf	3,5	;RP0=0, select bank0
   540  0756  1303               	bcf	3,6	;RP1=0, select bank0
   541  0757  0085               	movwf	5	;volatile
   542                           
   543                           ;newmain.c: 53:             PORTE = D[k];
   544  0758  0872               	movf	_k,w
   545  0759  00F8               	movwf	??_main
   546  075A  0778               	addwf	??_main,w
   547  075B  3E20               	addlw	(low (_D| 0))& (0+255)
   548  075C  0084               	movwf	4
   549  075D  0800               	movf	0,w
   550  075E  0089               	movwf	9	;volatile
   551  075F                     l691:
   552                           
   553                           ;newmain.c: 54:             j = 0;
   554  075F  01F4               	clrf	_j
   555  0760  01F5               	clrf	_j+1
   556                           
   557                           ;newmain.c: 55:             while(j < 6)
   558  0761  2F9F               	goto	l707
   559  0762                     l693:
   560                           
   561                           ;newmain.c: 56:             {;newmain.c: 57:                 PORTD = B[j];
   562  0762  0874               	movf	_j,w
   563  0763  00F8               	movwf	??_main
   564  0764  0778               	addwf	??_main,w
   565  0765  3E48               	addlw	(low (_B| 0))& (0+255)
   566  0766  0084               	movwf	4
   567  0767  1383               	bcf	3,7	;select IRP bank0
   568  0768  0800               	movf	0,w
   569  0769  1283               	bcf	3,5	;RP0=0, select bank0
   570  076A  1303               	bcf	3,6	;RP1=0, select bank0
   571  076B  0088               	movwf	8	;volatile
   572  076C                     l695:
   573                           
   574                           ;newmain.c: 58:                 i = 0;
   575  076C  01F6               	clrf	_i
   576  076D  01F7               	clrf	_i+1
   577                           
   578                           ;newmain.c: 59:                 while(i < 10)
   579  076E  2F8A               	goto	l703
   580  076F                     l697:
   581                           
   582                           ;newmain.c: 60:                 {;newmain.c: 61:                     PORTC = A[i];
   583  076F  0876               	movf	_i,w
   584  0770  00F8               	movwf	??_main
   585  0771  0778               	addwf	??_main,w
   586  0772  3E5C               	addlw	(low (_A| 0))& (0+255)
   587  0773  0084               	movwf	4
   588  0774  1383               	bcf	3,7	;select IRP bank0
   589  0775  0800               	movf	0,w
   590  0776  1283               	bcf	3,5	;RP0=0, select bank0
   591  0777  1303               	bcf	3,6	;RP1=0, select bank0
   592  0778  0087               	movwf	7	;volatile
   593  0779                     l699:
   594                           
   595                           ;newmain.c: 62:                     i = i +1;
   596  0779  0876               	movf	_i,w
   597  077A  3E01               	addlw	1
   598  077B  00F6               	movwf	_i
   599  077C  0877               	movf	_i+1,w
   600  077D  1803               	skipnc
   601  077E  3E01               	addlw	1
   602  077F  3E00               	addlw	0
   603  0780  00F7               	movwf	_i+1
   604  0781                     l701:
   605                           
   606                           ;newmain.c: 63:                     _delay((unsigned long)((100)*(500000/4000.0)));
   607  0781  3011               	movlw	17
   608  0782  00F9               	movwf	??_main+1
   609  0783  303A               	movlw	58
   610  0784  00F8               	movwf	??_main
   611  0785                     u97:
   612  0785  0BF8               	decfsz	??_main,f
   613  0786  2F85               	goto	u97
   614  0787  0BF9               	decfsz	??_main+1,f
   615  0788  2F85               	goto	u97
   616  0789  0000               	nop
   617  078A                     l703:
   618                           
   619                           ;newmain.c: 59:                 while(i < 10)
   620  078A  0877               	movf	_i+1,w
   621  078B  3A80               	xorlw	128
   622  078C  00FF               	movwf	btemp+1
   623  078D  3080               	movlw	128
   624  078E  027F               	subwf	btemp+1,w
   625  078F  1D03               	skipz
   626  0790  2F93               	goto	u55
   627  0791  300A               	movlw	10
   628  0792  0276               	subwf	_i,w
   629  0793                     u55:
   630  0793  1C03               	skipc
   631  0794  2F96               	goto	u51
   632  0795  2F97               	goto	u50
   633  0796                     u51:
   634  0796  2F6F               	goto	l697
   635  0797                     u50:
   636  0797                     l705:
   637                           
   638                           ;newmain.c: 65:                 j = j +1;
   639  0797  0874               	movf	_j,w
   640  0798  3E01               	addlw	1
   641  0799  00F4               	movwf	_j
   642  079A  0875               	movf	_j+1,w
   643  079B  1803               	skipnc
   644  079C  3E01               	addlw	1
   645  079D  3E00               	addlw	0
   646  079E  00F5               	movwf	_j+1
   647  079F                     l707:
   648                           
   649                           ;newmain.c: 55:             while(j < 6)
   650  079F  0875               	movf	_j+1,w
   651  07A0  3A80               	xorlw	128
   652  07A1  00FF               	movwf	btemp+1
   653  07A2  3080               	movlw	128
   654  07A3  027F               	subwf	btemp+1,w
   655  07A4  1D03               	skipz
   656  07A5  2FA8               	goto	u65
   657  07A6  3006               	movlw	6
   658  07A7  0274               	subwf	_j,w
   659  07A8                     u65:
   660  07A8  1C03               	skipc
   661  07A9  2FAB               	goto	u61
   662  07AA  2FAC               	goto	u60
   663  07AB                     u61:
   664  07AB  2F62               	goto	l693
   665  07AC                     u60:
   666  07AC                     l709:
   667                           
   668                           ;newmain.c: 67:             k = k +1;
   669  07AC  0872               	movf	_k,w
   670  07AD  3E01               	addlw	1
   671  07AE  00F2               	movwf	_k
   672  07AF  0873               	movf	_k+1,w
   673  07B0  1803               	skipnc
   674  07B1  3E01               	addlw	1
   675  07B2  3E00               	addlw	0
   676  07B3  00F3               	movwf	_k+1
   677  07B4                     l711:
   678                           
   679                           ;newmain.c: 50:         while(k<10)
   680  07B4  0873               	movf	_k+1,w
   681  07B5  3A80               	xorlw	128
   682  07B6  00FF               	movwf	btemp+1
   683  07B7  3080               	movlw	128
   684  07B8  027F               	subwf	btemp+1,w
   685  07B9  1D03               	skipz
   686  07BA  2FBD               	goto	u75
   687  07BB  300A               	movlw	10
   688  07BC  0272               	subwf	_k,w
   689  07BD                     u75:
   690  07BD  1C03               	skipc
   691  07BE  2FC0               	goto	u71
   692  07BF  2FC1               	goto	u70
   693  07C0                     u71:
   694  07C0  2F4E               	goto	l689
   695  07C1                     u70:
   696  07C1                     l713:
   697                           
   698                           ;newmain.c: 69:         l = l +1;
   699  07C1  0870               	movf	_l,w
   700  07C2  3E01               	addlw	1
   701  07C3  00F0               	movwf	_l
   702  07C4  0871               	movf	_l+1,w
   703  07C5  1803               	skipnc
   704  07C6  3E01               	addlw	1
   705  07C7  3E00               	addlw	0
   706  07C8  00F1               	movwf	_l+1
   707  07C9                     l715:
   708                           
   709                           ;newmain.c: 46:     while(l < 6)
   710  07C9  0871               	movf	_l+1,w
   711  07CA  3A80               	xorlw	128
   712  07CB  00FF               	movwf	btemp+1
   713  07CC  3080               	movlw	128
   714  07CD  027F               	subwf	btemp+1,w
   715  07CE  1D03               	skipz
   716  07CF  2FD2               	goto	u85
   717  07D0  3006               	movlw	6
   718  07D1  0270               	subwf	_l,w
   719  07D2                     u85:
   720  07D2  1C03               	skipc
   721  07D3  2FD5               	goto	u81
   722  07D4  2FD6               	goto	u80
   723  07D5                     u81:
   724  07D5  2F41               	goto	l685
   725  07D6                     u80:
   726  07D6                     l57:
   727  07D6  120A  118A  2800   	ljmp	start
   728  07D9                     __end_of_main:
   729  007E                     btemp	set	126	;btemp
   730  007E                     wtemp0	set	126
   731                           
   732                           	psect	idloc
   733                           
   734                           ;Config register IDLOC0 @ 0x2000
   735                           ;	unspecified, using default values
   736  2000                     	org	8192
   737  2000  3FFF               	dw	16383
   738                           
   739                           ;Config register IDLOC1 @ 0x2001
   740                           ;	unspecified, using default values
   741  2001                     	org	8193
   742  2001  3FFF               	dw	16383
   743                           
   744                           ;Config register IDLOC2 @ 0x2002
   745                           ;	unspecified, using default values
   746  2002                     	org	8194
   747  2002  3FFF               	dw	16383
   748                           
   749                           ;Config register IDLOC3 @ 0x2003
   750                           ;	unspecified, using default values
   751  2003                     	org	8195
   752  2003  3FFF               	dw	16383
   753                           
   754                           	psect	config
   755                           
   756                           ;Config register CONFIG1 @ 0x2007
   757                           ;	Oscillator Selection bits
   758                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   759                           ;	Watchdog Timer Enable bit
   760                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   761                           ;	Power-up Timer Enable bit
   762                           ;	PWRTE = ON, PWRT enabled
   763                           ;	RE3/MCLR pin function select bit
   764                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   765                           ;	Code Protection bit
   766                           ;	CP = OFF, Program memory code protection is disabled
   767                           ;	Data Code Protection bit
   768                           ;	CPD = OFF, Data memory code protection is disabled
   769                           ;	Brown Out Reset Selection bits
   770                           ;	BOREN = OFF, BOR disabled
   771                           ;	Internal External Switchover bit
   772                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   773                           ;	Fail-Safe Clock Monitor Enabled bit
   774                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   775                           ;	Low Voltage Programming Enable bit
   776                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
   777                           ;	In-Circuit Debugger Mode bit
   778                           ;	DEBUG = 0x1, unprogrammed default
   779  2007                     	org	8199
   780  2007  30C4               	dw	12484
   781                           
   782                           ;Config register CONFIG2 @ 0x2008
   783                           ;	Brown-out Reset Selection bit
   784                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   785                           ;	Flash Program Memory Self Write Enable bits
   786                           ;	WRT = OFF, Write protection off
   787  2008                     	org	8200
   788  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        100
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      10
    BANK0            80      0      80
    BANK1            80      0      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      14       7       25.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      2       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      6E      12        0.0%
ABS                  0      0      6E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Mar 03 19:55:54 2022

                      _A 005C                        _B 0048                        _C 0034  
                      _D 0020                        _E 00A0                        _i 0076  
                      _j 0074                        _k 0072                        _l 0070  
                      pc 0002                       l57 07D6                       u50 0797  
                     u51 0796                       u60 07AC                       u61 07AB  
                     u70 07C1                       u71 07C0                       u55 0793  
                     u80 07D6                       u81 07D5                       u65 07A8  
                     u75 07BD                       u85 07D2                       u97 0785  
                     fsr 0004                      l701 0781                      l703 078A  
                    l711 07B4                      l713 07C1                      l705 0797  
                    l707 079F                      l715 07C9                      l709 07AC  
                    l691 075F                      l683 0737                      l693 0762  
                    l685 0741                      l695 076C                      l687 074B  
                    l697 076F                      l689 074E                      l699 0779  
                    fsr0 0004                      indf 0000                     _main 0737  
                   btemp 007E                     start 0000                    ?_main 0078  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07D9             __end_of_main 07D9  
                 ??_main 0078  __end_of__initialization 07FC           __pcstackCOMMON 0078  
           __pidataBANK0 06E7             __pidataBANK1 06D3               __pmaintext 0737  
   end_of_initialization 07FC      start_initialization 07D9               init_fetch0 06C0  
            __pdataBANK0 0020              __pdataBANK1 00A0              __pbssCOMMON 0070  
              ___latbits 0002                 init_ram0 06C4  
