

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Mar 29 10:25:08 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1508
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	inittext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x120,80
    15                           	dabs	1,0xA0,80
    16                           	dabs	1,0x2050,0,_A
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F1508 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  008C                     	;# 
    82  008D                     	;# 
    83  008E                     	;# 
    84  0091                     	;# 
    85  0092                     	;# 
    86  0093                     	;# 
    87  0095                     	;# 
    88  0096                     	;# 
    89  0097                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  009F                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  010E                     	;# 
   101  0111                     	;# 
   102  0112                     	;# 
   103  0113                     	;# 
   104  0114                     	;# 
   105  0115                     	;# 
   106  0116                     	;# 
   107  0117                     	;# 
   108  0118                     	;# 
   109  0119                     	;# 
   110  011D                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  018E                     	;# 
   114  0191                     	;# 
   115  0191                     	;# 
   116  0192                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0194                     	;# 
   120  0195                     	;# 
   121  0196                     	;# 
   122  0197                     	;# 
   123  0199                     	;# 
   124  019A                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019C                     	;# 
   128  019D                     	;# 
   129  019E                     	;# 
   130  019F                     	;# 
   131  020C                     	;# 
   132  020D                     	;# 
   133  0211                     	;# 
   134  0211                     	;# 
   135  0212                     	;# 
   136  0212                     	;# 
   137  0213                     	;# 
   138  0213                     	;# 
   139  0214                     	;# 
   140  0214                     	;# 
   141  0215                     	;# 
   142  0215                     	;# 
   143  0215                     	;# 
   144  0216                     	;# 
   145  0216                     	;# 
   146  0217                     	;# 
   147  0217                     	;# 
   148  0391                     	;# 
   149  0392                     	;# 
   150  0393                     	;# 
   151  0394                     	;# 
   152  0395                     	;# 
   153  0396                     	;# 
   154  0498                     	;# 
   155  0498                     	;# 
   156  0499                     	;# 
   157  049A                     	;# 
   158  049B                     	;# 
   159  049B                     	;# 
   160  049C                     	;# 
   161  049D                     	;# 
   162  049E                     	;# 
   163  049F                     	;# 
   164  0611                     	;# 
   165  0612                     	;# 
   166  0613                     	;# 
   167  0613                     	;# 
   168  0614                     	;# 
   169  0615                     	;# 
   170  0616                     	;# 
   171  0616                     	;# 
   172  0617                     	;# 
   173  0618                     	;# 
   174  0619                     	;# 
   175  0619                     	;# 
   176  061A                     	;# 
   177  061B                     	;# 
   178  061C                     	;# 
   179  061C                     	;# 
   180  0691                     	;# 
   181  0692                     	;# 
   182  0693                     	;# 
   183  0694                     	;# 
   184  0695                     	;# 
   185  0F0F                     	;# 
   186  0F10                     	;# 
   187  0F11                     	;# 
   188  0F12                     	;# 
   189  0F13                     	;# 
   190  0F14                     	;# 
   191  0F15                     	;# 
   192  0F16                     	;# 
   193  0F17                     	;# 
   194  0F18                     	;# 
   195  0F19                     	;# 
   196  0F1A                     	;# 
   197  0F1B                     	;# 
   198  0F1C                     	;# 
   199  0F1D                     	;# 
   200  0F1E                     	;# 
   201  0F1F                     	;# 
   202  0F20                     	;# 
   203  0F21                     	;# 
   204  0F22                     	;# 
   205  0F23                     	;# 
   206  0F24                     	;# 
   207  0F25                     	;# 
   208  0F26                     	;# 
   209  0F27                     	;# 
   210  0F28                     	;# 
   211  0F29                     	;# 
   212  0F2A                     	;# 
   213  0F2B                     	;# 
   214  0F2C                     	;# 
   215  0F2D                     	;# 
   216  0F2E                     	;# 
   217  0F2F                     	;# 
   218  0F8C                     	;# 
   219  0F8D                     	;# 
   220  0F91                     	;# 
   221  0F95                     	;# 
   222  0F96                     	;# 
   223  0F97                     	;# 
   224  0F9C                     	;# 
   225  0F9D                     	;# 
   226  0F9E                     	;# 
   227  0FE3                     	;# 
   228  0FE4                     	;# 
   229  0FE5                     	;# 
   230  0FE6                     	;# 
   231  0FE7                     	;# 
   232  0FE8                     	;# 
   233  0FE9                     	;# 
   234  0FEA                     	;# 
   235  0FEB                     	;# 
   236  0FED                     	;# 
   237  0FEE                     	;# 
   238  0FEF                     	;_A
   239                           
   240                           	psect	idataBIGRAM
   241  074F                     __pidataBIGRAM:
   242                           
   243                           ;initializer for _A
   244  074F  3400               	retlw	0
   245  0750  3400               	retlw	0
   246  0751  3400               	retlw	0
   247  0752  3400               	retlw	0
   248  0753  3400               	retlw	0
   249  0754  3400               	retlw	0
   250  0755  3400               	retlw	0
   251  0756  3400               	retlw	0
   252  0757  3400               	retlw	0
   253  0758  3400               	retlw	0
   254  0759  3400               	retlw	0
   255  075A  3400               	retlw	0
   256  075B  3401               	retlw	1
   257  075C  3400               	retlw	0
   258  075D  3401               	retlw	1
   259  075E  3400               	retlw	0
   260  075F  3401               	retlw	1
   261  0760  3400               	retlw	0
   262  0761  3400               	retlw	0
   263  0762  3400               	retlw	0
   264  0763  3400               	retlw	0
   265  0764  3400               	retlw	0
   266  0765  3401               	retlw	1
   267  0766  3400               	retlw	0
   268  0767  3401               	retlw	1
   269  0768  3400               	retlw	0
   270  0769  3401               	retlw	1
   271  076A  3400               	retlw	0
   272  076B  3401               	retlw	1
   273  076C  3400               	retlw	0
   274  076D  3401               	retlw	1
   275  076E  3400               	retlw	0
   276  076F  3400               	retlw	0
   277  0770  3400               	retlw	0
   278  0771  3400               	retlw	0
   279  0772  3400               	retlw	0
   280  0773  3401               	retlw	1
   281  0774  3400               	retlw	0
   282  0775  3400               	retlw	0
   283  0776  3400               	retlw	0
   284  0777  3400               	retlw	0
   285  0778  3400               	retlw	0
   286  0779  3401               	retlw	1
   287  077A  3400               	retlw	0
   288  077B  3400               	retlw	0
   289  077C  3400               	retlw	0
   290  077D  3401               	retlw	1
   291  077E  3400               	retlw	0
   292  077F  3400               	retlw	0
   293  0780  3400               	retlw	0
   294  0781  3400               	retlw	0
   295  0782  3400               	retlw	0
   296  0783  3400               	retlw	0
   297  0784  3400               	retlw	0
   298  0785  3400               	retlw	0
   299  0786  3400               	retlw	0
   300  0787  3401               	retlw	1
   301  0788  3400               	retlw	0
   302  0789  3401               	retlw	1
   303  078A  3400               	retlw	0
   304  078B  3400               	retlw	0
   305  078C  3400               	retlw	0
   306  078D  3401               	retlw	1
   307  078E  3400               	retlw	0
   308  078F  3401               	retlw	1
   309  0790  3400               	retlw	0
   310  0791  3400               	retlw	0
   311  0792  3400               	retlw	0
   312  0793  3400               	retlw	0
   313  0794  3400               	retlw	0
   314  0795  3401               	retlw	1
   315  0796  3400               	retlw	0
   316  0797  3401               	retlw	1
   317  0798  3400               	retlw	0
   318  0799  3400               	retlw	0
   319  079A  3400               	retlw	0
   320  079B  3400               	retlw	0
   321  079C  3400               	retlw	0
   322  079D  3401               	retlw	1
   323  079E  3400               	retlw	0
   324  079F  3400               	retlw	0
   325  07A0  3400               	retlw	0
   326  07A1  3401               	retlw	1
   327  07A2  3400               	retlw	0
   328  07A3  3400               	retlw	0
   329  07A4  3400               	retlw	0
   330  07A5  3400               	retlw	0
   331  07A6  3400               	retlw	0
   332  07A7  3401               	retlw	1
   333  07A8  3400               	retlw	0
   334  07A9  3400               	retlw	0
   335  07AA  3400               	retlw	0
   336  07AB  3400               	retlw	0
   337  07AC  3400               	retlw	0
   338  07AD  3401               	retlw	1
   339  07AE  3400               	retlw	0
   340  07AF  3400               	retlw	0
   341  07B0  3400               	retlw	0
   342  07B1  3401               	retlw	1
   343  07B2  3400               	retlw	0
   344  07B3  3400               	retlw	0
   345  07B4  3400               	retlw	0
   346  07B5  3400               	retlw	0
   347  07B6  3400               	retlw	0
   348  07B7  3400               	retlw	0
   349  07B8  3400               	retlw	0
   350  07B9  3400               	retlw	0
   351  07BA  3400               	retlw	0
   352  07BB  3400               	retlw	0
   353  07BC  3400               	retlw	0
   354  07BD  3401               	retlw	1
   355  07BE  3400               	retlw	0
   356  07BF  3400               	retlw	0
   357  07C0  3400               	retlw	0
   358  07C1  3400               	retlw	0
   359  07C2  3400               	retlw	0
   360  07C3  3400               	retlw	0
   361  07C4  3400               	retlw	0
   362  07C5  3401               	retlw	1
   363  07C6  3400               	retlw	0
   364  07C7  3401               	retlw	1
   365  07C8  3400               	retlw	0
   366  07C9  3401               	retlw	1
   367  07CA  3400               	retlw	0
   368  07CB  3401               	retlw	1
   369  07CC  3400               	retlw	0
   370  07CD  3401               	retlw	1
   371  07CE  3400               	retlw	0
   372  07CF  3400               	retlw	0
   373  07D0  3400               	retlw	0
   374  07D1  3400               	retlw	0
   375  07D2  3400               	retlw	0
   376  07D3  3400               	retlw	0
   377  07D4  3400               	retlw	0
   378  07D5  3400               	retlw	0
   379  07D6  3400               	retlw	0
   380  07D7  3400               	retlw	0
   381  07D8  3400               	retlw	0
   382  07D9  3400               	retlw	0
   383  07DA  3400               	retlw	0
   384  07DB  3400               	retlw	0
   385  07DC  3400               	retlw	0
   386  07DD  3401               	retlw	1
   387  07DE  3400               	retlw	0
   388  07DF  3400               	retlw	0
   389  07E0  3400               	retlw	0
   390  07E1  3400               	retlw	0
   391  07E2  3400               	retlw	0
   392  07E3  3400               	retlw	0
   393  07E4  3400               	retlw	0
   394  07E5  3400               	retlw	0
   395  07E6  3400               	retlw	0
   396  07E7  3401               	retlw	1
   397  07E8  3400               	retlw	0
   398  07E9  3400               	retlw	0
   399  07EA  3400               	retlw	0
   400  07EB  3400               	retlw	0
   401  07EC  3400               	retlw	0
   402  07ED  3401               	retlw	1
   403  07EE  3400               	retlw	0
   404  008E                     _TRISCbits	set	142
   405  010E                     _LATCbits	set	270
   406                           
   407                           	psect	cinit
   408  07EF                     start_initialization:	
   409                           ; #config settings
   410                           
   411  07EF                     __initialization:	;BIGRAM
   412                           
   413                           ; Initialize objects allocated to BIGRAM
   414  07EF  304F               	movlw	low __pidataBIGRAM
   415  07F0  0084               	movwf	4
   416  07F1  3087               	movlw	(high __pidataBIGRAM)| (0+128)
   417  07F2  0085               	movwf	5
   418  07F3  3050               	movlw	low (0+8272)
   419  07F4  0086               	movwf	6
   420  07F5  3020               	movlw	high (0+8272)
   421  07F6  0087               	movwf	7
   422  07F7  3000               	movlw	0
   423  07F8  00FF               	movwf	btemp+1
   424  07F9  30A0               	movlw	160
   425  07FA  3186  2689  3187   	fcall	init_ram
   426  07FD                     end_of_initialization:	
   427                           ;End of C runtime variable initialization code
   428                           
   429  07FD                     __end_of__initialization:
   430  07FD  0020               	movlb	0
   431  07FE  3186  2EEF         	ljmp	_main	;jump to C main() function
   432                           
   433                           	psect	inittext
   434  0689                     init_ram:
   435  0689  00FE               	movwf	btemp
   436  068A                     initloop:
   437  068A  0012               	moviw fsr0++
   438  068B  001E               	movwi fsr1++
   439  068C  3001               	movlw	1
   440  068D  02FE               	subwf	btemp,f
   441  068E  3000               	movlw	0
   442  068F  3BFF               	subwfb	btemp+1,f
   443  0690  087F               	movf	btemp+1,w
   444  0691  047E               	iorwf	btemp,w
   445  0692  1D03               	skipz
   446  0693  2E8A               	goto	initloop
   447  0694  3400               	retlw	0
   448                           
   449                           	psect	cstackCOMMON
   450  0070                     __pcstackCOMMON:
   451  0070                     ?_data:
   452  0070                     ??_data:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_main:	
   456                           ; 1 bytes @ 0x0
   457                           
   458                           
   459                           ; 1 bytes @ 0x0
   460  0070                     	ds	4
   461  0074                     data@a:
   462                           
   463                           ; 1 bytes @ 0x4
   464  0074                     	ds	1
   465  0075                     data@i:
   466                           
   467                           ; 2 bytes @ 0x5
   468  0075                     	ds	2
   469  0077                     ?_hienthi:
   470  0077                     hienthi@b:	
   471                           ; 1 bytes @ 0x7
   472                           
   473                           
   474                           ; 1 bytes @ 0x7
   475  0077                     	ds	1
   476  0078                     hienthi@c:
   477                           
   478                           ; 1 bytes @ 0x8
   479  0078                     	ds	1
   480  0079                     hienthi@d:
   481                           
   482                           ; 1 bytes @ 0x9
   483  0079                     	ds	1
   484  007A                     ??_hienthi:
   485  007A                     hienthi@a:	
   486                           ; 1 bytes @ 0xA
   487                           
   488                           
   489                           ; 1 bytes @ 0xA
   490  007A                     	ds	1
   491  007B                     ??_main:
   492                           
   493                           ; 1 bytes @ 0xB
   494  007B                     	ds	3
   495                           
   496                           	psect	cstackBANK0
   497  0020                     __pcstackBANK0:
   498  0020                     main@a:
   499                           
   500                           ; 2 bytes @ 0x0
   501  0020                     	ds	2
   502  0022                     main@b:
   503                           
   504                           ; 2 bytes @ 0x2
   505  0022                     	ds	2
   506  0024                     main@c:
   507                           
   508                           ; 2 bytes @ 0x4
   509  0024                     	ds	2
   510  0026                     main@d:
   511                           
   512                           ; 2 bytes @ 0x6
   513  0026                     	ds	2
   514                           
   515                           	psect	maintext
   516  06EF                     __pmaintext:	
   517 ;;
   518 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   519 ;;
   520 ;; *************** function _main *****************
   521 ;; Defined at:
   522 ;;		line 37 in file "newmain.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;  d               2    6[BANK0 ] int 
   527 ;;  c               2    4[BANK0 ] int 
   528 ;;  b               2    2[BANK0 ] int 
   529 ;;  a               2    0[BANK0 ] int 
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : B1F/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   539 ;;      Params:         0       0       0       0
   540 ;;      Locals:         0       8       0       0
   541 ;;      Temps:          3       0       0       0
   542 ;;      Totals:         3       8       0       0
   543 ;;Total ram usage:       11 bytes
   544 ;; Hardware stack levels required when called: 2
   545 ;; This function calls:
   546 ;;		_hienthi
   547 ;; This function is called by:
   548 ;;		Startup code after reset
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552  06EF                     _main:	
   553                           ;psect for function _main
   554                           
   555  06EF                     l626:	
   556                           ;incstack = 0
   557                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   558                           
   559                           
   560                           ;newmain.c: 38:     signed int a; signed int b; signed int c; signed int d;;newmain.c: 4
      +                          0:         TRISCbits.TRISC0 = 0;
   561  06EF  0021               	movlb	1	; select bank1
   562  06F0  100E               	bcf	14,0	;volatile
   563                           
   564                           ;newmain.c: 41:         TRISCbits.TRISC1 = 0;
   565  06F1  108E               	bcf	14,1	;volatile
   566                           
   567                           ;newmain.c: 42:         TRISCbits.TRISC2 = 0;
   568  06F2  110E               	bcf	14,2	;volatile
   569                           
   570                           ;newmain.c: 43:         LATCbits.LATC0 = 0;
   571  06F3  0022               	movlb	2	; select bank2
   572  06F4  100E               	bcf	14,0	;volatile
   573                           
   574                           ;newmain.c: 44:         LATCbits.LATC1 = 0;
   575  06F5  108E               	bcf	14,1	;volatile
   576                           
   577                           ;newmain.c: 45:         LATCbits.LATC2 = 0;
   578  06F6  110E               	bcf	14,2	;volatile
   579  06F7                     l628:
   580                           
   581                           ;newmain.c: 46:         a = 5;
   582  06F7  3005               	movlw	5
   583  06F8  0020               	movlb	0	; select bank0
   584  06F9  00A0               	movwf	main@a
   585  06FA  3000               	movlw	0
   586  06FB  00A1               	movwf	main@a+1
   587                           
   588                           ;newmain.c: 47:         while(a>=0)
   589  06FC  2F49               	goto	l654
   590  06FD                     l630:
   591                           
   592                           ;newmain.c: 48:         {;newmain.c: 49:             b = 9;
   593  06FD  3009               	movlw	9
   594  06FE  00A2               	movwf	main@b
   595  06FF  3000               	movlw	0
   596  0700  00A3               	movwf	main@b+1
   597                           
   598                           ;newmain.c: 50:             while(b>=0)
   599  0701  2F3F               	goto	l650
   600  0702                     l632:
   601                           
   602                           ;newmain.c: 51:             {;newmain.c: 52:                 c = 5;
   603  0702  3005               	movlw	5
   604  0703  00A4               	movwf	main@c
   605  0704  3000               	movlw	0
   606  0705  00A5               	movwf	main@c+1
   607                           
   608                           ;newmain.c: 53:                 while(c>=0)
   609  0706  2F35               	goto	l646
   610  0707                     l634:
   611                           
   612                           ;newmain.c: 54:                 {;newmain.c: 55:                     d = 9;
   613  0707  3009               	movlw	9
   614  0708  00A6               	movwf	main@d
   615  0709  3000               	movlw	0
   616  070A  00A7               	movwf	main@d+1
   617                           
   618                           ;newmain.c: 56:                     while(d>=0)
   619  070B  2F2B               	goto	l642
   620  070C                     l636:
   621                           
   622                           ;newmain.c: 57:                     {;newmain.c: 58:                             hienthi
      +                          (a,b,c,d);
   623  070C  0822               	movf	main@b,w
   624  070D  00FB               	movwf	??_main
   625  070E  087B               	movf	??_main,w
   626  070F  00F7               	movwf	hienthi@b
   627  0710  0824               	movf	main@c,w
   628  0711  00FC               	movwf	??_main+1
   629  0712  087C               	movf	??_main+1,w
   630  0713  00F8               	movwf	hienthi@c
   631  0714  0826               	movf	main@d,w
   632  0715  00FD               	movwf	??_main+2
   633  0716  087D               	movf	??_main+2,w
   634  0717  00F9               	movwf	hienthi@d
   635  0718  0820               	movf	main@a,w
   636  0719  3186  2695  3186   	fcall	_hienthi
   637  071C                     l638:
   638                           
   639                           ;newmain.c: 59:                             _delay((unsigned long)((100)*(500000/4000.0)
      +                          ));
   640  071C  3011               	movlw	17
   641  071D  00FB               	movwf	??_main
   642  071E  303A               	movlw	58
   643  071F                     u117:
   644  071F  0B89               	decfsz	9,f
   645  0720  2F1F               	goto	u117
   646  0721  0BFB               	decfsz	??_main,f
   647  0722  2F1F               	goto	u117
   648  0723  3200               	nop2
   649  0724                     l640:
   650                           
   651                           ;newmain.c: 60:                             d = d-1;
   652  0724  0020               	movlb	0	; select bank0
   653  0725  0826               	movf	main@d,w
   654  0726  3EFF               	addlw	255
   655  0727  00A6               	movwf	main@d
   656  0728  30FF               	movlw	255
   657  0729  3D27               	addwfc	main@d+1,w
   658  072A  00A7               	movwf	main@d+1
   659  072B                     l642:
   660                           
   661                           ;newmain.c: 56:                     while(d>=0)
   662  072B  1FA7               	btfss	main@d+1,7
   663  072C  2F2E               	goto	u71
   664  072D  2F2F               	goto	u70
   665  072E                     u71:
   666  072E  2F0C               	goto	l636
   667  072F                     u70:
   668  072F                     l644:
   669                           
   670                           ;newmain.c: 61:                     } c = c-1;
   671  072F  0824               	movf	main@c,w
   672  0730  3EFF               	addlw	255
   673  0731  00A4               	movwf	main@c
   674  0732  30FF               	movlw	255
   675  0733  3D25               	addwfc	main@c+1,w
   676  0734  00A5               	movwf	main@c+1
   677  0735                     l646:
   678                           
   679                           ;newmain.c: 53:                 while(c>=0)
   680  0735  1FA5               	btfss	main@c+1,7
   681  0736  2F38               	goto	u81
   682  0737  2F39               	goto	u80
   683  0738                     u81:
   684  0738  2F07               	goto	l634
   685  0739                     u80:
   686  0739                     l648:
   687                           
   688                           ;newmain.c: 62:                 } b = b-1;
   689  0739  0822               	movf	main@b,w
   690  073A  3EFF               	addlw	255
   691  073B  00A2               	movwf	main@b
   692  073C  30FF               	movlw	255
   693  073D  3D23               	addwfc	main@b+1,w
   694  073E  00A3               	movwf	main@b+1
   695  073F                     l650:
   696                           
   697                           ;newmain.c: 50:             while(b>=0)
   698  073F  1FA3               	btfss	main@b+1,7
   699  0740  2F42               	goto	u91
   700  0741  2F43               	goto	u90
   701  0742                     u91:
   702  0742  2F02               	goto	l632
   703  0743                     u90:
   704  0743                     l652:
   705                           
   706                           ;newmain.c: 63:             } a = a-1;
   707  0743  0820               	movf	main@a,w
   708  0744  3EFF               	addlw	255
   709  0745  00A0               	movwf	main@a
   710  0746  30FF               	movlw	255
   711  0747  3D21               	addwfc	main@a+1,w
   712  0748  00A1               	movwf	main@a+1
   713  0749                     l654:
   714                           
   715                           ;newmain.c: 47:         while(a>=0)
   716  0749  1FA1               	btfss	main@a+1,7
   717  074A  2F4C               	goto	u101
   718  074B  2F4D               	goto	u100
   719  074C                     u101:
   720  074C  2EFD               	goto	l630
   721  074D                     u100:
   722  074D                     l34:
   723  074D  3180  2802         	ljmp	start
   724  074F                     __end_of_main:
   725                           
   726                           	psect	text1
   727  0695                     __ptext1:	
   728 ;; *************** function _hienthi *****************
   729 ;; Defined at:
   730 ;;		line 33 in file "newmain.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;  a               1    wreg     unsigned char 
   733 ;;  b               1    7[COMMON] unsigned char 
   734 ;;  c               1    8[COMMON] unsigned char 
   735 ;;  d               1    9[COMMON] unsigned char 
   736 ;; Auto vars:     Size  Location     Type
   737 ;;  a               1   10[COMMON] unsigned char 
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   747 ;;      Params:         3       0       0       0
   748 ;;      Locals:         1       0       0       0
   749 ;;      Temps:          0       0       0       0
   750 ;;      Totals:         4       0       0       0
   751 ;;Total ram usage:        4 bytes
   752 ;; Hardware stack levels used: 1
   753 ;; Hardware stack levels required when called: 1
   754 ;; This function calls:
   755 ;;		_data
   756 ;; This function is called by:
   757 ;;		_main
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761  0695                     _hienthi:	
   762                           ;psect for function _hienthi
   763                           
   764                           
   765                           ;incstack = 0
   766                           ; Regs used in _hienthi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   767                           ;hienthi@a stored from wreg
   768  0695  00FA               	movwf	hienthi@a
   769  0696                     l620:
   770                           
   771                           ;newmain.c: 34:         data(d); data(c); data(b); data(a);
   772  0696  0879               	movf	hienthi@d,w
   773  0697  3186  26AA  3186   	fcall	_data
   774  069A  0878               	movf	hienthi@c,w
   775  069B  3186  26AA  3186   	fcall	_data
   776  069E  0877               	movf	hienthi@b,w
   777  069F  3186  26AA  3186   	fcall	_data
   778  06A2  087A               	movf	hienthi@a,w
   779  06A3  3186  26AA  3186   	fcall	_data
   780  06A6                     l622:
   781                           
   782                           ;newmain.c: 35:         LATCbits.LATC2 = 1;
   783  06A6  0022               	movlb	2	; select bank2
   784  06A7  150E               	bsf	14,2	;volatile
   785  06A8                     l624:
   786                           
   787                           ;newmain.c: 36:         LATCbits.LATC2 = 0; }
   788  06A8  110E               	bcf	14,2	;volatile
   789  06A9                     l17:
   790  06A9  0008               	return
   791  06AA                     __end_of_hienthi:
   792                           
   793                           	psect	text2
   794  06AA                     __ptext2:	
   795 ;; *************** function _data *****************
   796 ;; Defined at:
   797 ;;		line 25 in file "newmain.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;  a               1    wreg     unsigned char 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;  a               1    4[COMMON] unsigned char 
   802 ;;  i               2    5[COMMON] int 
   803 ;; Return value:  Size  Location     Type
   804 ;;                  1    wreg      void 
   805 ;; Registers used:
   806 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   812 ;;      Params:         0       0       0       0
   813 ;;      Locals:         3       0       0       0
   814 ;;      Temps:          4       0       0       0
   815 ;;      Totals:         7       0       0       0
   816 ;;Total ram usage:        7 bytes
   817 ;; Hardware stack levels used: 1
   818 ;; This function calls:
   819 ;;		Nothing
   820 ;; This function is called by:
   821 ;;		_hienthi
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825  06AA                     _data:	
   826                           ;psect for function _data
   827                           
   828                           
   829                           ;incstack = 0
   830                           ; Regs used in _data: [wreg+fsr1l+fsr1h+status,2+status,0]
   831                           ;data@a stored from wreg
   832  06AA  00F4               	movwf	data@a
   833  06AB                     l608:
   834                           
   835                           ;newmain.c: 26:     signed int i;;newmain.c: 27:     for(i=8*a+7;i>=8*a;i--)
   836  06AB  0874               	movf	data@a,w
   837  06AC  00F0               	movwf	??_data
   838  06AD  01F1               	clrf	??_data+1
   839  06AE  35F0               	lslf	??_data,f
   840  06AF  0DF1               	rlf	??_data+1,f
   841  06B0  35F0               	lslf	??_data,f
   842  06B1  0DF1               	rlf	??_data+1,f
   843  06B2  35F0               	lslf	??_data,f
   844  06B3  0DF1               	rlf	??_data+1,f
   845  06B4  0870               	movf	??_data,w
   846  06B5  3E07               	addlw	7
   847  06B6  00F5               	movwf	data@i
   848  06B7  3000               	movlw	0
   849  06B8  3D71               	addwfc	??_data+1,w
   850  06B9  00F6               	movwf	data@i+1
   851  06BA  2ED7               	goto	l618
   852  06BB                     l610:
   853                           
   854                           ;newmain.c: 28:         {;newmain.c: 29:             LATCbits.LATC1 = A[i];
   855  06BB  0876               	movf	data@i+1,w
   856  06BC  00F1               	movwf	??_data+1
   857  06BD  0875               	movf	data@i,w
   858  06BE  00F0               	movwf	??_data
   859  06BF  35F0               	lslf	??_data,f
   860  06C0  0DF1               	rlf	??_data+1,f
   861  06C1  3050               	movlw	80
   862  06C2  00F2               	movwf	??_data+2
   863  06C3  3020               	movlw	32
   864  06C4  00F3               	movwf	??_data+3
   865  06C5  0870               	movf	??_data,w
   866  06C6  0772               	addwf	??_data+2,w
   867  06C7  0086               	movwf	6
   868  06C8  0871               	movf	??_data+1,w
   869  06C9  3D73               	addwfc	??_data+3,w
   870  06CA  0087               	movwf	7
   871  06CB  0C01               	rrf	1,w
   872  06CC  0022               	movlb	2	; select bank2
   873  06CD  1C03               	skipc
   874  06CE  108E               	bcf	14,1	;volatile
   875  06CF  1803               	skipnc
   876  06D0  148E               	bsf	14,1	;volatile
   877  06D1                     l612:
   878                           
   879                           ;newmain.c: 30:             LATCbits.LATC0 = 1;
   880  06D1  140E               	bsf	14,0	;volatile
   881  06D2                     l614:
   882                           
   883                           ;newmain.c: 31:             LATCbits.LATC0 = 0;
   884  06D2  100E               	bcf	14,0	;volatile
   885  06D3                     l616:
   886                           
   887                           ;newmain.c: 32:         } }
   888  06D3  30FF               	movlw	255
   889  06D4  07F5               	addwf	data@i,f
   890  06D5  30FF               	movlw	255
   891  06D6  3DF6               	addwfc	data@i+1,f
   892  06D7                     l618:
   893  06D7  0874               	movf	data@a,w
   894  06D8  00F0               	movwf	??_data
   895  06D9  01F1               	clrf	??_data+1
   896  06DA  35F0               	lslf	??_data,f
   897  06DB  0DF1               	rlf	??_data+1,f
   898  06DC  35F0               	lslf	??_data,f
   899  06DD  0DF1               	rlf	??_data+1,f
   900  06DE  35F0               	lslf	??_data,f
   901  06DF  0DF1               	rlf	??_data+1,f
   902  06E0  0876               	movf	data@i+1,w
   903  06E1  3A80               	xorlw	128
   904  06E2  00F2               	movwf	??_data+2
   905  06E3  0871               	movf	??_data+1,w
   906  06E4  3A80               	xorlw	128
   907  06E5  0272               	subwf	??_data+2,w
   908  06E6  1D03               	skipz
   909  06E7  2EEA               	goto	u65
   910  06E8  0870               	movf	??_data,w
   911  06E9  0275               	subwf	data@i,w
   912  06EA                     u65:
   913  06EA  1803               	skipnc
   914  06EB  2EED               	goto	u61
   915  06EC  2EEE               	goto	u60
   916  06ED                     u61:
   917  06ED  2EBB               	goto	l610
   918  06EE                     u60:
   919  06EE                     l14:
   920  06EE  0008               	return
   921  06EF                     __end_of_data:
   922  007E                     btemp	set	126	;btemp
   923  007E                     wtemp0	set	126
   924  2050                     
   925                           	psect	idloc
   926                           
   927                           ;Config register IDLOC0 @ 0x8000
   928                           ;	unspecified, using default values
   929  8000                     	org	32768
   930  8000  3FFF               	dw	16383
   931                           
   932                           ;Config register IDLOC1 @ 0x8001
   933                           ;	unspecified, using default values
   934  8001                     	org	32769
   935  8001  3FFF               	dw	16383
   936                           
   937                           ;Config register IDLOC2 @ 0x8002
   938                           ;	unspecified, using default values
   939  8002                     	org	32770
   940  8002  3FFF               	dw	16383
   941                           
   942                           ;Config register IDLOC3 @ 0x8003
   943                           ;	unspecified, using default values
   944  8003                     	org	32771
   945  8003  3FFF               	dw	16383
   946                           
   947                           	psect	config
   948                           
   949                           ;Config register CONFIG1 @ 0x8007
   950                           ;	Oscillator Selection Bits
   951                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
   952                           ;	Watchdog Timer Enable
   953                           ;	WDTE = OFF, WDT disabled
   954                           ;	Power-up Timer Enable
   955                           ;	PWRTE = OFF, PWRT disabled
   956                           ;	MCLR Pin Function Select
   957                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
   958                           ;	Flash Program Memory Code Protection
   959                           ;	CP = OFF, Program memory code protection is disabled
   960                           ;	Brown-out Reset Enable
   961                           ;	BOREN = OFF, Brown-out Reset disabled
   962                           ;	Clock Out Enable
   963                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   964                           ;	Internal/External Switchover Mode
   965                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
   966                           ;	Fail-Safe Clock Monitor Enable
   967                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   968  8007                     	org	32775
   969  8007  09E4               	dw	2532
   970                           
   971                           ;Config register CONFIG2 @ 0x8008
   972                           ;	Flash Memory Self-Write Protection
   973                           ;	WRT = OFF, Write protection off
   974                           ;	Stack Overflow/Underflow Reset Enable
   975                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
   976                           ;	Brown-out Reset Voltage Selection
   977                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   978                           ;	Low-Power Brown Out Reset
   979                           ;	LPBOR = OFF, Low-Power BOR is disabled
   980                           ;	Low-Voltage Programming Enable
   981                           ;	LVP = ON, Low-voltage programming enabled
   982  8008                     	org	32776
   983  8008  3DFF               	dw	15871

Data Sizes:
    Strings     0
    Constant    0
    Data        160
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8       8
    BANK1             0      0       0
    BANK2             0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_hienthi
    _hienthi->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0     678
                                             11 COMMON     3     3      0
                                              0 BANK0      8     8      0
                            _hienthi
 ---------------------------------------------------------------------------------
 (1) _hienthi                                              4     1      3     406
                                              7 COMMON     4     1      3
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 7     7      0      90
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _hienthi
     _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      8       8       6       10.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK1                0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK2                0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Mar 29 10:25:08 2022

                      _A 2050                       l14 06EE                       l17 06A9  
                     l34 074D                       u60 06EE                       u61 06ED  
                     u70 072F                       u71 072E                       u80 0739  
                     u65 06EA                       u81 0738                       u90 0743  
                     u91 0742                      l610 06BB                      l612 06D1  
                    l620 0696                      l614 06D2                      l622 06A6  
                    l630 06FD                      l616 06D3                      l608 06AB  
                    l624 06A8                      l640 0724                      l632 0702  
                    l618 06D7                      l642 072B                      l634 0707  
                    l650 073F                      l626 06EF                      l652 0743  
                    l644 072F                      l636 070C                      l628 06F7  
                    l638 071C                      l646 0735                      l654 0749  
                    l648 0739                      u100 074D                      u101 074C  
                    u117 071F                      wreg 0009                     _data 06AA  
                   _main 06EF                     fsr0h 0005                     fsr1h 0007  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   btemp 007E                     start 0002                    ?_data 0070  
                  ?_main 0070          __end_of_hienthi 06AA                    data@a 0074  
                  data@i 0075                    main@a 0020                    main@b 0022  
                  main@c 0024                    main@d 0026                    wtemp0 007E  
        __initialization 07EF             __end_of_data 06EF             __end_of_main 074F  
                 ??_data 0070                   ??_main 007B                ??_hienthi 007A  
           __pdataBIGRAM 2050  __end_of__initialization 07FD           __pcstackCOMMON 0070  
             __pmaintext 06EF                  __ptext1 0695                  __ptext2 06AA  
                _hienthi 0695     end_of_initialization 07FD                  init_ram 0689  
                initloop 068A                _TRISCbits 008E            __pidataBIGRAM 074F  
    start_initialization 07EF                ___latbits 0001            __pcstackBANK0 0020  
               ?_hienthi 0077                 _LATCbits 010E                 hienthi@a 007A  
               hienthi@b 0077                 hienthi@c 0078                 hienthi@d 0079  
