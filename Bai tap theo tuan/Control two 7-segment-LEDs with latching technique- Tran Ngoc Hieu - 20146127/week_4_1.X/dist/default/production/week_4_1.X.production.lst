

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Mar 08 12:17:23 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	inittext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x320,16
    13                           	dabs	1,0x2A0,80
    14                           	dabs	1,0x230,64
    15                           	dabs	1,0x2150,0,_A
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F1509 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  008C                     	;# 
    81  008D                     	;# 
    82  008E                     	;# 
    83  0091                     	;# 
    84  0092                     	;# 
    85  0093                     	;# 
    86  0095                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0099                     	;# 
    90  009A                     	;# 
    91  009B                     	;# 
    92  009B                     	;# 
    93  009C                     	;# 
    94  009D                     	;# 
    95  009E                     	;# 
    96  009F                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  010E                     	;# 
   100  0111                     	;# 
   101  0112                     	;# 
   102  0113                     	;# 
   103  0114                     	;# 
   104  0115                     	;# 
   105  0116                     	;# 
   106  0117                     	;# 
   107  0118                     	;# 
   108  0119                     	;# 
   109  011D                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  018E                     	;# 
   113  0191                     	;# 
   114  0191                     	;# 
   115  0192                     	;# 
   116  0193                     	;# 
   117  0193                     	;# 
   118  0194                     	;# 
   119  0195                     	;# 
   120  0196                     	;# 
   121  0197                     	;# 
   122  0199                     	;# 
   123  019A                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019C                     	;# 
   127  019D                     	;# 
   128  019E                     	;# 
   129  019F                     	;# 
   130  020C                     	;# 
   131  020D                     	;# 
   132  0211                     	;# 
   133  0211                     	;# 
   134  0212                     	;# 
   135  0212                     	;# 
   136  0213                     	;# 
   137  0213                     	;# 
   138  0214                     	;# 
   139  0214                     	;# 
   140  0215                     	;# 
   141  0215                     	;# 
   142  0215                     	;# 
   143  0216                     	;# 
   144  0216                     	;# 
   145  0217                     	;# 
   146  0217                     	;# 
   147  0391                     	;# 
   148  0392                     	;# 
   149  0393                     	;# 
   150  0394                     	;# 
   151  0395                     	;# 
   152  0396                     	;# 
   153  0498                     	;# 
   154  0498                     	;# 
   155  0499                     	;# 
   156  049A                     	;# 
   157  049B                     	;# 
   158  049B                     	;# 
   159  049C                     	;# 
   160  049D                     	;# 
   161  049E                     	;# 
   162  049F                     	;# 
   163  0611                     	;# 
   164  0612                     	;# 
   165  0613                     	;# 
   166  0613                     	;# 
   167  0614                     	;# 
   168  0615                     	;# 
   169  0616                     	;# 
   170  0616                     	;# 
   171  0617                     	;# 
   172  0618                     	;# 
   173  0619                     	;# 
   174  0619                     	;# 
   175  061A                     	;# 
   176  061B                     	;# 
   177  061C                     	;# 
   178  061C                     	;# 
   179  0691                     	;# 
   180  0692                     	;# 
   181  0693                     	;# 
   182  0694                     	;# 
   183  0695                     	;# 
   184  0F0F                     	;# 
   185  0F10                     	;# 
   186  0F11                     	;# 
   187  0F12                     	;# 
   188  0F13                     	;# 
   189  0F14                     	;# 
   190  0F15                     	;# 
   191  0F16                     	;# 
   192  0F17                     	;# 
   193  0F18                     	;# 
   194  0F19                     	;# 
   195  0F1A                     	;# 
   196  0F1B                     	;# 
   197  0F1C                     	;# 
   198  0F1D                     	;# 
   199  0F1E                     	;# 
   200  0F1F                     	;# 
   201  0F20                     	;# 
   202  0F21                     	;# 
   203  0F22                     	;# 
   204  0F23                     	;# 
   205  0F24                     	;# 
   206  0F25                     	;# 
   207  0F26                     	;# 
   208  0F27                     	;# 
   209  0F28                     	;# 
   210  0F29                     	;# 
   211  0F2A                     	;# 
   212  0F2B                     	;# 
   213  0F2C                     	;# 
   214  0F2D                     	;# 
   215  0F2E                     	;# 
   216  0F2F                     	;# 
   217  0F8C                     	;# 
   218  0F8D                     	;# 
   219  0F91                     	;# 
   220  0F95                     	;# 
   221  0F96                     	;# 
   222  0F97                     	;# 
   223  0F9C                     	;# 
   224  0F9D                     	;# 
   225  0F9E                     	;# 
   226  0FE3                     	;# 
   227  0FE4                     	;# 
   228  0FE5                     	;# 
   229  0FE6                     	;# 
   230  0FE7                     	;# 
   231  0FE8                     	;# 
   232  0FE9                     	;# 
   233  0FEA                     	;# 
   234  0FEB                     	;# 
   235  0FED                     	;# 
   236  0FEE                     	;# 
   237  0FEF                     	;_A
   238                           
   239                           	psect	idataBIGRAM
   240  074F                     __pidataBIGRAM:
   241                           
   242                           ;initializer for _A
   243  074F  3400               	retlw	0
   244  0750  3400               	retlw	0
   245  0751  3400               	retlw	0
   246  0752  3400               	retlw	0
   247  0753  3400               	retlw	0
   248  0754  3400               	retlw	0
   249  0755  3400               	retlw	0
   250  0756  3400               	retlw	0
   251  0757  3400               	retlw	0
   252  0758  3400               	retlw	0
   253  0759  3400               	retlw	0
   254  075A  3400               	retlw	0
   255  075B  3401               	retlw	1
   256  075C  3400               	retlw	0
   257  075D  3401               	retlw	1
   258  075E  3400               	retlw	0
   259  075F  3401               	retlw	1
   260  0760  3400               	retlw	0
   261  0761  3400               	retlw	0
   262  0762  3400               	retlw	0
   263  0763  3400               	retlw	0
   264  0764  3400               	retlw	0
   265  0765  3401               	retlw	1
   266  0766  3400               	retlw	0
   267  0767  3401               	retlw	1
   268  0768  3400               	retlw	0
   269  0769  3401               	retlw	1
   270  076A  3400               	retlw	0
   271  076B  3401               	retlw	1
   272  076C  3400               	retlw	0
   273  076D  3401               	retlw	1
   274  076E  3400               	retlw	0
   275  076F  3400               	retlw	0
   276  0770  3400               	retlw	0
   277  0771  3400               	retlw	0
   278  0772  3400               	retlw	0
   279  0773  3401               	retlw	1
   280  0774  3400               	retlw	0
   281  0775  3400               	retlw	0
   282  0776  3400               	retlw	0
   283  0777  3400               	retlw	0
   284  0778  3400               	retlw	0
   285  0779  3401               	retlw	1
   286  077A  3400               	retlw	0
   287  077B  3400               	retlw	0
   288  077C  3400               	retlw	0
   289  077D  3401               	retlw	1
   290  077E  3400               	retlw	0
   291  077F  3400               	retlw	0
   292  0780  3400               	retlw	0
   293  0781  3400               	retlw	0
   294  0782  3400               	retlw	0
   295  0783  3400               	retlw	0
   296  0784  3400               	retlw	0
   297  0785  3400               	retlw	0
   298  0786  3400               	retlw	0
   299  0787  3401               	retlw	1
   300  0788  3400               	retlw	0
   301  0789  3401               	retlw	1
   302  078A  3400               	retlw	0
   303  078B  3400               	retlw	0
   304  078C  3400               	retlw	0
   305  078D  3401               	retlw	1
   306  078E  3400               	retlw	0
   307  078F  3401               	retlw	1
   308  0790  3400               	retlw	0
   309  0791  3400               	retlw	0
   310  0792  3400               	retlw	0
   311  0793  3400               	retlw	0
   312  0794  3400               	retlw	0
   313  0795  3401               	retlw	1
   314  0796  3400               	retlw	0
   315  0797  3401               	retlw	1
   316  0798  3400               	retlw	0
   317  0799  3400               	retlw	0
   318  079A  3400               	retlw	0
   319  079B  3400               	retlw	0
   320  079C  3400               	retlw	0
   321  079D  3401               	retlw	1
   322  079E  3400               	retlw	0
   323  079F  3400               	retlw	0
   324  07A0  3400               	retlw	0
   325  07A1  3401               	retlw	1
   326  07A2  3400               	retlw	0
   327  07A3  3400               	retlw	0
   328  07A4  3400               	retlw	0
   329  07A5  3400               	retlw	0
   330  07A6  3400               	retlw	0
   331  07A7  3401               	retlw	1
   332  07A8  3400               	retlw	0
   333  07A9  3400               	retlw	0
   334  07AA  3400               	retlw	0
   335  07AB  3400               	retlw	0
   336  07AC  3400               	retlw	0
   337  07AD  3401               	retlw	1
   338  07AE  3400               	retlw	0
   339  07AF  3400               	retlw	0
   340  07B0  3400               	retlw	0
   341  07B1  3401               	retlw	1
   342  07B2  3400               	retlw	0
   343  07B3  3400               	retlw	0
   344  07B4  3400               	retlw	0
   345  07B5  3400               	retlw	0
   346  07B6  3400               	retlw	0
   347  07B7  3400               	retlw	0
   348  07B8  3400               	retlw	0
   349  07B9  3400               	retlw	0
   350  07BA  3400               	retlw	0
   351  07BB  3400               	retlw	0
   352  07BC  3400               	retlw	0
   353  07BD  3401               	retlw	1
   354  07BE  3400               	retlw	0
   355  07BF  3400               	retlw	0
   356  07C0  3400               	retlw	0
   357  07C1  3400               	retlw	0
   358  07C2  3400               	retlw	0
   359  07C3  3400               	retlw	0
   360  07C4  3400               	retlw	0
   361  07C5  3401               	retlw	1
   362  07C6  3400               	retlw	0
   363  07C7  3401               	retlw	1
   364  07C8  3400               	retlw	0
   365  07C9  3401               	retlw	1
   366  07CA  3400               	retlw	0
   367  07CB  3401               	retlw	1
   368  07CC  3400               	retlw	0
   369  07CD  3401               	retlw	1
   370  07CE  3400               	retlw	0
   371  07CF  3400               	retlw	0
   372  07D0  3400               	retlw	0
   373  07D1  3400               	retlw	0
   374  07D2  3400               	retlw	0
   375  07D3  3400               	retlw	0
   376  07D4  3400               	retlw	0
   377  07D5  3400               	retlw	0
   378  07D6  3400               	retlw	0
   379  07D7  3400               	retlw	0
   380  07D8  3400               	retlw	0
   381  07D9  3400               	retlw	0
   382  07DA  3400               	retlw	0
   383  07DB  3400               	retlw	0
   384  07DC  3400               	retlw	0
   385  07DD  3401               	retlw	1
   386  07DE  3400               	retlw	0
   387  07DF  3400               	retlw	0
   388  07E0  3400               	retlw	0
   389  07E1  3400               	retlw	0
   390  07E2  3400               	retlw	0
   391  07E3  3400               	retlw	0
   392  07E4  3400               	retlw	0
   393  07E5  3400               	retlw	0
   394  07E6  3400               	retlw	0
   395  07E7  3401               	retlw	1
   396  07E8  3400               	retlw	0
   397  07E9  3400               	retlw	0
   398  07EA  3400               	retlw	0
   399  07EB  3400               	retlw	0
   400  07EC  3400               	retlw	0
   401  07ED  3401               	retlw	1
   402  07EE  3400               	retlw	0
   403  008E                     _TRISCbits	set	142
   404  010E                     _LATCbits	set	270
   405                           
   406                           	psect	cinit
   407  07EF                     start_initialization:	
   408                           ; #config settings
   409                           
   410  07EF                     __initialization:	;BIGRAM
   411                           
   412                           ; Initialize objects allocated to BIGRAM
   413  07EF  304F               	movlw	low __pidataBIGRAM
   414  07F0  0084               	movwf	4
   415  07F1  3087               	movlw	(high __pidataBIGRAM)| (0+128)
   416  07F2  0085               	movwf	5
   417  07F3  3050               	movlw	low (0+8528)
   418  07F4  0086               	movwf	6
   419  07F5  3021               	movlw	high (0+8528)
   420  07F6  0087               	movwf	7
   421  07F7  3000               	movlw	0
   422  07F8  00FF               	movwf	btemp+1
   423  07F9  30A0               	movlw	160
   424  07FA  3186  2672  3187   	fcall	init_ram
   425  07FD                     end_of_initialization:	
   426                           ;End of C runtime variable initialization code
   427                           
   428  07FD                     __end_of__initialization:
   429  07FD  0020               	movlb	0
   430  07FE  3186  2E7E         	ljmp	_main	;jump to C main() function
   431                           
   432                           	psect	inittext
   433  0672                     init_ram:
   434  0672  00FE               	movwf	btemp
   435  0673                     initloop:
   436  0673  0012               	moviw fsr0++
   437  0674  001E               	movwi fsr1++
   438  0675  3001               	movlw	1
   439  0676  02FE               	subwf	btemp,f
   440  0677  3000               	movlw	0
   441  0678  3BFF               	subwfb	btemp+1,f
   442  0679  087F               	movf	btemp+1,w
   443  067A  047E               	iorwf	btemp,w
   444  067B  1D03               	skipz
   445  067C  2E73               	goto	initloop
   446  067D  3400               	retlw	0
   447                           
   448                           	psect	cstackCOMMON
   449  0070                     __pcstackCOMMON:
   450  0070                     ?_hienthi:
   451  0070                     ?_main:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     hienthi@b:	
   455                           ; 1 bytes @ 0x0
   456                           
   457                           
   458                           ; 1 bytes @ 0x0
   459  0070                     	ds	1
   460  0071                     ??_hienthi:
   461                           
   462                           ; 1 bytes @ 0x1
   463  0071                     	ds	4
   464  0075                     hienthi@a:
   465                           
   466                           ; 1 bytes @ 0x5
   467  0075                     	ds	1
   468  0076                     hienthi@i:
   469                           
   470                           ; 2 bytes @ 0x6
   471  0076                     	ds	2
   472  0078                     ??_main:
   473                           
   474                           ; 1 bytes @ 0x8
   475  0078                     	ds	1
   476  0079                     main@a:
   477                           
   478                           ; 2 bytes @ 0x9
   479  0079                     	ds	2
   480  007B                     main@b:
   481                           
   482                           ; 2 bytes @ 0xB
   483  007B                     	ds	2
   484                           
   485                           	psect	maintext
   486  067E                     __pmaintext:	
   487 ;;
   488 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   489 ;;
   490 ;; *************** function _main *****************
   491 ;; Defined at:
   492 ;;		line 43 in file "newmain.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;		None
   495 ;; Auto vars:     Size  Location     Type
   496 ;;  b               2   11[COMMON] int 
   497 ;;  a               2    9[COMMON] int 
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   502 ;; Tracked objects:
   503 ;;		On entry : B1F/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   507 ;;      Params:         0       0       0       0       0       0       0       0
   508 ;;      Locals:         4       0       0       0       0       0       0       0
   509 ;;      Temps:          1       0       0       0       0       0       0       0
   510 ;;      Totals:         5       0       0       0       0       0       0       0
   511 ;;Total ram usage:        5 bytes
   512 ;; Hardware stack levels required when called: 1
   513 ;; This function calls:
   514 ;;		_hienthi
   515 ;; This function is called by:
   516 ;;		Startup code after reset
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520  067E                     _main:	
   521                           ;psect for function _main
   522                           
   523  067E                     l620:	
   524                           ;incstack = 0
   525                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   526                           
   527                           
   528                           ;newmain.c: 44:     signed int a;;newmain.c: 45:     signed int b;;newmain.c: 46:       
      +                            TRISCbits.TRISC0 = 0;
   529  067E  0021               	movlb	1	; select bank1
   530  067F  100E               	bcf	14,0	;volatile
   531                           
   532                           ;newmain.c: 47:         TRISCbits.TRISC1 = 0;
   533  0680  108E               	bcf	14,1	;volatile
   534                           
   535                           ;newmain.c: 48:         TRISCbits.TRISC2 = 0;
   536  0681  110E               	bcf	14,2	;volatile
   537                           
   538                           ;newmain.c: 49:         LATCbits.LATC0 = 0;
   539  0682  0022               	movlb	2	; select bank2
   540  0683  100E               	bcf	14,0	;volatile
   541                           
   542                           ;newmain.c: 50:         LATCbits.LATC1 = 0;
   543  0684  108E               	bcf	14,1	;volatile
   544                           
   545                           ;newmain.c: 51:         LATCbits.LATC2 = 0;
   546  0685  110E               	bcf	14,2	;volatile
   547  0686                     l622:
   548                           
   549                           ;newmain.c: 53:         a = 0;
   550  0686  01F9               	clrf	main@a
   551  0687  01FA               	clrf	main@a+1
   552                           
   553                           ;newmain.c: 54:         while(a<10)
   554  0688  2EB5               	goto	l636
   555  0689                     l624:
   556                           
   557                           ;newmain.c: 55:         {;newmain.c: 56:             b = 0;
   558  0689  01FB               	clrf	main@b
   559  068A  01FC               	clrf	main@b+1
   560                           
   561                           ;newmain.c: 57:             while(b<10)
   562  068B  2EA2               	goto	l632
   563  068C                     l626:
   564                           
   565                           ;newmain.c: 58:             {;newmain.c: 59:                 hienthi(a,b);
   566  068C  087B               	movf	main@b,w
   567  068D  00F8               	movwf	??_main
   568  068E  0878               	movf	??_main,w
   569  068F  00F0               	movwf	hienthi@b
   570  0690  0879               	movf	main@a,w
   571  0691  3186  26C4  3186   	fcall	_hienthi
   572  0694                     l628:
   573                           
   574                           ;newmain.c: 60:                 _delay((unsigned long)((200)*(500000/4000.0)));
   575  0694  3021               	movlw	33
   576  0695  00F8               	movwf	??_main
   577  0696  3076               	movlw	118
   578  0697                     u97:
   579  0697  0B89               	decfsz	9,f
   580  0698  2E97               	goto	u97
   581  0699  0BF8               	decfsz	??_main,f
   582  069A  2E97               	goto	u97
   583  069B  3200               	nop2
   584  069C                     l630:
   585                           
   586                           ;newmain.c: 61:                 b = b+1;
   587  069C  087B               	movf	main@b,w
   588  069D  3E01               	addlw	1
   589  069E  00FB               	movwf	main@b
   590  069F  3000               	movlw	0
   591  06A0  3D7C               	addwfc	main@b+1,w
   592  06A1  00FC               	movwf	main@b+1
   593  06A2                     l632:
   594                           
   595                           ;newmain.c: 57:             while(b<10)
   596  06A2  087C               	movf	main@b+1,w
   597  06A3  3A80               	xorlw	128
   598  06A4  00F8               	movwf	??_main
   599  06A5  3080               	movlw	128
   600  06A6  0278               	subwf	??_main,w
   601  06A7  1D03               	skipz
   602  06A8  2EAB               	goto	u75
   603  06A9  300A               	movlw	10
   604  06AA  027B               	subwf	main@b,w
   605  06AB                     u75:
   606  06AB  1C03               	skipc
   607  06AC  2EAE               	goto	u71
   608  06AD  2EAF               	goto	u70
   609  06AE                     u71:
   610  06AE  2E8C               	goto	l626
   611  06AF                     u70:
   612  06AF                     l634:
   613                           
   614                           ;newmain.c: 63:             a = a+1;
   615  06AF  0879               	movf	main@a,w
   616  06B0  3E01               	addlw	1
   617  06B1  00F9               	movwf	main@a
   618  06B2  3000               	movlw	0
   619  06B3  3D7A               	addwfc	main@a+1,w
   620  06B4  00FA               	movwf	main@a+1
   621  06B5                     l636:
   622                           
   623                           ;newmain.c: 54:         while(a<10)
   624  06B5  087A               	movf	main@a+1,w
   625  06B6  3A80               	xorlw	128
   626  06B7  00F8               	movwf	??_main
   627  06B8  3080               	movlw	128
   628  06B9  0278               	subwf	??_main,w
   629  06BA  1D03               	skipz
   630  06BB  2EBE               	goto	u85
   631  06BC  300A               	movlw	10
   632  06BD  0279               	subwf	main@a,w
   633  06BE                     u85:
   634  06BE  1C03               	skipc
   635  06BF  2EC1               	goto	u81
   636  06C0  2EC2               	goto	u80
   637  06C1                     u81:
   638  06C1  2E89               	goto	l624
   639  06C2                     u80:
   640  06C2                     l28:
   641  06C2  3180  2802         	ljmp	start
   642  06C4                     __end_of_main:
   643                           
   644                           	psect	text1
   645  06C4                     __ptext1:	
   646 ;; *************** function _hienthi *****************
   647 ;; Defined at:
   648 ;;		line 26 in file "newmain.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;  a               1    wreg     unsigned char 
   651 ;;  b               1    0[COMMON] unsigned char 
   652 ;; Auto vars:     Size  Location     Type
   653 ;;  a               1    5[COMMON] unsigned char 
   654 ;;  i               2    6[COMMON] int 
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   664 ;;      Params:         1       0       0       0       0       0       0       0
   665 ;;      Locals:         3       0       0       0       0       0       0       0
   666 ;;      Temps:          4       0       0       0       0       0       0       0
   667 ;;      Totals:         8       0       0       0       0       0       0       0
   668 ;;Total ram usage:        8 bytes
   669 ;; Hardware stack levels used: 1
   670 ;; This function calls:
   671 ;;		Nothing
   672 ;; This function is called by:
   673 ;;		_main
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677  06C4                     _hienthi:	
   678                           ;psect for function _hienthi
   679                           
   680                           
   681                           ;incstack = 0
   682                           ; Regs used in _hienthi: [wreg+fsr1l+fsr1h+status,2+status,0]
   683                           ;hienthi@a stored from wreg
   684  06C4  00F5               	movwf	hienthi@a
   685  06C5                     l596:
   686                           
   687                           ;newmain.c: 27:     signed int i;;newmain.c: 28:     for(i=8*b+7;i>=8*b;i--)
   688  06C5  0870               	movf	hienthi@b,w
   689  06C6  00F1               	movwf	??_hienthi
   690  06C7  01F2               	clrf	??_hienthi+1
   691  06C8  35F1               	lslf	??_hienthi,f
   692  06C9  0DF2               	rlf	??_hienthi+1,f
   693  06CA  35F1               	lslf	??_hienthi,f
   694  06CB  0DF2               	rlf	??_hienthi+1,f
   695  06CC  35F1               	lslf	??_hienthi,f
   696  06CD  0DF2               	rlf	??_hienthi+1,f
   697  06CE  0871               	movf	??_hienthi,w
   698  06CF  3E07               	addlw	7
   699  06D0  00F6               	movwf	hienthi@i
   700  06D1  3000               	movlw	0
   701  06D2  3D72               	addwfc	??_hienthi+1,w
   702  06D3  00F7               	movwf	hienthi@i+1
   703  06D4  2EF1               	goto	l606
   704  06D5                     l598:
   705                           
   706                           ;newmain.c: 29:         {;newmain.c: 30:             LATCbits.LATC1 = A[i];
   707  06D5  0877               	movf	hienthi@i+1,w
   708  06D6  00F2               	movwf	??_hienthi+1
   709  06D7  0876               	movf	hienthi@i,w
   710  06D8  00F1               	movwf	??_hienthi
   711  06D9  35F1               	lslf	??_hienthi,f
   712  06DA  0DF2               	rlf	??_hienthi+1,f
   713  06DB  3050               	movlw	80
   714  06DC  00F3               	movwf	??_hienthi+2
   715  06DD  3021               	movlw	33
   716  06DE  00F4               	movwf	??_hienthi+3
   717  06DF  0871               	movf	??_hienthi,w
   718  06E0  0773               	addwf	??_hienthi+2,w
   719  06E1  0086               	movwf	6
   720  06E2  0872               	movf	??_hienthi+1,w
   721  06E3  3D74               	addwfc	??_hienthi+3,w
   722  06E4  0087               	movwf	7
   723  06E5  0C01               	rrf	1,w
   724  06E6  0022               	movlb	2	; select bank2
   725  06E7  1C03               	skipc
   726  06E8  108E               	bcf	14,1	;volatile
   727  06E9  1803               	skipnc
   728  06EA  148E               	bsf	14,1	;volatile
   729  06EB                     l600:
   730                           
   731                           ;newmain.c: 31:             LATCbits.LATC0 = 1;
   732  06EB  140E               	bsf	14,0	;volatile
   733  06EC                     l602:
   734                           
   735                           ;newmain.c: 32:             LATCbits.LATC0 = 0;
   736  06EC  100E               	bcf	14,0	;volatile
   737  06ED                     l604:
   738                           
   739                           ;newmain.c: 33:         }
   740  06ED  30FF               	movlw	255
   741  06EE  07F6               	addwf	hienthi@i,f
   742  06EF  30FF               	movlw	255
   743  06F0  3DF7               	addwfc	hienthi@i+1,f
   744  06F1                     l606:
   745  06F1  0870               	movf	hienthi@b,w
   746  06F2  00F1               	movwf	??_hienthi
   747  06F3  01F2               	clrf	??_hienthi+1
   748  06F4  35F1               	lslf	??_hienthi,f
   749  06F5  0DF2               	rlf	??_hienthi+1,f
   750  06F6  35F1               	lslf	??_hienthi,f
   751  06F7  0DF2               	rlf	??_hienthi+1,f
   752  06F8  35F1               	lslf	??_hienthi,f
   753  06F9  0DF2               	rlf	??_hienthi+1,f
   754  06FA  0877               	movf	hienthi@i+1,w
   755  06FB  3A80               	xorlw	128
   756  06FC  00F3               	movwf	??_hienthi+2
   757  06FD  0872               	movf	??_hienthi+1,w
   758  06FE  3A80               	xorlw	128
   759  06FF  0273               	subwf	??_hienthi+2,w
   760  0700  1D03               	skipz
   761  0701  2F04               	goto	u55
   762  0702  0871               	movf	??_hienthi,w
   763  0703  0276               	subwf	hienthi@i,w
   764  0704                     u55:
   765  0704  1803               	skipnc
   766  0705  2F07               	goto	u51
   767  0706  2F08               	goto	u50
   768  0707                     u51:
   769  0707  2ED5               	goto	l598
   770  0708                     u50:
   771  0708                     l608:
   772                           
   773                           ;newmain.c: 34:     for(i=8*a+7;i>=8*a;i--)
   774  0708  0875               	movf	hienthi@a,w
   775  0709  00F1               	movwf	??_hienthi
   776  070A  01F2               	clrf	??_hienthi+1
   777  070B  35F1               	lslf	??_hienthi,f
   778  070C  0DF2               	rlf	??_hienthi+1,f
   779  070D  35F1               	lslf	??_hienthi,f
   780  070E  0DF2               	rlf	??_hienthi+1,f
   781  070F  35F1               	lslf	??_hienthi,f
   782  0710  0DF2               	rlf	??_hienthi+1,f
   783  0711  0871               	movf	??_hienthi,w
   784  0712  3E07               	addlw	7
   785  0713  00F6               	movwf	hienthi@i
   786  0714  3000               	movlw	0
   787  0715  3D72               	addwfc	??_hienthi+1,w
   788  0716  00F7               	movwf	hienthi@i+1
   789  0717  2F34               	goto	l618
   790  0718                     l610:
   791                           
   792                           ;newmain.c: 35:         {;newmain.c: 36:             LATCbits.LATC1 = A[i];
   793  0718  0877               	movf	hienthi@i+1,w
   794  0719  00F2               	movwf	??_hienthi+1
   795  071A  0876               	movf	hienthi@i,w
   796  071B  00F1               	movwf	??_hienthi
   797  071C  35F1               	lslf	??_hienthi,f
   798  071D  0DF2               	rlf	??_hienthi+1,f
   799  071E  3050               	movlw	80
   800  071F  00F3               	movwf	??_hienthi+2
   801  0720  3021               	movlw	33
   802  0721  00F4               	movwf	??_hienthi+3
   803  0722  0871               	movf	??_hienthi,w
   804  0723  0773               	addwf	??_hienthi+2,w
   805  0724  0086               	movwf	6
   806  0725  0872               	movf	??_hienthi+1,w
   807  0726  3D74               	addwfc	??_hienthi+3,w
   808  0727  0087               	movwf	7
   809  0728  0C01               	rrf	1,w
   810  0729  0022               	movlb	2	; select bank2
   811  072A  1C03               	skipc
   812  072B  108E               	bcf	14,1	;volatile
   813  072C  1803               	skipnc
   814  072D  148E               	bsf	14,1	;volatile
   815  072E                     l612:
   816                           
   817                           ;newmain.c: 37:             LATCbits.LATC0 = 1;
   818  072E  140E               	bsf	14,0	;volatile
   819  072F                     l614:
   820                           
   821                           ;newmain.c: 38:             LATCbits.LATC0 = 0;
   822  072F  100E               	bcf	14,0	;volatile
   823  0730                     l616:
   824                           
   825                           ;newmain.c: 39:         }
   826  0730  30FF               	movlw	255
   827  0731  07F6               	addwf	hienthi@i,f
   828  0732  30FF               	movlw	255
   829  0733  3DF7               	addwfc	hienthi@i+1,f
   830  0734                     l618:
   831  0734  0875               	movf	hienthi@a,w
   832  0735  00F1               	movwf	??_hienthi
   833  0736  01F2               	clrf	??_hienthi+1
   834  0737  35F1               	lslf	??_hienthi,f
   835  0738  0DF2               	rlf	??_hienthi+1,f
   836  0739  35F1               	lslf	??_hienthi,f
   837  073A  0DF2               	rlf	??_hienthi+1,f
   838  073B  35F1               	lslf	??_hienthi,f
   839  073C  0DF2               	rlf	??_hienthi+1,f
   840  073D  0877               	movf	hienthi@i+1,w
   841  073E  3A80               	xorlw	128
   842  073F  00F3               	movwf	??_hienthi+2
   843  0740  0872               	movf	??_hienthi+1,w
   844  0741  3A80               	xorlw	128
   845  0742  0273               	subwf	??_hienthi+2,w
   846  0743  1D03               	skipz
   847  0744  2F47               	goto	u65
   848  0745  0871               	movf	??_hienthi,w
   849  0746  0276               	subwf	hienthi@i,w
   850  0747                     u65:
   851  0747  1803               	skipnc
   852  0748  2F4A               	goto	u61
   853  0749  2F4B               	goto	u60
   854  074A                     u61:
   855  074A  2F18               	goto	l610
   856  074B                     u60:
   857  074B                     l16:
   858                           
   859                           ;newmain.c: 40:         LATCbits.LATC2 = 1;
   860  074B  0022               	movlb	2	; select bank2
   861  074C  150E               	bsf	14,2	;volatile
   862                           
   863                           ;newmain.c: 41:         LATCbits.LATC2 = 0; }
   864  074D  110E               	bcf	14,2	;volatile
   865  074E                     l17:
   866  074E  0008               	return
   867  074F                     __end_of_hienthi:
   868  007E                     btemp	set	126	;btemp
   869  007E                     wtemp0	set	126
   870  2150                     
   871                           	psect	idloc
   872                           
   873                           ;Config register IDLOC0 @ 0x8000
   874                           ;	unspecified, using default values
   875  8000                     	org	32768
   876  8000  3FFF               	dw	16383
   877                           
   878                           ;Config register IDLOC1 @ 0x8001
   879                           ;	unspecified, using default values
   880  8001                     	org	32769
   881  8001  3FFF               	dw	16383
   882                           
   883                           ;Config register IDLOC2 @ 0x8002
   884                           ;	unspecified, using default values
   885  8002                     	org	32770
   886  8002  3FFF               	dw	16383
   887                           
   888                           ;Config register IDLOC3 @ 0x8003
   889                           ;	unspecified, using default values
   890  8003                     	org	32771
   891  8003  3FFF               	dw	16383
   892                           
   893                           	psect	config
   894                           
   895                           ;Config register CONFIG1 @ 0x8007
   896                           ;	Oscillator Selection Bits
   897                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
   898                           ;	Watchdog Timer Enable
   899                           ;	WDTE = OFF, WDT disabled
   900                           ;	Power-up Timer Enable
   901                           ;	PWRTE = OFF, PWRT disabled
   902                           ;	MCLR Pin Function Select
   903                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
   904                           ;	Flash Program Memory Code Protection
   905                           ;	CP = OFF, Program memory code protection is disabled
   906                           ;	Brown-out Reset Enable
   907                           ;	BOREN = OFF, Brown-out Reset disabled
   908                           ;	Clock Out Enable
   909                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   910                           ;	Internal/External Switchover Mode
   911                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
   912                           ;	Fail-Safe Clock Monitor Enable
   913                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   914  8007                     	org	32775
   915  8007  09E4               	dw	2532
   916                           
   917                           ;Config register CONFIG2 @ 0x8008
   918                           ;	Flash Memory Self-Write Protection
   919                           ;	WRT = OFF, Write protection off
   920                           ;	Stack Overflow/Underflow Reset Enable
   921                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
   922                           ;	Brown-out Reset Voltage Selection
   923                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   924                           ;	Low-Power Brown Out Reset
   925                           ;	LPBOR = OFF, Low-Power BOR is disabled
   926                           ;	Low-Voltage Programming Enable
   927                           ;	LVP = ON, Low-voltage programming enabled
   928  8008                     	org	32776
   929  8008  3DFF               	dw	15871

Data Sizes:
    Strings     0
    Constant    0
    Data        160
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            16      0       0
    BANK5             0      0       0
    BANK6             0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_hienthi

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     392
                                              8 COMMON     5     5      0
                            _hienthi
 ---------------------------------------------------------------------------------
 (1) _hienthi                                              8     7      1     256
                                              0 COMMON     8     7      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _hienthi

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               10      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Mar 08 12:17:23 2022

                      _A 2150                       l16 074B                       l17 074E  
                     l28 06C2                       u50 0708                       u51 0707  
                     u60 074B                       u61 074A                       u70 06AF  
                     u55 0704                       u71 06AE                       u80 06C2  
                     u65 0747                       u81 06C1                       u75 06AB  
                     u85 06BE                       u97 0697                      l600 06EB  
                    l610 0718                      l602 06EC                      l612 072E  
                    l604 06ED                      l620 067E                      l614 072F  
                    l606 06F1                      l630 069C                      l622 0686  
                    l616 0730                      l608 0708                      l632 06A2  
                    l624 0689                      l618 0734                      l634 06AF  
                    l626 068C                      l628 0694                      l636 06B5  
                    l596 06C5                      l598 06D5                      wreg 0009  
                   _main 067E                     fsr0h 0005                     fsr1h 0007  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   btemp 007E                     start 0002                    ?_main 0070  
        __end_of_hienthi 074F                    main@a 0079                    main@b 007B  
                  wtemp0 007E          __initialization 07EF             __end_of_main 06C4  
                 ??_main 0078                ??_hienthi 0071             __pdataBIGRAM 2150  
__end_of__initialization 07FD           __pcstackCOMMON 0070               __pmaintext 067E  
                __ptext1 06C4                  _hienthi 06C4     end_of_initialization 07FD  
                init_ram 0672                  initloop 0673                _TRISCbits 008E  
          __pidataBIGRAM 074F      start_initialization 07EF                ___latbits 0002  
               ?_hienthi 0070                 _LATCbits 010E                 hienthi@a 0075  
               hienthi@b 0070                 hienthi@i 0076  
