

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Apr 11 00:15:52 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.40
    23                           ; Generated 17/11/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F1509 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  008C                     	;# 
    85  008D                     	;# 
    86  008E                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0093                     	;# 
    90  0095                     	;# 
    91  0096                     	;# 
    92  0097                     	;# 
    93  0099                     	;# 
    94  009A                     	;# 
    95  009B                     	;# 
    96  009B                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  0111                     	;# 
   105  0112                     	;# 
   106  0113                     	;# 
   107  0114                     	;# 
   108  0115                     	;# 
   109  0116                     	;# 
   110  0117                     	;# 
   111  0118                     	;# 
   112  0119                     	;# 
   113  011D                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  018E                     	;# 
   117  0191                     	;# 
   118  0191                     	;# 
   119  0192                     	;# 
   120  0193                     	;# 
   121  0193                     	;# 
   122  0194                     	;# 
   123  0195                     	;# 
   124  0196                     	;# 
   125  0197                     	;# 
   126  0199                     	;# 
   127  019A                     	;# 
   128  019B                     	;# 
   129  019B                     	;# 
   130  019C                     	;# 
   131  019D                     	;# 
   132  019E                     	;# 
   133  019F                     	;# 
   134  020C                     	;# 
   135  020D                     	;# 
   136  0211                     	;# 
   137  0211                     	;# 
   138  0212                     	;# 
   139  0212                     	;# 
   140  0213                     	;# 
   141  0213                     	;# 
   142  0214                     	;# 
   143  0214                     	;# 
   144  0215                     	;# 
   145  0215                     	;# 
   146  0215                     	;# 
   147  0216                     	;# 
   148  0216                     	;# 
   149  0217                     	;# 
   150  0217                     	;# 
   151  0391                     	;# 
   152  0392                     	;# 
   153  0393                     	;# 
   154  0394                     	;# 
   155  0395                     	;# 
   156  0396                     	;# 
   157  0498                     	;# 
   158  0498                     	;# 
   159  0499                     	;# 
   160  049A                     	;# 
   161  049B                     	;# 
   162  049B                     	;# 
   163  049C                     	;# 
   164  049D                     	;# 
   165  049E                     	;# 
   166  049F                     	;# 
   167  0611                     	;# 
   168  0612                     	;# 
   169  0613                     	;# 
   170  0613                     	;# 
   171  0614                     	;# 
   172  0615                     	;# 
   173  0616                     	;# 
   174  0616                     	;# 
   175  0617                     	;# 
   176  0618                     	;# 
   177  0619                     	;# 
   178  0619                     	;# 
   179  061A                     	;# 
   180  061B                     	;# 
   181  061C                     	;# 
   182  061C                     	;# 
   183  0691                     	;# 
   184  0692                     	;# 
   185  0693                     	;# 
   186  0694                     	;# 
   187  0695                     	;# 
   188  0F0F                     	;# 
   189  0F10                     	;# 
   190  0F11                     	;# 
   191  0F12                     	;# 
   192  0F13                     	;# 
   193  0F14                     	;# 
   194  0F15                     	;# 
   195  0F16                     	;# 
   196  0F17                     	;# 
   197  0F18                     	;# 
   198  0F19                     	;# 
   199  0F1A                     	;# 
   200  0F1B                     	;# 
   201  0F1C                     	;# 
   202  0F1D                     	;# 
   203  0F1E                     	;# 
   204  0F1F                     	;# 
   205  0F20                     	;# 
   206  0F21                     	;# 
   207  0F22                     	;# 
   208  0F23                     	;# 
   209  0F24                     	;# 
   210  0F25                     	;# 
   211  0F26                     	;# 
   212  0F27                     	;# 
   213  0F28                     	;# 
   214  0F29                     	;# 
   215  0F2A                     	;# 
   216  0F2B                     	;# 
   217  0F2C                     	;# 
   218  0F2D                     	;# 
   219  0F2E                     	;# 
   220  0F2F                     	;# 
   221  0F8C                     	;# 
   222  0F8D                     	;# 
   223  0F91                     	;# 
   224  0F95                     	;# 
   225  0F96                     	;# 
   226  0F97                     	;# 
   227  0F9C                     	;# 
   228  0F9D                     	;# 
   229  0F9E                     	;# 
   230  0FE3                     	;# 
   231  0FE4                     	;# 
   232  0FE5                     	;# 
   233  0FE6                     	;# 
   234  0FE7                     	;# 
   235  0FE8                     	;# 
   236  0FE9                     	;# 
   237  0FEA                     	;# 
   238  0FEB                     	;# 
   239  0FED                     	;# 
   240  0FEE                     	;# 
   241  0FEF                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  0006                     	;# 
   249  0007                     	;# 
   250  0008                     	;# 
   251  0009                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000D                     	;# 
   256  000E                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0015                     	;# 
   261  0016                     	;# 
   262  0016                     	;# 
   263  0017                     	;# 
   264  0018                     	;# 
   265  0019                     	;# 
   266  001A                     	;# 
   267  001B                     	;# 
   268  001C                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0093                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  0111                     	;# 
   290  0112                     	;# 
   291  0113                     	;# 
   292  0114                     	;# 
   293  0115                     	;# 
   294  0116                     	;# 
   295  0117                     	;# 
   296  0118                     	;# 
   297  0119                     	;# 
   298  011D                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  018E                     	;# 
   302  0191                     	;# 
   303  0191                     	;# 
   304  0192                     	;# 
   305  0193                     	;# 
   306  0193                     	;# 
   307  0194                     	;# 
   308  0195                     	;# 
   309  0196                     	;# 
   310  0197                     	;# 
   311  0199                     	;# 
   312  019A                     	;# 
   313  019B                     	;# 
   314  019B                     	;# 
   315  019C                     	;# 
   316  019D                     	;# 
   317  019E                     	;# 
   318  019F                     	;# 
   319  020C                     	;# 
   320  020D                     	;# 
   321  0211                     	;# 
   322  0211                     	;# 
   323  0212                     	;# 
   324  0212                     	;# 
   325  0213                     	;# 
   326  0213                     	;# 
   327  0214                     	;# 
   328  0214                     	;# 
   329  0215                     	;# 
   330  0215                     	;# 
   331  0215                     	;# 
   332  0216                     	;# 
   333  0216                     	;# 
   334  0217                     	;# 
   335  0217                     	;# 
   336  0391                     	;# 
   337  0392                     	;# 
   338  0393                     	;# 
   339  0394                     	;# 
   340  0395                     	;# 
   341  0396                     	;# 
   342  0498                     	;# 
   343  0498                     	;# 
   344  0499                     	;# 
   345  049A                     	;# 
   346  049B                     	;# 
   347  049B                     	;# 
   348  049C                     	;# 
   349  049D                     	;# 
   350  049E                     	;# 
   351  049F                     	;# 
   352  0611                     	;# 
   353  0612                     	;# 
   354  0613                     	;# 
   355  0613                     	;# 
   356  0614                     	;# 
   357  0615                     	;# 
   358  0616                     	;# 
   359  0616                     	;# 
   360  0617                     	;# 
   361  0618                     	;# 
   362  0619                     	;# 
   363  0619                     	;# 
   364  061A                     	;# 
   365  061B                     	;# 
   366  061C                     	;# 
   367  061C                     	;# 
   368  0691                     	;# 
   369  0692                     	;# 
   370  0693                     	;# 
   371  0694                     	;# 
   372  0695                     	;# 
   373  0F0F                     	;# 
   374  0F10                     	;# 
   375  0F11                     	;# 
   376  0F12                     	;# 
   377  0F13                     	;# 
   378  0F14                     	;# 
   379  0F15                     	;# 
   380  0F16                     	;# 
   381  0F17                     	;# 
   382  0F18                     	;# 
   383  0F19                     	;# 
   384  0F1A                     	;# 
   385  0F1B                     	;# 
   386  0F1C                     	;# 
   387  0F1D                     	;# 
   388  0F1E                     	;# 
   389  0F1F                     	;# 
   390  0F20                     	;# 
   391  0F21                     	;# 
   392  0F22                     	;# 
   393  0F23                     	;# 
   394  0F24                     	;# 
   395  0F25                     	;# 
   396  0F26                     	;# 
   397  0F27                     	;# 
   398  0F28                     	;# 
   399  0F29                     	;# 
   400  0F2A                     	;# 
   401  0F2B                     	;# 
   402  0F2C                     	;# 
   403  0F2D                     	;# 
   404  0F2E                     	;# 
   405  0F2F                     	;# 
   406  0F8C                     	;# 
   407  0F8D                     	;# 
   408  0F91                     	;# 
   409  0F95                     	;# 
   410  0F96                     	;# 
   411  0F97                     	;# 
   412  0F9C                     	;# 
   413  0F9D                     	;# 
   414  0F9E                     	;# 
   415  0FE3                     	;# 
   416  0FE4                     	;# 
   417  0FE5                     	;# 
   418  0FE6                     	;# 
   419  0FE7                     	;# 
   420  0FE8                     	;# 
   421  0FE9                     	;# 
   422  0FEA                     	;# 
   423  0FEB                     	;# 
   424  0FED                     	;# 
   425  0FEE                     	;# 
   426  0FEF                     	;# 
   427  008E                     _TRISC	set	142
   428  010E                     _LATCbits	set	270
   429                           
   430                           	psect	stringtext1
   431  0800                     __pstringtext1:
   432  0800                     STR_1:
   433  0800  3454               	retlw	84	;'T'
   434  0801  3472               	retlw	114	;'r'
   435  0802  3461               	retlw	97	;'a'
   436  0803  346E               	retlw	110	;'n'
   437  0804  3420               	retlw	32	;' '
   438  0805  344E               	retlw	78	;'N'
   439  0806  3467               	retlw	103	;'g'
   440  0807  346F               	retlw	111	;'o'
   441  0808  3463               	retlw	99	;'c'
   442  0809  3420               	retlw	32	;' '
   443  080A  3448               	retlw	72	;'H'
   444  080B  3469               	retlw	105	;'i'
   445  080C  3465               	retlw	101	;'e'
   446  080D  3475               	retlw	117	;'u'
   447  080E  3400               	retlw	0
   448                           
   449                           	psect	stringtext2
   450  080F                     __pstringtext2:
   451  080F                     STR_2:
   452  080F  3432               	retlw	50	;'2'
   453  0810  3432               	retlw	50	;'2'
   454  0811  343A               	retlw	58	;':'
   455  0812  3434               	retlw	52	;'4'
   456  0813  3436               	retlw	54	;'6'
   457  0814  343A               	retlw	58	;':'
   458  0815  3435               	retlw	53	;'5'
   459  0816  3439               	retlw	57	;'9'
   460  0817  3400               	retlw	0
   461                           
   462                           	psect	stringtext3
   463  0000                     __pstringtext3:
   464                           
   465                           	psect	cinit
   466  07FD                     start_initialization:	
   467                           ; #config settings
   468                           
   469  07FD                     __initialization:
   470  07FD                     end_of_initialization:	
   471                           ;End of C runtime variable initialization code
   472                           
   473  07FD                     __end_of__initialization:
   474  07FD  0020               	movlb	0
   475  07FE  3186  2EA8         	ljmp	_main	;jump to C main() function
   476                           
   477                           	psect	cstackCOMMON
   478  0070                     __pcstackCOMMON:
   479  0070                     ?_LCD_Initialize:
   480  0070                     ?_LCDPutCmd:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ?_main:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?_LCDWriteNibble:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_LCDPutChar:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?_strlen:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     LCDWriteNibble@rs:	
   496                           ; 2 bytes @ 0x0
   497                           
   498  0070                     strlen@s:	
   499                           ; 1 bytes @ 0x0
   500                           
   501                           
   502                           ; 2 bytes @ 0x0
   503  0070                     	ds	1
   504  0071                     ??_LCDWriteNibble:
   505  0071                     LCDWriteNibble@ch:	
   506                           ; 1 bytes @ 0x1
   507                           
   508                           
   509                           ; 1 bytes @ 0x1
   510  0071                     	ds	1
   511  0072                     ??_LCDPutCmd:
   512  0072                     ??_strlen:	
   513                           ; 1 bytes @ 0x2
   514                           
   515  0072                     ??_LCDPutChar:	
   516                           ; 1 bytes @ 0x2
   517                           
   518                           
   519                           ; 1 bytes @ 0x2
   520  0072                     	ds	1
   521  0073                     strlen@a:
   522                           
   523                           ; 2 bytes @ 0x3
   524  0073                     	ds	1
   525  0074                     LCDPutChar@ch:
   526  0074                     LCDPutCmd@ch:	
   527                           ; 1 bytes @ 0x4
   528                           
   529                           
   530                           ; 1 bytes @ 0x4
   531  0074                     	ds	1
   532  0075                     ??_LCD_Initialize:
   533  0075                     ?_LCDPutStr2:	
   534                           ; 1 bytes @ 0x5
   535                           
   536  0075                     ?_LCDPutStr3:	
   537                           ; 1 bytes @ 0x5
   538                           
   539  0075                     LCDPutStr2@str:	
   540                           ; 1 bytes @ 0x5
   541                           
   542  0075                     LCDPutStr3@str:	
   543                           ; 2 bytes @ 0x5
   544                           
   545                           
   546                           ; 2 bytes @ 0x5
   547  0075                     	ds	2
   548  0077                     LCDPutStr2@_pos:
   549  0077                     LCDPutStr3@_line:	
   550                           ; 1 bytes @ 0x7
   551                           
   552                           
   553                           ; 1 bytes @ 0x7
   554  0077                     	ds	1
   555  0078                     ??_LCDPutStr3:
   556  0078                     LCDPutStr2@_line:	
   557                           ; 1 bytes @ 0x8
   558                           
   559                           
   560                           ; 1 bytes @ 0x8
   561  0078                     	ds	1
   562  0079                     ??_LCDPutStr2:
   563                           
   564                           ; 1 bytes @ 0x9
   565  0079                     	ds	2
   566  007B                     _LCDPutStr3$119:
   567                           
   568                           ; 2 bytes @ 0xB
   569  007B                     	ds	2
   570  007D                     LCDPutStr3@i:
   571                           
   572                           ; 1 bytes @ 0xD
   573  007D                     	ds	1
   574  007E                     ??_main:
   575                           
   576                           	psect	cstackBANK0
   577  0020                     __pcstackBANK0:	
   578                           ; 1 bytes @ 0xE
   579                           
   580  0020                     _LCDPutStr2$114:
   581                           
   582                           ; 2 bytes @ 0x0
   583  0020                     	ds	2
   584  0022                     LCDPutStr2@i:
   585                           
   586                           ; 1 bytes @ 0x2
   587  0022                     	ds	1
   588                           
   589                           	psect	maintext
   590  06A8                     __pmaintext:	
   591 ;;
   592 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   593 ;;
   594 ;; *************** function _main *****************
   595 ;; Defined at:
   596 ;;		line 23 in file "newmain.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   605 ;; Tracked objects:
   606 ;;		On entry : B1F/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   610 ;;      Params:         0       0       0       0       0       0       0       0
   611 ;;      Locals:         0       0       0       0       0       0       0       0
   612 ;;      Temps:          0       0       0       0       0       0       0       0
   613 ;;      Totals:         0       0       0       0       0       0       0       0
   614 ;;Total ram usage:        0 bytes
   615 ;; Hardware stack levels required when called: 3
   616 ;; This function calls:
   617 ;;		_LCDPutStr2
   618 ;;		_LCDPutStr3
   619 ;;		_LCD_Initialize
   620 ;; This function is called by:
   621 ;;		Startup code after reset
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625  06A8                     _main:	
   626                           ;psect for function _main
   627                           
   628  06A8                     l864:	
   629                           ;incstack = 0
   630                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   631                           
   632                           
   633                           ;newmain.c: 25:     LCD_Initialize();
   634  06A8  3186  26FD  3186   	fcall	_LCD_Initialize
   635  06AB                     l866:
   636                           
   637                           ;newmain.c: 26:     LCDPutStr2("Tran Ngoc Hieu",1,1);
   638  06AB  3000               	movlw	low (STR_1| (0+32768))
   639  06AC  00F5               	movwf	LCDPutStr2@str
   640  06AD  3088               	movlw	high (STR_1| (0+32768))
   641  06AE  00F6               	movwf	LCDPutStr2@str+1
   642  06AF  01F7               	clrf	LCDPutStr2@_pos
   643  06B0  0AF7               	incf	LCDPutStr2@_pos,f
   644  06B1  01F8               	clrf	LCDPutStr2@_line
   645  06B2  0AF8               	incf	LCDPutStr2@_line,f
   646  06B3  3187  2748  3186   	fcall	_LCDPutStr2
   647  06B6                     l868:
   648                           
   649                           ;newmain.c: 27:     LCDPutStr3("22:46:59",0);
   650  06B6  300F               	movlw	low (STR_2| (0+32768))
   651  06B7  00F5               	movwf	LCDPutStr3@str
   652  06B8  3088               	movlw	high (STR_2| (0+32768))
   653  06B9  00F6               	movwf	LCDPutStr3@str+1
   654  06BA  01F7               	clrf	LCDPutStr3@_line
   655  06BB  3187  2796  3186   	fcall	_LCDPutStr3
   656  06BE                     l11:	
   657                           ;newmain.c: 29:     while(1);
   658                           
   659  06BE                     l12:
   660  06BE  2EBE               	goto	l11
   661  06BF  3180  2802         	ljmp	start
   662  06C1                     __end_of_main:
   663                           
   664                           	psect	text1
   665  06FD                     __ptext1:	
   666 ;; *************** function _LCD_Initialize *****************
   667 ;; Defined at:
   668 ;;		line 47 in file "lcd.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;		None
   671 ;; Auto vars:     Size  Location     Type
   672 ;;		None
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		wreg, status,2, status,0, pclath, cstack
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   682 ;;      Params:         0       0       0       0       0       0       0       0
   683 ;;      Locals:         0       0       0       0       0       0       0       0
   684 ;;      Temps:          1       0       0       0       0       0       0       0
   685 ;;      Totals:         1       0       0       0       0       0       0       0
   686 ;;Total ram usage:        1 bytes
   687 ;; Hardware stack levels used: 1
   688 ;; Hardware stack levels required when called: 2
   689 ;; This function calls:
   690 ;;		_LCDPutCmd
   691 ;; This function is called by:
   692 ;;		_main
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696  06FD                     _LCD_Initialize:	
   697                           ;psect for function _LCD_Initialize
   698                           
   699  06FD                     l806:	
   700                           ;incstack = 0
   701                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
   702                           
   703                           
   704                           ;lcd.c: 50:     LATCbits.LATC2 = 0;
   705  06FD  0022               	movlb	2	; select bank2
   706  06FE  110E               	bcf	14,2	;volatile
   707                           
   708                           ;lcd.c: 51:     LATCbits.LATC1 = 0;
   709  06FF  108E               	bcf	14,1	;volatile
   710                           
   711                           ;lcd.c: 52:     LATCbits.LATC0 = 0;
   712  0700  100E               	bcf	14,0	;volatile
   713                           
   714                           ;lcd.c: 53:     LATCbits.LATC3 = 0;
   715  0701  118E               	bcf	14,3	;volatile
   716  0702                     l808:
   717                           
   718                           ;lcd.c: 54:     TRISC = 0x00;
   719  0702  0021               	movlb	1	; select bank1
   720  0703  018E               	clrf	14	;volatile
   721  0704                     l810:
   722                           
   723                           ;lcd.c: 61:     _delay((unsigned long)((15)*(1000000/4000.0)));
   724  0704  3005               	movlw	5
   725  0705  00F5               	movwf	??_LCD_Initialize
   726  0706  30DE               	movlw	222
   727  0707                     u377:
   728  0707  0B89               	decfsz	9,f
   729  0708  2F07               	goto	u377
   730  0709  0BF5               	decfsz	??_LCD_Initialize,f
   731  070A  2F07               	goto	u377
   732  070B                     l812:
   733                           
   734                           ;lcd.c: 64:     LCDPutCmd(0x32);
   735  070B  3032               	movlw	50
   736  070C  3186  26DE  3186   	fcall	_LCDPutCmd
   737  070F                     l814:
   738                           
   739                           ;lcd.c: 67:     LCDPutCmd(0x28);
   740  070F  3028               	movlw	40
   741  0710  3186  26DE  3186   	fcall	_LCDPutCmd
   742  0713                     l816:
   743                           
   744                           ;lcd.c: 70:     LCDPutCmd(0x0C);
   745  0713  300C               	movlw	12
   746  0714  3186  26DE  3186   	fcall	_LCDPutCmd
   747  0717                     l818:
   748                           
   749                           ;lcd.c: 72:     LCDPutCmd(0x01);
   750  0717  3001               	movlw	1
   751  0718  3186  26DE  3186   	fcall	_LCDPutCmd
   752  071B                     l820:
   753                           
   754                           ;lcd.c: 75:     LCDPutCmd(0x06);
   755  071B  3006               	movlw	6
   756  071C  3186  26DE  3186   	fcall	_LCDPutCmd
   757  071F                     l27:
   758  071F  0008               	return
   759  0720                     __end_of_LCD_Initialize:
   760                           
   761                           	psect	text2
   762  0796                     __ptext2:	
   763 ;; *************** function _LCDPutStr3 *****************
   764 ;; Defined at:
   765 ;;		line 191 in file "lcd.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;  str             2    5[COMMON] PTR const unsigned char 
   768 ;;		 -> STR_2(9), 
   769 ;;  _line           1    7[COMMON] unsigned char 
   770 ;; Auto vars:     Size  Location     Type
   771 ;;  i               1   13[COMMON] unsigned char 
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   781 ;;      Params:         3       0       0       0       0       0       0       0
   782 ;;      Locals:         3       0       0       0       0       0       0       0
   783 ;;      Temps:          3       0       0       0       0       0       0       0
   784 ;;      Totals:         9       0       0       0       0       0       0       0
   785 ;;Total ram usage:        9 bytes
   786 ;; Hardware stack levels used: 1
   787 ;; Hardware stack levels required when called: 2
   788 ;; This function calls:
   789 ;;		_LCDPutChar
   790 ;;		_LCDPutCmd
   791 ;;		_strlen
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797  0796                     _LCDPutStr3:	
   798                           ;psect for function _LCDPutStr3
   799                           
   800  0796                     l844:	
   801                           ;incstack = 0
   802                           ; Regs used in _LCDPutStr3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   803                           
   804                           
   805                           ;lcd.c: 191: void LCDPutStr3(const char *str, char _line);lcd.c: 192: {;lcd.c: 193:     
      +                          uint8_t i=0;
   806  0796  01FD               	clrf	LCDPutStr3@i
   807  0797                     l846:
   808                           
   809                           ;lcd.c: 194:      if (_line > (2 -1))
   810  0797  3002               	movlw	2
   811  0798  0277               	subwf	LCDPutStr3@_line,w
   812  0799  1C03               	skipc
   813  079A  2F9C               	goto	u301
   814  079B  2F9D               	goto	u300
   815  079C                     u301:
   816  079C  2F9E               	goto	l850
   817  079D                     u300:
   818  079D  2FFC               	goto	l77
   819  079E                     l850:
   820                           
   821                           ;lcd.c: 200:     LCDPutCmd((_line == 1) ? (0xC0 |((16-strlen(str))/2)) : (0x80 |((16-str
      +                          len(str))/2)));
   822  079E  0377               	decf	LCDPutStr3@_line,w
   823  079F  1903               	btfsc	3,2
   824  07A0  2FA2               	goto	u311
   825  07A1  2FA3               	goto	u310
   826  07A2                     u311:
   827  07A2  2FBC               	goto	l854
   828  07A3                     u310:
   829  07A3                     l852:
   830  07A3  0876               	movf	LCDPutStr3@str+1,w
   831  07A4  00F1               	movwf	strlen@s+1
   832  07A5  0875               	movf	LCDPutStr3@str,w
   833  07A6  00F0               	movwf	strlen@s
   834  07A7  3186  268F  3187   	fcall	_strlen
   835  07AA  3010               	movlw	16
   836  07AB  00F8               	movwf	??_LCDPutStr3
   837  07AC  0870               	movf	?_strlen,w
   838  07AD  0278               	subwf	??_LCDPutStr3,w
   839  07AE  00F9               	movwf	??_LCDPutStr3+1
   840  07AF  0971               	comf	?_strlen+1,w
   841  07B0  1803               	skipnc
   842  07B1  0A89               	incf	9,f
   843  07B2  00FA               	movwf	??_LCDPutStr3+2
   844  07B3  36FA               	lsrf	??_LCDPutStr3+2,f
   845  07B4  0CF9               	rrf	??_LCDPutStr3+1,f
   846  07B5  3080               	movlw	128
   847  07B6  0479               	iorwf	??_LCDPutStr3+1,w
   848  07B7  00FB               	movwf	_LCDPutStr3$119
   849  07B8  3000               	movlw	0
   850  07B9  047A               	iorwf	??_LCDPutStr3+2,w
   851  07BA  00FC               	movwf	_LCDPutStr3$119+1
   852  07BB  2FD4               	goto	l856
   853  07BC                     l854:
   854  07BC  0876               	movf	LCDPutStr3@str+1,w
   855  07BD  00F1               	movwf	strlen@s+1
   856  07BE  0875               	movf	LCDPutStr3@str,w
   857  07BF  00F0               	movwf	strlen@s
   858  07C0  3186  268F  3187   	fcall	_strlen
   859  07C3  3010               	movlw	16
   860  07C4  00F8               	movwf	??_LCDPutStr3
   861  07C5  0870               	movf	?_strlen,w
   862  07C6  0278               	subwf	??_LCDPutStr3,w
   863  07C7  00F9               	movwf	??_LCDPutStr3+1
   864  07C8  0971               	comf	?_strlen+1,w
   865  07C9  1803               	skipnc
   866  07CA  0A89               	incf	9,f
   867  07CB  00FA               	movwf	??_LCDPutStr3+2
   868  07CC  36FA               	lsrf	??_LCDPutStr3+2,f
   869  07CD  0CF9               	rrf	??_LCDPutStr3+1,f
   870  07CE  30C0               	movlw	192
   871  07CF  0479               	iorwf	??_LCDPutStr3+1,w
   872  07D0  00FB               	movwf	_LCDPutStr3$119
   873  07D1  3000               	movlw	0
   874  07D2  047A               	iorwf	??_LCDPutStr3+2,w
   875  07D3  00FC               	movwf	_LCDPutStr3$119+1
   876  07D4                     l856:
   877  07D4  087B               	movf	_LCDPutStr3$119,w
   878  07D5  3186  26DE  3187   	fcall	_LCDPutCmd
   879                           
   880                           ;lcd.c: 204:     while (str[i])
   881  07D8  2FEC               	goto	l862
   882  07D9                     l858:
   883                           
   884                           ;lcd.c: 205:     {;lcd.c: 207:         LCDPutChar(str[i++]);
   885  07D9  0876               	movf	LCDPutStr3@str+1,w
   886  07DA  00F9               	movwf	??_LCDPutStr3+1
   887  07DB  0875               	movf	LCDPutStr3@str,w
   888  07DC  00F8               	movwf	??_LCDPutStr3
   889  07DD  087D               	movf	LCDPutStr3@i,w
   890  07DE  0778               	addwf	??_LCDPutStr3,w
   891  07DF  0084               	movwf	4
   892  07E0  0879               	movf	??_LCDPutStr3+1,w
   893  07E1  1803               	skipnc
   894  07E2  0A79               	incf	??_LCDPutStr3+1,w
   895  07E3  0085               	movwf	5
   896  07E4  0800               	movf	0,w	;code access
   897  07E5  3186  26C1  3187   	fcall	_LCDPutChar
   898  07E8                     l860:
   899  07E8  3001               	movlw	1
   900  07E9  00F8               	movwf	??_LCDPutStr3
   901  07EA  0878               	movf	??_LCDPutStr3,w
   902  07EB  07FD               	addwf	LCDPutStr3@i,f
   903  07EC                     l862:
   904                           
   905                           ;lcd.c: 204:     while (str[i])
   906  07EC  0876               	movf	LCDPutStr3@str+1,w
   907  07ED  00F9               	movwf	??_LCDPutStr3+1
   908  07EE  0875               	movf	LCDPutStr3@str,w
   909  07EF  00F8               	movwf	??_LCDPutStr3
   910  07F0  087D               	movf	LCDPutStr3@i,w
   911  07F1  0778               	addwf	??_LCDPutStr3,w
   912  07F2  0084               	movwf	4
   913  07F3  0879               	movf	??_LCDPutStr3+1,w
   914  07F4  1803               	skipnc
   915  07F5  0A79               	incf	??_LCDPutStr3+1,w
   916  07F6  0085               	movwf	5
   917  07F7  0012               	moviw fsr0++
   918  07F8  1D03               	btfss	3,2
   919  07F9  2FFB               	goto	u321
   920  07FA  2FFC               	goto	u320
   921  07FB                     u321:
   922  07FB  2FD9               	goto	l858
   923  07FC                     u320:
   924  07FC                     l77:
   925  07FC  0008               	return
   926  07FD                     __end_of_LCDPutStr3:
   927                           
   928                           	psect	text3
   929  068F                     __ptext3:	
   930 ;; *************** function _strlen *****************
   931 ;; Defined at:
   932 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;  s               2    0[COMMON] PTR const unsigned char 
   935 ;;		 -> STR_2(9), 
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  a               2    3[COMMON] PTR const unsigned char 
   938 ;;		 -> STR_2(9), 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  2    0[COMMON] unsigned int 
   941 ;; Registers used:
   942 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   948 ;;      Params:         2       0       0       0       0       0       0       0
   949 ;;      Locals:         2       0       0       0       0       0       0       0
   950 ;;      Temps:          1       0       0       0       0       0       0       0
   951 ;;      Totals:         5       0       0       0       0       0       0       0
   952 ;;Total ram usage:        5 bytes
   953 ;; Hardware stack levels used: 1
   954 ;; This function calls:
   955 ;;		Nothing
   956 ;; This function is called by:
   957 ;;		_LCDPutStr3
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961  068F                     _strlen:	
   962                           ;psect for function _strlen
   963                           
   964  068F                     l796:	
   965                           ;incstack = 0
   966                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
   967                           
   968  068F  0871               	movf	strlen@s+1,w
   969  0690  00F4               	movwf	strlen@a+1
   970  0691  0870               	movf	strlen@s,w
   971  0692  00F3               	movwf	strlen@a
   972  0693  2E98               	goto	l800
   973  0694                     l798:
   974  0694  3001               	movlw	1
   975  0695  07F0               	addwf	strlen@s,f
   976  0696  3000               	movlw	0
   977  0697  3DF1               	addwfc	strlen@s+1,f
   978  0698                     l800:
   979  0698  0870               	movf	strlen@s,w
   980  0699  0084               	movwf	4
   981  069A  0871               	movf	strlen@s+1,w
   982  069B  0085               	movwf	5
   983  069C  0012               	moviw fsr0++
   984  069D  1D03               	btfss	3,2
   985  069E  2EA0               	goto	u251
   986  069F  2EA1               	goto	u250
   987  06A0                     u251:
   988  06A0  2E94               	goto	l798
   989  06A1                     u250:
   990  06A1                     l802:
   991  06A1  0873               	movf	strlen@a,w
   992  06A2  0270               	subwf	strlen@s,w
   993  06A3  00F0               	movwf	?_strlen
   994  06A4  0874               	movf	strlen@a+1,w
   995  06A5  3B71               	subwfb	strlen@s+1,w
   996  06A6  00F1               	movwf	?_strlen+1
   997  06A7                     l614:
   998  06A7  0008               	return
   999  06A8                     __end_of_strlen:
  1000                           
  1001                           	psect	text4
  1002  0748                     __ptext4:	
  1003 ;; *************** function _LCDPutStr2 *****************
  1004 ;; Defined at:
  1005 ;;		line 168 in file "lcd.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;  str             2    5[COMMON] PTR const unsigned char 
  1008 ;;		 -> STR_1(15), 
  1009 ;;  _pos            1    7[COMMON] unsigned char 
  1010 ;;  _line           1    8[COMMON] unsigned char 
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;  i               1    2[BANK0 ] unsigned char 
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  1    wreg      void 
  1015 ;; Registers used:
  1016 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1022 ;;      Params:         4       0       0       0       0       0       0       0
  1023 ;;      Locals:         0       3       0       0       0       0       0       0
  1024 ;;      Temps:          3       0       0       0       0       0       0       0
  1025 ;;      Totals:         7       3       0       0       0       0       0       0
  1026 ;;Total ram usage:       10 bytes
  1027 ;; Hardware stack levels used: 1
  1028 ;; Hardware stack levels required when called: 2
  1029 ;; This function calls:
  1030 ;;		_LCDPutChar
  1031 ;;		_LCDPutCmd
  1032 ;; This function is called by:
  1033 ;;		_main
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037  0748                     _LCDPutStr2:	
  1038                           ;psect for function _LCDPutStr2
  1039                           
  1040  0748                     l822:	
  1041                           ;incstack = 0
  1042                           ; Regs used in _LCDPutStr2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1043                           
  1044                           
  1045                           ;lcd.c: 168: void LCDPutStr2(const char *str, char _pos, char _line);lcd.c: 169: {;lcd.c
      +                          : 170:     uint8_t i=0;
  1046  0748  0020               	movlb	0	; select bank0
  1047  0749  01A2               	clrf	LCDPutStr2@i
  1048  074A                     l824:
  1049                           
  1050                           ;lcd.c: 171:     if ((_line > (2 -1)) || (_pos > (16 -1)))
  1051  074A  3002               	movlw	2
  1052  074B  0278               	subwf	LCDPutStr2@_line,w
  1053  074C  1803               	skipnc
  1054  074D  2F4F               	goto	u261
  1055  074E  2F50               	goto	u260
  1056  074F                     u261:
  1057  074F  2F95               	goto	l66
  1058  0750                     u260:
  1059  0750                     l826:
  1060  0750  3010               	movlw	16
  1061  0751  0277               	subwf	LCDPutStr2@_pos,w
  1062  0752  1C03               	skipc
  1063  0753  2F55               	goto	u271
  1064  0754  2F56               	goto	u270
  1065  0755                     u271:
  1066  0755  2F57               	goto	l828
  1067  0756                     u270:
  1068  0756  2F95               	goto	l66
  1069  0757                     l828:
  1070                           
  1071                           ;lcd.c: 178:     LCDPutCmd((_line == 1) ? (0xC0 | _pos) : (0x80 | _pos));
  1072  0757  0378               	decf	LCDPutStr2@_line,w
  1073  0758  1903               	btfsc	3,2
  1074  0759  2F5B               	goto	u281
  1075  075A  2F5C               	goto	u280
  1076  075B                     u281:
  1077  075B  2F62               	goto	l832
  1078  075C                     u280:
  1079  075C                     l830:
  1080  075C  3080               	movlw	128
  1081  075D  0477               	iorwf	LCDPutStr2@_pos,w
  1082  075E  00A0               	movwf	_LCDPutStr2$114
  1083  075F  3000               	movlw	0
  1084  0760  00A1               	movwf	_LCDPutStr2$114+1
  1085  0761  2F67               	goto	l834
  1086  0762                     l832:
  1087  0762  30C0               	movlw	192
  1088  0763  0477               	iorwf	LCDPutStr2@_pos,w
  1089  0764  00A0               	movwf	_LCDPutStr2$114
  1090  0765  3000               	movlw	0
  1091  0766  00A1               	movwf	_LCDPutStr2$114+1
  1092  0767                     l834:
  1093  0767  0820               	movf	_LCDPutStr2$114,w
  1094  0768  3186  26DE  3187   	fcall	_LCDPutCmd
  1095  076B                     l836:
  1096                           
  1097                           ;lcd.c: 181:     _delay((unsigned long)((5)*(1000000/4000.0)));
  1098  076B  30FA               	movlw	250
  1099  076C                     u387:
  1100  076C  3200               	nop2
  1101  076D  0B89               	decfsz	9,f
  1102  076E  2F6C               	goto	u387
  1103                           
  1104                           ;lcd.c: 184:     while (str[i])
  1105  076F  2F84               	goto	l842
  1106  0770                     l838:
  1107                           
  1108                           ;lcd.c: 185:     {;lcd.c: 187:         LCDPutChar(str[i++]);
  1109  0770  0876               	movf	LCDPutStr2@str+1,w
  1110  0771  00FA               	movwf	??_LCDPutStr2+1
  1111  0772  0875               	movf	LCDPutStr2@str,w
  1112  0773  00F9               	movwf	??_LCDPutStr2
  1113  0774  0822               	movf	LCDPutStr2@i,w
  1114  0775  0779               	addwf	??_LCDPutStr2,w
  1115  0776  0084               	movwf	4
  1116  0777  087A               	movf	??_LCDPutStr2+1,w
  1117  0778  1803               	skipnc
  1118  0779  0A7A               	incf	??_LCDPutStr2+1,w
  1119  077A  0085               	movwf	5
  1120  077B  0800               	movf	0,w	;code access
  1121  077C  3186  26C1  3187   	fcall	_LCDPutChar
  1122  077F                     l840:
  1123  077F  3001               	movlw	1
  1124  0780  00F9               	movwf	??_LCDPutStr2
  1125  0781  0879               	movf	??_LCDPutStr2,w
  1126  0782  0020               	movlb	0	; select bank0
  1127  0783  07A2               	addwf	LCDPutStr2@i,f
  1128  0784                     l842:
  1129                           
  1130                           ;lcd.c: 184:     while (str[i])
  1131  0784  0876               	movf	LCDPutStr2@str+1,w
  1132  0785  00FA               	movwf	??_LCDPutStr2+1
  1133  0786  0875               	movf	LCDPutStr2@str,w
  1134  0787  00F9               	movwf	??_LCDPutStr2
  1135  0788  0020               	movlb	0	; select bank0
  1136  0789  0822               	movf	LCDPutStr2@i,w
  1137  078A  0779               	addwf	??_LCDPutStr2,w
  1138  078B  0084               	movwf	4
  1139  078C  087A               	movf	??_LCDPutStr2+1,w
  1140  078D  1803               	skipnc
  1141  078E  0A7A               	incf	??_LCDPutStr2+1,w
  1142  078F  0085               	movwf	5
  1143  0790  0012               	moviw fsr0++
  1144  0791  1D03               	btfss	3,2
  1145  0792  2F94               	goto	u291
  1146  0793  2F95               	goto	u290
  1147  0794                     u291:
  1148  0794  2F70               	goto	l838
  1149  0795                     u290:
  1150  0795                     l66:
  1151  0795  0008               	return
  1152  0796                     __end_of_LCDPutStr2:
  1153                           
  1154                           	psect	text5
  1155  06DE                     __ptext5:	
  1156 ;; *************** function _LCDPutCmd *****************
  1157 ;; Defined at:
  1158 ;;		line 123 in file "lcd.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;  ch              1    wreg     unsigned char 
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  ch              1    4[COMMON] unsigned char 
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, status,0, pclath, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1172 ;;      Params:         0       0       0       0       0       0       0       0
  1173 ;;      Locals:         1       0       0       0       0       0       0       0
  1174 ;;      Temps:          2       0       0       0       0       0       0       0
  1175 ;;      Totals:         3       0       0       0       0       0       0       0
  1176 ;;Total ram usage:        3 bytes
  1177 ;; Hardware stack levels used: 1
  1178 ;; Hardware stack levels required when called: 1
  1179 ;; This function calls:
  1180 ;;		_LCDWriteNibble
  1181 ;; This function is called by:
  1182 ;;		_LCD_Initialize
  1183 ;;		_LCDPutStr2
  1184 ;;		_LCDPutStr3
  1185 ;;		_LCDGoto
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189  06DE                     _LCDPutCmd:	
  1190                           ;psect for function _LCDPutCmd
  1191                           
  1192                           
  1193                           ;incstack = 0
  1194                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
  1195                           ;LCDPutCmd@ch stored from wreg
  1196  06DE  00F4               	movwf	LCDPutCmd@ch
  1197  06DF                     l778:
  1198                           
  1199                           ;lcd.c: 123: void LCDPutCmd(uint8_t ch);lcd.c: 124: {;lcd.c: 125:     _delay((unsigned l
      +                          ong)((5)*(1000000/4000.0)));
  1200  06DF  30FA               	movlw	250
  1201  06E0                     u397:
  1202  06E0  3200               	nop2
  1203  06E1  0B89               	decfsz	9,f
  1204  06E2  2EE0               	goto	u397
  1205  06E3                     l780:
  1206                           
  1207                           ;lcd.c: 128:     LCDWriteNibble(ch,0);
  1208  06E3  01F0               	clrf	LCDWriteNibble@rs
  1209  06E4  0874               	movf	LCDPutCmd@ch,w
  1210  06E5  3187  2720  3186   	fcall	_LCDWriteNibble
  1211  06E8                     l782:
  1212                           
  1213                           ;lcd.c: 131:     ch = (ch << 4);
  1214  06E8  0874               	movf	LCDPutCmd@ch,w
  1215  06E9  00F2               	movwf	??_LCDPutCmd
  1216  06EA  3003               	movlw	3
  1217  06EB                     u235:
  1218  06EB  35F2               	lslf	??_LCDPutCmd,f
  1219  06EC  3EFF               	addlw	-1
  1220  06ED  1D03               	skipz
  1221  06EE  2EEB               	goto	u235
  1222  06EF  3572               	lslf	??_LCDPutCmd,w
  1223  06F0  00F3               	movwf	??_LCDPutCmd+1
  1224  06F1  0873               	movf	??_LCDPutCmd+1,w
  1225  06F2  00F4               	movwf	LCDPutCmd@ch
  1226  06F3                     l784:
  1227                           
  1228                           ;lcd.c: 133:     _delay((unsigned long)((1)*(1000000/4000.0)));
  1229  06F3  3053               	movlw	83
  1230  06F4                     u407:
  1231  06F4  0B89               	decfsz	9,f
  1232  06F5  2EF4               	goto	u407
  1233  06F6  0000               	nop
  1234  06F7                     l786:
  1235                           
  1236                           ;lcd.c: 136:     LCDWriteNibble(ch,0);
  1237  06F7  01F0               	clrf	LCDWriteNibble@rs
  1238  06F8  0874               	movf	LCDPutCmd@ch,w
  1239  06F9  3187  2720  3186   	fcall	_LCDWriteNibble
  1240  06FC                     l44:
  1241  06FC  0008               	return
  1242  06FD                     __end_of_LCDPutCmd:
  1243                           
  1244                           	psect	text6
  1245  06C1                     __ptext6:	
  1246 ;; *************** function _LCDPutChar *****************
  1247 ;; Defined at:
  1248 ;;		line 108 in file "lcd.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;  ch              1    wreg     unsigned char 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  ch              1    4[COMMON] unsigned char 
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  1    wreg      void 
  1255 ;; Registers used:
  1256 ;;		wreg, status,2, status,0, pclath, cstack
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1262 ;;      Params:         0       0       0       0       0       0       0       0
  1263 ;;      Locals:         1       0       0       0       0       0       0       0
  1264 ;;      Temps:          2       0       0       0       0       0       0       0
  1265 ;;      Totals:         3       0       0       0       0       0       0       0
  1266 ;;Total ram usage:        3 bytes
  1267 ;; Hardware stack levels used: 1
  1268 ;; Hardware stack levels required when called: 1
  1269 ;; This function calls:
  1270 ;;		_LCDWriteNibble
  1271 ;; This function is called by:
  1272 ;;		_LCDPutStr2
  1273 ;;		_LCDPutStr3
  1274 ;;		_LCDPutStr
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278  06C1                     _LCDPutChar:	
  1279                           ;psect for function _LCDPutChar
  1280                           
  1281                           
  1282                           ;incstack = 0
  1283                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
  1284                           ;LCDPutChar@ch stored from wreg
  1285  06C1  00F4               	movwf	LCDPutChar@ch
  1286  06C2                     l788:
  1287                           
  1288                           ;lcd.c: 108: void LCDPutChar(uint8_t ch);lcd.c: 109: {;lcd.c: 110:     _delay((unsigned 
      +                          long)((5)*(1000000/4000.0)));
  1289  06C2  30FA               	movlw	250
  1290  06C3                     u417:
  1291  06C3  3200               	nop2
  1292  06C4  0B89               	decfsz	9,f
  1293  06C5  2EC3               	goto	u417
  1294  06C6                     l790:
  1295                           
  1296                           ;lcd.c: 113:     LCDWriteNibble(ch,1);
  1297  06C6  01F0               	clrf	LCDWriteNibble@rs
  1298  06C7  0AF0               	incf	LCDWriteNibble@rs,f
  1299  06C8  0874               	movf	LCDPutChar@ch,w
  1300  06C9  3187  2720  3186   	fcall	_LCDWriteNibble
  1301  06CC                     l792:
  1302                           
  1303                           ;lcd.c: 116:     ch = (ch << 4);
  1304  06CC  0874               	movf	LCDPutChar@ch,w
  1305  06CD  00F2               	movwf	??_LCDPutChar
  1306  06CE  3003               	movlw	3
  1307  06CF                     u245:
  1308  06CF  35F2               	lslf	??_LCDPutChar,f
  1309  06D0  3EFF               	addlw	-1
  1310  06D1  1D03               	skipz
  1311  06D2  2ECF               	goto	u245
  1312  06D3  3572               	lslf	??_LCDPutChar,w
  1313  06D4  00F3               	movwf	??_LCDPutChar+1
  1314  06D5  0873               	movf	??_LCDPutChar+1,w
  1315  06D6  00F4               	movwf	LCDPutChar@ch
  1316  06D7                     l794:
  1317                           
  1318                           ;lcd.c: 119:     LCDWriteNibble(ch,1);
  1319  06D7  01F0               	clrf	LCDWriteNibble@rs
  1320  06D8  0AF0               	incf	LCDWriteNibble@rs,f
  1321  06D9  0874               	movf	LCDPutChar@ch,w
  1322  06DA  3187  2720  3186   	fcall	_LCDWriteNibble
  1323  06DD                     l41:
  1324  06DD  0008               	return
  1325  06DE                     __end_of_LCDPutChar:
  1326                           
  1327                           	psect	text7
  1328  0720                     __ptext7:	
  1329 ;; *************** function _LCDWriteNibble *****************
  1330 ;; Defined at:
  1331 ;;		line 80 in file "lcd.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  ch              1    wreg     unsigned char 
  1334 ;;  rs              1    0[COMMON] unsigned char 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  ch              1    1[COMMON] unsigned char 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      void 
  1339 ;; Registers used:
  1340 ;;		wreg, status,0
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1346 ;;      Params:         1       0       0       0       0       0       0       0
  1347 ;;      Locals:         1       0       0       0       0       0       0       0
  1348 ;;      Temps:          0       0       0       0       0       0       0       0
  1349 ;;      Totals:         2       0       0       0       0       0       0       0
  1350 ;;Total ram usage:        2 bytes
  1351 ;; Hardware stack levels used: 1
  1352 ;; This function calls:
  1353 ;;		Nothing
  1354 ;; This function is called by:
  1355 ;;		_LCDPutChar
  1356 ;;		_LCDPutCmd
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360  0720                     _LCDWriteNibble:	
  1361                           ;psect for function _LCDWriteNibble
  1362                           
  1363                           
  1364                           ;incstack = 0
  1365                           ; Regs used in _LCDWriteNibble: [wreg+status,0]
  1366                           ;LCDWriteNibble@ch stored from wreg
  1367  0720  00F1               	movwf	LCDWriteNibble@ch
  1368  0721                     l754:
  1369                           
  1370                           ;lcd.c: 80: void LCDWriteNibble(uint8_t ch,uint8_t rs);lcd.c: 81: {;lcd.c: 82:     if ((
      +                          ch & 0b00010000)==0)
  1371  0721  1A71               	btfsc	LCDWriteNibble@ch,4
  1372  0722  2F24               	goto	u191
  1373  0723  2F25               	goto	u190
  1374  0724                     u191:
  1375  0724  2F28               	goto	l30
  1376  0725                     u190:
  1377  0725                     l756:
  1378                           
  1379                           ;lcd.c: 83:         LATCbits.LATC2 = 0;
  1380  0725  0022               	movlb	2	; select bank2
  1381  0726  110E               	bcf	14,2	;volatile
  1382  0727  2F2A               	goto	l758
  1383  0728                     l30:	
  1384                           ;lcd.c: 84:     else LATCbits.LATC2 = 1 ;
  1385                           
  1386  0728  0022               	movlb	2	; select bank2
  1387  0729  150E               	bsf	14,2	;volatile
  1388  072A                     l758:
  1389                           
  1390                           ;lcd.c: 85:     if ((ch & 0b00100000)==0)
  1391  072A  1AF1               	btfsc	LCDWriteNibble@ch,5
  1392  072B  2F2D               	goto	u201
  1393  072C  2F2E               	goto	u200
  1394  072D                     u201:
  1395  072D  2F30               	goto	l32
  1396  072E                     u200:
  1397  072E                     l760:
  1398                           
  1399                           ;lcd.c: 86:         LATCbits.LATC1 = 0;
  1400  072E  108E               	bcf	14,1	;volatile
  1401  072F  2F31               	goto	l762
  1402  0730                     l32:	
  1403                           ;lcd.c: 87:     else LATCbits.LATC1 = 1 ;
  1404                           
  1405  0730  148E               	bsf	14,1	;volatile
  1406  0731                     l762:
  1407                           
  1408                           ;lcd.c: 88:     if ((ch & 0b01000000)==0)
  1409  0731  1B71               	btfsc	LCDWriteNibble@ch,6
  1410  0732  2F34               	goto	u211
  1411  0733  2F35               	goto	u210
  1412  0734                     u211:
  1413  0734  2F37               	goto	l34
  1414  0735                     u210:
  1415  0735                     l764:
  1416                           
  1417                           ;lcd.c: 89:         LATCbits.LATC0 = 0;
  1418  0735  100E               	bcf	14,0	;volatile
  1419  0736  2F38               	goto	l766
  1420  0737                     l34:	
  1421                           ;lcd.c: 90:     else LATCbits.LATC0 = 1 ;
  1422                           
  1423  0737  140E               	bsf	14,0	;volatile
  1424  0738                     l766:
  1425                           
  1426                           ;lcd.c: 91:     if ((ch & 0b10000000)==0)
  1427  0738  1BF1               	btfsc	LCDWriteNibble@ch,7
  1428  0739  2F3B               	goto	u221
  1429  073A  2F3C               	goto	u220
  1430  073B                     u221:
  1431  073B  2F3E               	goto	l36
  1432  073C                     u220:
  1433  073C                     l768:
  1434                           
  1435                           ;lcd.c: 92:         LATCbits.LATC3 = 0;
  1436  073C  118E               	bcf	14,3	;volatile
  1437  073D  2F3F               	goto	l770
  1438  073E                     l36:	
  1439                           ;lcd.c: 93:     else LATCbits.LATC3 = 1;
  1440                           
  1441  073E  158E               	bsf	14,3	;volatile
  1442  073F                     l770:
  1443                           
  1444                           ;lcd.c: 96:     LATCbits.LATC7 = rs;
  1445  073F  0C70               	rrf	LCDWriteNibble@rs,w
  1446  0740  1C03               	skipc
  1447  0741  138E               	bcf	14,7	;volatile
  1448  0742  1803               	skipnc
  1449  0743  178E               	bsf	14,7	;volatile
  1450  0744                     l772:
  1451                           
  1452                           ;lcd.c: 99:     LATCbits.LATC6 = 0;
  1453  0744  130E               	bcf	14,6	;volatile
  1454  0745                     l774:
  1455                           
  1456                           ;lcd.c: 102:     LATCbits.LATC5 = 1;
  1457  0745  168E               	bsf	14,5	;volatile
  1458  0746                     l776:
  1459                           
  1460                           ;lcd.c: 105:     LATCbits.LATC5 = 0;
  1461  0746  128E               	bcf	14,5	;volatile
  1462  0747                     l38:
  1463  0747  0008               	return
  1464  0748                     __end_of_LCDWriteNibble:
  1465  007E                     btemp	set	126	;btemp
  1466  007E                     wtemp0	set	126
  1467                           
  1468                           	psect	idloc
  1469                           
  1470                           ;Config register IDLOC0 @ 0x8000
  1471                           ;	unspecified, using default values
  1472  8000                     	org	32768
  1473  8000  3FFF               	dw	16383
  1474                           
  1475                           ;Config register IDLOC1 @ 0x8001
  1476                           ;	unspecified, using default values
  1477  8001                     	org	32769
  1478  8001  3FFF               	dw	16383
  1479                           
  1480                           ;Config register IDLOC2 @ 0x8002
  1481                           ;	unspecified, using default values
  1482  8002                     	org	32770
  1483  8002  3FFF               	dw	16383
  1484                           
  1485                           ;Config register IDLOC3 @ 0x8003
  1486                           ;	unspecified, using default values
  1487  8003                     	org	32771
  1488  8003  3FFF               	dw	16383
  1489                           
  1490                           	psect	config
  1491                           
  1492                           ;Config register CONFIG1 @ 0x8007
  1493                           ;	Oscillator Selection Bits
  1494                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1495                           ;	Watchdog Timer Enable
  1496                           ;	WDTE = OFF, WDT disabled
  1497                           ;	Power-up Timer Enable
  1498                           ;	PWRTE = OFF, PWRT disabled
  1499                           ;	MCLR Pin Function Select
  1500                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  1501                           ;	Flash Program Memory Code Protection
  1502                           ;	CP = OFF, Program memory code protection is disabled
  1503                           ;	Brown-out Reset Enable
  1504                           ;	BOREN = OFF, Brown-out Reset disabled
  1505                           ;	Clock Out Enable
  1506                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1507                           ;	Internal/External Switchover Mode
  1508                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  1509                           ;	Fail-Safe Clock Monitor Enable
  1510                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1511  8007                     	org	32775
  1512  8007  09E4               	dw	2532
  1513                           
  1514                           ;Config register CONFIG2 @ 0x8008
  1515                           ;	Flash Memory Self-Write Protection
  1516                           ;	WRT = OFF, Write protection off
  1517                           ;	Stack Overflow/Underflow Reset Enable
  1518                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  1519                           ;	Brown-out Reset Voltage Selection
  1520                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1521                           ;	Low-Power Brown Out Reset
  1522                           ;	LPBOR = OFF, Low-Power BOR is disabled
  1523                           ;	Low-Voltage Programming Enable
  1524                           ;	LVP = ON, Low-voltage programming enabled
  1525  8008                     	org	32776
  1526  8008  3DFF               	dw	15871

Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      3       3
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    LCDPutStr3@str	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    LCDPutStr2@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_LCDPutStr3
    _LCD_Initialize->_LCDPutCmd
    _LCDPutStr3->_LCDPutChar
    _LCDPutStr3->_LCDPutCmd
    _LCDPutStr3->_strlen
    _LCDPutStr2->_LCDPutChar
    _LCDPutStr2->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble
    _LCDPutChar->_LCDWriteNibble

Critical Paths under _main in BANK0

    _main->_LCDPutStr2

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3453
                         _LCDPutStr2
                         _LCDPutStr3
                     _LCD_Initialize
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       1     1      0     481
                                              5 COMMON     1     1      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr3                                           9     6      3    1558
                                              5 COMMON     9     6      3
                         _LCDPutChar
                          _LCDPutCmd
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     242
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr2                                          10     6      4    1414
                                              5 COMMON     7     3      4
                                              0 BANK0      3     3      0
                         _LCDPutChar
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            3     3      0     481
                                              2 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     481
                                              2 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       2     1      1     414
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDPutStr2
     _LCDPutChar
       _LCDWriteNibble
     _LCDPutCmd
       _LCDWriteNibble
   _LCDPutStr3
     _LCDPutChar
     _LCDPutCmd
     _strlen
   _LCD_Initialize
     _LCDPutCmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      3       3       6        3.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Apr 11 00:15:52 2022

         _LCD_Initialize 06FD                       l11 06BE                       l12 06BE  
                     l30 0728                       l32 0730                       l41 06DD  
                     l34 0737                       l27 071F              ?_LCDPutChar 0070  
                     l36 073E                       l44 06FC                       l38 0747  
                     l66 0795                       l77 07FC              ?_LCDPutStr2 0075  
            ?_LCDPutStr3 0075                      l614 06A7                      l800 0698  
                    l802 06A1                      l810 0704                      l820 071B  
                    l812 070B                      l830 075C                      l822 0748  
                    l814 070F                      l806 06FD                      l760 072E  
                    l840 077F                      l832 0762                      l824 074A  
                    l816 0713                      l808 0702                      l770 073F  
                    l762 0731                      l754 0721                      l842 0784  
                    l834 0767                      l826 0750                      l850 079E  
                    l818 0717                      l772 0744                      l764 0735  
                    l756 0725                      l780 06E3                      l836 076B  
                    l828 0757                      l860 07E8                      l852 07A3  
                    l844 0796                      l774 0745                      l766 0738  
                    l758 072A                      l790 06C6                      l782 06E8  
                    l838 0770                      l862 07EC                      l854 07BC  
                    l846 0797                      l776 0746                      l768 073C  
                    l792 06CC                      l784 06F3                      l856 07D4  
                    l864 06A8                      l794 06D7                      l786 06F7  
                    l778 06DF                      l858 07D9                      l866 06AB  
                    l788 06C2                      l796 068F                      l868 06B6  
                    l798 0694                      u200 072E                      u201 072D  
                    u210 0735                      u211 0734                      u220 073C  
                    u300 079D                      u221 073B                      u301 079C  
                    u310 07A3                      u311 07A2                      u320 07FC  
                    u321 07FB                      u250 06A1                      u235 06EB  
                    u251 06A0                      u260 0750                      u245 06CF  
                    u261 074F                      u190 0725                      u270 0756  
                    u191 0724                      u407 06F4                      u271 0755  
                    u280 075C                      u417 06C3                      u281 075B  
                    u290 0795                      u291 0794                      u377 0707  
                    u387 076C                      u397 06E0                      wreg 0009  
                   STR_1 0800                     STR_2 080F                     _main 06A8  
                   fsr0h 0005                     indf0 0000                     fsr0l 0004  
                   btemp 007E                     start 0002   __end_of_LCD_Initialize 0720  
            LCDPutCmd@ch 0074           _LCDPutStr2$114 0020           _LCDPutStr3$119 007B  
                  ?_main 0070              LCDPutStr2@i 0022              LCDPutStr3@i 007D  
                  _TRISC 008E                    status 0003                    wtemp0 007E  
        ?_LCD_Initialize 0070          __initialization 07FD             __end_of_main 06C1  
                 ??_main 007E        __end_of_LCDPutCmd 06FD             LCDPutChar@ch 0074  
         _LCDWriteNibble 0720                   _strlen 068F   __end_of_LCDWriteNibble 0748  
__end_of__initialization 07FD           __pcstackCOMMON 0070             ??_LCDPutChar 0072  
           ??_LCDPutStr2 0079             ??_LCDPutStr3 0078          ?_LCDWriteNibble 0070  
     __end_of_LCDPutChar 06DE       __end_of_LCDPutStr2 0796       __end_of_LCDPutStr3 07FD  
             __pmaintext 06A8                  ?_strlen 0070            LCDPutStr2@str 0075  
          LCDPutStr3@str 0075         ??_LCD_Initialize 0075                  __ptext1 06FD  
                __ptext2 0796                  __ptext3 068F                  __ptext4 0748  
                __ptext5 06DE                  __ptext6 06C1                  __ptext7 0720  
        LCDPutStr2@_line 0078                _LCDPutCmd 06DE          LCDPutStr3@_line 0077  
   end_of_initialization 07FD                  strlen@a 0073                  strlen@s 0070  
             ?_LCDPutCmd 0070           __end_of_strlen 06A8      start_initialization 07FD  
       ??_LCDWriteNibble 0071                 ??_strlen 0072                ___latbits 0002  
          __pcstackBANK0 0020              ??_LCDPutCmd 0072         LCDWriteNibble@ch 0071  
       LCDWriteNibble@rs 0070           LCDPutStr2@_pos 0077                 _LATCbits 010E  
             _LCDPutChar 06C1               _LCDPutStr2 0748               _LCDPutStr3 0796  
          __pstringtext1 0800            __pstringtext2 080F            __pstringtext3 0000  
