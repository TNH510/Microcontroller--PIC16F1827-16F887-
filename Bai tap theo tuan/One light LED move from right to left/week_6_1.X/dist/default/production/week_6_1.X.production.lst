

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Mar 25 14:59:59 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	inittext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x320,16
    13                           	dabs	1,0x2A0,80
    14                           	dabs	1,0x240,48
    15                           	dabs	1,0x2160,0,_A
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F1509 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  008C                     	;# 
    81  008D                     	;# 
    82  008E                     	;# 
    83  0091                     	;# 
    84  0092                     	;# 
    85  0093                     	;# 
    86  0095                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0099                     	;# 
    90  009A                     	;# 
    91  009B                     	;# 
    92  009B                     	;# 
    93  009C                     	;# 
    94  009D                     	;# 
    95  009E                     	;# 
    96  009F                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  010E                     	;# 
   100  0111                     	;# 
   101  0112                     	;# 
   102  0113                     	;# 
   103  0114                     	;# 
   104  0115                     	;# 
   105  0116                     	;# 
   106  0117                     	;# 
   107  0118                     	;# 
   108  0119                     	;# 
   109  011D                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  018E                     	;# 
   113  0191                     	;# 
   114  0191                     	;# 
   115  0192                     	;# 
   116  0193                     	;# 
   117  0193                     	;# 
   118  0194                     	;# 
   119  0195                     	;# 
   120  0196                     	;# 
   121  0197                     	;# 
   122  0199                     	;# 
   123  019A                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019C                     	;# 
   127  019D                     	;# 
   128  019E                     	;# 
   129  019F                     	;# 
   130  020C                     	;# 
   131  020D                     	;# 
   132  0211                     	;# 
   133  0211                     	;# 
   134  0212                     	;# 
   135  0212                     	;# 
   136  0213                     	;# 
   137  0213                     	;# 
   138  0214                     	;# 
   139  0214                     	;# 
   140  0215                     	;# 
   141  0215                     	;# 
   142  0215                     	;# 
   143  0216                     	;# 
   144  0216                     	;# 
   145  0217                     	;# 
   146  0217                     	;# 
   147  0391                     	;# 
   148  0392                     	;# 
   149  0393                     	;# 
   150  0394                     	;# 
   151  0395                     	;# 
   152  0396                     	;# 
   153  0498                     	;# 
   154  0498                     	;# 
   155  0499                     	;# 
   156  049A                     	;# 
   157  049B                     	;# 
   158  049B                     	;# 
   159  049C                     	;# 
   160  049D                     	;# 
   161  049E                     	;# 
   162  049F                     	;# 
   163  0611                     	;# 
   164  0612                     	;# 
   165  0613                     	;# 
   166  0613                     	;# 
   167  0614                     	;# 
   168  0615                     	;# 
   169  0616                     	;# 
   170  0616                     	;# 
   171  0617                     	;# 
   172  0618                     	;# 
   173  0619                     	;# 
   174  0619                     	;# 
   175  061A                     	;# 
   176  061B                     	;# 
   177  061C                     	;# 
   178  061C                     	;# 
   179  0691                     	;# 
   180  0692                     	;# 
   181  0693                     	;# 
   182  0694                     	;# 
   183  0695                     	;# 
   184  0F0F                     	;# 
   185  0F10                     	;# 
   186  0F11                     	;# 
   187  0F12                     	;# 
   188  0F13                     	;# 
   189  0F14                     	;# 
   190  0F15                     	;# 
   191  0F16                     	;# 
   192  0F17                     	;# 
   193  0F18                     	;# 
   194  0F19                     	;# 
   195  0F1A                     	;# 
   196  0F1B                     	;# 
   197  0F1C                     	;# 
   198  0F1D                     	;# 
   199  0F1E                     	;# 
   200  0F1F                     	;# 
   201  0F20                     	;# 
   202  0F21                     	;# 
   203  0F22                     	;# 
   204  0F23                     	;# 
   205  0F24                     	;# 
   206  0F25                     	;# 
   207  0F26                     	;# 
   208  0F27                     	;# 
   209  0F28                     	;# 
   210  0F29                     	;# 
   211  0F2A                     	;# 
   212  0F2B                     	;# 
   213  0F2C                     	;# 
   214  0F2D                     	;# 
   215  0F2E                     	;# 
   216  0F2F                     	;# 
   217  0F8C                     	;# 
   218  0F8D                     	;# 
   219  0F91                     	;# 
   220  0F95                     	;# 
   221  0F96                     	;# 
   222  0F97                     	;# 
   223  0F9C                     	;# 
   224  0F9D                     	;# 
   225  0F9E                     	;# 
   226  0FE3                     	;# 
   227  0FE4                     	;# 
   228  0FE5                     	;# 
   229  0FE6                     	;# 
   230  0FE7                     	;# 
   231  0FE8                     	;# 
   232  0FE9                     	;# 
   233  0FEA                     	;# 
   234  0FEB                     	;# 
   235  0FED                     	;# 
   236  0FEE                     	;# 
   237  0FEF                     	;_A
   238                           
   239                           	psect	idataBIGRAM
   240  075F                     __pidataBIGRAM:
   241                           
   242                           ;initializer for _A
   243  075F  3400               	retlw	0
   244  0760  3400               	retlw	0
   245  0761  3400               	retlw	0
   246  0762  3400               	retlw	0
   247  0763  3400               	retlw	0
   248  0764  3400               	retlw	0
   249  0765  3400               	retlw	0
   250  0766  3400               	retlw	0
   251  0767  3400               	retlw	0
   252  0768  3400               	retlw	0
   253  0769  3400               	retlw	0
   254  076A  3400               	retlw	0
   255  076B  3400               	retlw	0
   256  076C  3400               	retlw	0
   257  076D  3400               	retlw	0
   258  076E  3400               	retlw	0
   259  076F  3400               	retlw	0
   260  0770  3400               	retlw	0
   261  0771  3400               	retlw	0
   262  0772  3400               	retlw	0
   263  0773  3400               	retlw	0
   264  0774  3400               	retlw	0
   265  0775  3400               	retlw	0
   266  0776  3400               	retlw	0
   267  0777  3400               	retlw	0
   268  0778  3400               	retlw	0
   269  0779  3400               	retlw	0
   270  077A  3400               	retlw	0
   271  077B  3400               	retlw	0
   272  077C  3400               	retlw	0
   273  077D  3401               	retlw	1
   274  077E  3400               	retlw	0
   275  077F  3400               	retlw	0
   276  0780  3400               	retlw	0
   277  0781  3400               	retlw	0
   278  0782  3400               	retlw	0
   279  0783  3400               	retlw	0
   280  0784  3400               	retlw	0
   281  0785  3400               	retlw	0
   282  0786  3400               	retlw	0
   283  0787  3400               	retlw	0
   284  0788  3400               	retlw	0
   285  0789  3400               	retlw	0
   286  078A  3400               	retlw	0
   287  078B  3401               	retlw	1
   288  078C  3400               	retlw	0
   289  078D  3400               	retlw	0
   290  078E  3400               	retlw	0
   291  078F  3400               	retlw	0
   292  0790  3400               	retlw	0
   293  0791  3400               	retlw	0
   294  0792  3400               	retlw	0
   295  0793  3400               	retlw	0
   296  0794  3400               	retlw	0
   297  0795  3400               	retlw	0
   298  0796  3400               	retlw	0
   299  0797  3400               	retlw	0
   300  0798  3400               	retlw	0
   301  0799  3401               	retlw	1
   302  079A  3400               	retlw	0
   303  079B  3400               	retlw	0
   304  079C  3400               	retlw	0
   305  079D  3400               	retlw	0
   306  079E  3400               	retlw	0
   307  079F  3400               	retlw	0
   308  07A0  3400               	retlw	0
   309  07A1  3400               	retlw	0
   310  07A2  3400               	retlw	0
   311  07A3  3400               	retlw	0
   312  07A4  3400               	retlw	0
   313  07A5  3400               	retlw	0
   314  07A6  3400               	retlw	0
   315  07A7  3401               	retlw	1
   316  07A8  3400               	retlw	0
   317  07A9  3400               	retlw	0
   318  07AA  3400               	retlw	0
   319  07AB  3400               	retlw	0
   320  07AC  3400               	retlw	0
   321  07AD  3400               	retlw	0
   322  07AE  3400               	retlw	0
   323  07AF  3400               	retlw	0
   324  07B0  3400               	retlw	0
   325  07B1  3400               	retlw	0
   326  07B2  3400               	retlw	0
   327  07B3  3400               	retlw	0
   328  07B4  3400               	retlw	0
   329  07B5  3401               	retlw	1
   330  07B6  3400               	retlw	0
   331  07B7  3400               	retlw	0
   332  07B8  3400               	retlw	0
   333  07B9  3400               	retlw	0
   334  07BA  3400               	retlw	0
   335  07BB  3400               	retlw	0
   336  07BC  3400               	retlw	0
   337  07BD  3400               	retlw	0
   338  07BE  3400               	retlw	0
   339  07BF  3400               	retlw	0
   340  07C0  3400               	retlw	0
   341  07C1  3400               	retlw	0
   342  07C2  3400               	retlw	0
   343  07C3  3401               	retlw	1
   344  07C4  3400               	retlw	0
   345  07C5  3400               	retlw	0
   346  07C6  3400               	retlw	0
   347  07C7  3400               	retlw	0
   348  07C8  3400               	retlw	0
   349  07C9  3400               	retlw	0
   350  07CA  3400               	retlw	0
   351  07CB  3400               	retlw	0
   352  07CC  3400               	retlw	0
   353  07CD  3400               	retlw	0
   354  07CE  3400               	retlw	0
   355  07CF  3400               	retlw	0
   356  07D0  3400               	retlw	0
   357  07D1  3401               	retlw	1
   358  07D2  3400               	retlw	0
   359  07D3  3400               	retlw	0
   360  07D4  3400               	retlw	0
   361  07D5  3400               	retlw	0
   362  07D6  3400               	retlw	0
   363  07D7  3400               	retlw	0
   364  07D8  3400               	retlw	0
   365  07D9  3400               	retlw	0
   366  07DA  3400               	retlw	0
   367  07DB  3400               	retlw	0
   368  07DC  3400               	retlw	0
   369  07DD  3400               	retlw	0
   370  07DE  3400               	retlw	0
   371  07DF  3401               	retlw	1
   372  07E0  3400               	retlw	0
   373  07E1  3400               	retlw	0
   374  07E2  3400               	retlw	0
   375  07E3  3400               	retlw	0
   376  07E4  3400               	retlw	0
   377  07E5  3400               	retlw	0
   378  07E6  3400               	retlw	0
   379  07E7  3400               	retlw	0
   380  07E8  3400               	retlw	0
   381  07E9  3400               	retlw	0
   382  07EA  3400               	retlw	0
   383  07EB  3400               	retlw	0
   384  07EC  3400               	retlw	0
   385  07ED  3400               	retlw	0
   386  07EE  3400               	retlw	0
   387  008E                     _TRISCbits	set	142
   388  010E                     _LATCbits	set	270
   389                           
   390                           	psect	cinit
   391  07EF                     start_initialization:	
   392                           ; #config settings
   393                           
   394  07EF                     __initialization:	;BIGRAM
   395                           
   396                           ; Initialize objects allocated to BIGRAM
   397  07EF  305F               	movlw	low __pidataBIGRAM
   398  07F0  0084               	movwf	4
   399  07F1  3087               	movlw	(high __pidataBIGRAM)| (0+128)
   400  07F2  0085               	movwf	5
   401  07F3  3060               	movlw	low (0+8544)
   402  07F4  0086               	movwf	6
   403  07F5  3021               	movlw	high (0+8544)
   404  07F6  0087               	movwf	7
   405  07F7  3000               	movlw	0
   406  07F8  00FF               	movwf	btemp+1
   407  07F9  3090               	movlw	144
   408  07FA  3186  2678  3187   	fcall	init_ram
   409  07FD                     end_of_initialization:	
   410                           ;End of C runtime variable initialization code
   411                           
   412  07FD                     __end_of__initialization:
   413  07FD  0020               	movlb	0
   414  07FE  3186  2E84         	ljmp	_main	;jump to C main() function
   415                           
   416                           	psect	inittext
   417  0678                     init_ram:
   418  0678  00FE               	movwf	btemp
   419  0679                     initloop:
   420  0679  0012               	moviw fsr0++
   421  067A  001E               	movwi fsr1++
   422  067B  3001               	movlw	1
   423  067C  02FE               	subwf	btemp,f
   424  067D  3000               	movlw	0
   425  067E  3BFF               	subwfb	btemp+1,f
   426  067F  087F               	movf	btemp+1,w
   427  0680  047E               	iorwf	btemp,w
   428  0681  1D03               	skipz
   429  0682  2E79               	goto	initloop
   430  0683  3400               	retlw	0
   431                           
   432                           	psect	cstackCOMMON
   433  0070                     __pcstackCOMMON:
   434  0070                     ?_display:
   435  0070                     ?_main:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     display@b:	
   439                           ; 1 bytes @ 0x0
   440                           
   441                           
   442                           ; 1 bytes @ 0x0
   443  0070                     	ds	1
   444  0071                     ??_display:
   445                           
   446                           ; 1 bytes @ 0x1
   447  0071                     	ds	4
   448  0075                     display@a:
   449                           
   450                           ; 1 bytes @ 0x5
   451  0075                     	ds	1
   452  0076                     display@i:
   453                           
   454                           ; 2 bytes @ 0x6
   455  0076                     	ds	2
   456  0078                     ??_main:
   457                           
   458                           ; 1 bytes @ 0x8
   459  0078                     	ds	1
   460  0079                     main@b_98:
   461                           
   462                           ; 2 bytes @ 0x9
   463  0079                     	ds	2
   464  007B                     main@a_100:
   465                           
   466                           ; 2 bytes @ 0xB
   467  007B                     	ds	2
   468                           
   469                           	psect	maintext
   470  0684                     __pmaintext:	
   471 ;;
   472 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   473 ;;
   474 ;; *************** function _main *****************
   475 ;; Defined at:
   476 ;;		line 51 in file "newmain.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;  a               2   11[COMMON] int 
   481 ;;  b               2    9[COMMON] int 
   482 ;;  b               2    0        unsigned int 
   483 ;;  a               2    0        unsigned int 
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : B1F/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   493 ;;      Params:         0       0       0       0       0       0       0       0
   494 ;;      Locals:         4       0       0       0       0       0       0       0
   495 ;;      Temps:          1       0       0       0       0       0       0       0
   496 ;;      Totals:         5       0       0       0       0       0       0       0
   497 ;;Total ram usage:        5 bytes
   498 ;; Hardware stack levels required when called: 1
   499 ;; This function calls:
   500 ;;		_display
   501 ;; This function is called by:
   502 ;;		Startup code after reset
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506  0684                     _main:	
   507                           ;psect for function _main
   508                           
   509  0684                     l631:	
   510                           ;incstack = 0
   511                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   512                           
   513                           
   514                           ;newmain.c: 52:     unsigned int a;;newmain.c: 53:     unsigned int b;;newmain.c: 54:   
      +                                TRISCbits.TRISC0 = 0;
   515  0684  0021               	movlb	1	; select bank1
   516  0685  100E               	bcf	14,0	;volatile
   517                           
   518                           ;newmain.c: 55:         TRISCbits.TRISC1 = 0;
   519  0686  108E               	bcf	14,1	;volatile
   520                           
   521                           ;newmain.c: 56:         TRISCbits.TRISC2 = 0;
   522  0687  110E               	bcf	14,2	;volatile
   523                           
   524                           ;newmain.c: 57:         LATCbits.LATC0 = 0;
   525  0688  0022               	movlb	2	; select bank2
   526  0689  100E               	bcf	14,0	;volatile
   527                           
   528                           ;newmain.c: 58:         LATCbits.LATC1 = 0;
   529  068A  108E               	bcf	14,1	;volatile
   530                           
   531                           ;newmain.c: 59:         LATCbits.LATC2 = 0;
   532  068B  110E               	bcf	14,2	;volatile
   533  068C                     l633:
   534                           
   535                           ;newmain.c: 62:             for (int b = 0;b<9;b++)
   536  068C  01F9               	clrf	main@b_98
   537  068D  01FA               	clrf	main@b_98+1
   538  068E                     l639:
   539                           
   540                           ;newmain.c: 63:             {;newmain.c: 64:             display(0,b);
   541  068E  0879               	movf	main@b_98,w
   542  068F  00F8               	movwf	??_main
   543  0690  0878               	movf	??_main,w
   544  0691  00F0               	movwf	display@b
   545  0692  3000               	movlw	0
   546  0693  3186  26D4  3186   	fcall	_display
   547  0696                     l641:
   548                           
   549                           ;newmain.c: 65:             _delay((unsigned long)((100)*(500000/4000.0)));
   550  0696  3011               	movlw	17
   551  0697  00F8               	movwf	??_main
   552  0698  303A               	movlw	58
   553  0699                     u97:
   554  0699  0B89               	decfsz	9,f
   555  069A  2E99               	goto	u97
   556  069B  0BF8               	decfsz	??_main,f
   557  069C  2E99               	goto	u97
   558  069D  3200               	nop2
   559  069E                     l643:
   560                           
   561                           ;newmain.c: 66:             }
   562  069E  3001               	movlw	1
   563  069F  07F9               	addwf	main@b_98,f
   564  06A0  3000               	movlw	0
   565  06A1  3DFA               	addwfc	main@b_98+1,f
   566  06A2                     l645:
   567  06A2  087A               	movf	main@b_98+1,w
   568  06A3  3A80               	xorlw	128
   569  06A4  00F8               	movwf	??_main
   570  06A5  3080               	movlw	128
   571  06A6  0278               	subwf	??_main,w
   572  06A7  1D03               	skipz
   573  06A8  2EAB               	goto	u75
   574  06A9  3009               	movlw	9
   575  06AA  0279               	subwf	main@b_98,w
   576  06AB                     u75:
   577  06AB  1C03               	skipc
   578  06AC  2EAE               	goto	u71
   579  06AD  2EAF               	goto	u70
   580  06AE                     u71:
   581  06AE  2E8E               	goto	l639
   582  06AF                     u70:
   583  06AF                     l647:
   584                           
   585                           ;newmain.c: 67:             for (int a = 1;a<9;a++)
   586  06AF  3001               	movlw	1
   587  06B0  00FB               	movwf	main@a_100
   588  06B1  3000               	movlw	0
   589  06B2  00FC               	movwf	main@a_100+1
   590  06B3                     l651:
   591                           
   592                           ;newmain.c: 68:             {;newmain.c: 69:             display(a,0);
   593  06B3  01F0               	clrf	display@b
   594  06B4  087B               	movf	main@a_100,w
   595  06B5  3186  26D4  3186   	fcall	_display
   596  06B8                     l653:
   597                           
   598                           ;newmain.c: 70:             _delay((unsigned long)((100)*(500000/4000.0)));
   599  06B8  3011               	movlw	17
   600  06B9  00F8               	movwf	??_main
   601  06BA  303A               	movlw	58
   602  06BB                     u107:
   603  06BB  0B89               	decfsz	9,f
   604  06BC  2EBB               	goto	u107
   605  06BD  0BF8               	decfsz	??_main,f
   606  06BE  2EBB               	goto	u107
   607  06BF  3200               	nop2
   608  06C0                     l655:
   609                           
   610                           ;newmain.c: 71:             }
   611  06C0  3001               	movlw	1
   612  06C1  07FB               	addwf	main@a_100,f
   613  06C2  3000               	movlw	0
   614  06C3  3DFC               	addwfc	main@a_100+1,f
   615  06C4                     l657:
   616  06C4  087C               	movf	main@a_100+1,w
   617  06C5  3A80               	xorlw	128
   618  06C6  00F8               	movwf	??_main
   619  06C7  3080               	movlw	128
   620  06C8  0278               	subwf	??_main,w
   621  06C9  1D03               	skipz
   622  06CA  2ECD               	goto	u85
   623  06CB  3009               	movlw	9
   624  06CC  027B               	subwf	main@a_100,w
   625  06CD                     u85:
   626  06CD  1C03               	skipc
   627  06CE  2ED0               	goto	u81
   628  06CF  2ED1               	goto	u80
   629  06D0                     u81:
   630  06D0  2EB3               	goto	l651
   631  06D1                     u80:
   632  06D1  2E8C               	goto	l633
   633  06D2  3180  2802         	ljmp	start
   634  06D4                     __end_of_main:
   635                           
   636                           	psect	text1
   637  06D4                     __ptext1:	
   638 ;; *************** function _display *****************
   639 ;; Defined at:
   640 ;;		line 34 in file "newmain.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;  a               1    wreg     unsigned char 
   643 ;;  b               1    0[COMMON] unsigned char 
   644 ;; Auto vars:     Size  Location     Type
   645 ;;  a               1    5[COMMON] unsigned char 
   646 ;;  i               2    6[COMMON] int 
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   656 ;;      Params:         1       0       0       0       0       0       0       0
   657 ;;      Locals:         3       0       0       0       0       0       0       0
   658 ;;      Temps:          4       0       0       0       0       0       0       0
   659 ;;      Totals:         8       0       0       0       0       0       0       0
   660 ;;Total ram usage:        8 bytes
   661 ;; Hardware stack levels used: 1
   662 ;; This function calls:
   663 ;;		Nothing
   664 ;; This function is called by:
   665 ;;		_main
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669  06D4                     _display:	
   670                           ;psect for function _display
   671                           
   672                           
   673                           ;incstack = 0
   674                           ; Regs used in _display: [wreg+fsr1l+fsr1h+status,2+status,0]
   675                           ;display@a stored from wreg
   676  06D4  00F5               	movwf	display@a
   677  06D5                     l607:
   678                           
   679                           ;newmain.c: 35:     signed int i;;newmain.c: 36:     for(i=8*b+7;i>=8*b;i--)
   680  06D5  0870               	movf	display@b,w
   681  06D6  00F1               	movwf	??_display
   682  06D7  01F2               	clrf	??_display+1
   683  06D8  35F1               	lslf	??_display,f
   684  06D9  0DF2               	rlf	??_display+1,f
   685  06DA  35F1               	lslf	??_display,f
   686  06DB  0DF2               	rlf	??_display+1,f
   687  06DC  35F1               	lslf	??_display,f
   688  06DD  0DF2               	rlf	??_display+1,f
   689  06DE  0871               	movf	??_display,w
   690  06DF  3E07               	addlw	7
   691  06E0  00F6               	movwf	display@i
   692  06E1  3000               	movlw	0
   693  06E2  3D72               	addwfc	??_display+1,w
   694  06E3  00F7               	movwf	display@i+1
   695  06E4  2F01               	goto	l617
   696  06E5                     l609:
   697                           
   698                           ;newmain.c: 37:         {;newmain.c: 38:             LATCbits.LATC1 = A[i];
   699  06E5  0877               	movf	display@i+1,w
   700  06E6  00F2               	movwf	??_display+1
   701  06E7  0876               	movf	display@i,w
   702  06E8  00F1               	movwf	??_display
   703  06E9  35F1               	lslf	??_display,f
   704  06EA  0DF2               	rlf	??_display+1,f
   705  06EB  3060               	movlw	96
   706  06EC  00F3               	movwf	??_display+2
   707  06ED  3021               	movlw	33
   708  06EE  00F4               	movwf	??_display+3
   709  06EF  0871               	movf	??_display,w
   710  06F0  0773               	addwf	??_display+2,w
   711  06F1  0086               	movwf	6
   712  06F2  0872               	movf	??_display+1,w
   713  06F3  3D74               	addwfc	??_display+3,w
   714  06F4  0087               	movwf	7
   715  06F5  0C01               	rrf	1,w
   716  06F6  0022               	movlb	2	; select bank2
   717  06F7  1C03               	skipc
   718  06F8  108E               	bcf	14,1	;volatile
   719  06F9  1803               	skipnc
   720  06FA  148E               	bsf	14,1	;volatile
   721  06FB                     l611:
   722                           
   723                           ;newmain.c: 39:             LATCbits.LATC0 = 1;
   724  06FB  140E               	bsf	14,0	;volatile
   725  06FC                     l613:
   726                           
   727                           ;newmain.c: 40:             LATCbits.LATC0 = 0;
   728  06FC  100E               	bcf	14,0	;volatile
   729  06FD                     l615:
   730                           
   731                           ;newmain.c: 41:         }
   732  06FD  30FF               	movlw	255
   733  06FE  07F6               	addwf	display@i,f
   734  06FF  30FF               	movlw	255
   735  0700  3DF7               	addwfc	display@i+1,f
   736  0701                     l617:
   737  0701  0870               	movf	display@b,w
   738  0702  00F1               	movwf	??_display
   739  0703  01F2               	clrf	??_display+1
   740  0704  35F1               	lslf	??_display,f
   741  0705  0DF2               	rlf	??_display+1,f
   742  0706  35F1               	lslf	??_display,f
   743  0707  0DF2               	rlf	??_display+1,f
   744  0708  35F1               	lslf	??_display,f
   745  0709  0DF2               	rlf	??_display+1,f
   746  070A  0877               	movf	display@i+1,w
   747  070B  3A80               	xorlw	128
   748  070C  00F3               	movwf	??_display+2
   749  070D  0872               	movf	??_display+1,w
   750  070E  3A80               	xorlw	128
   751  070F  0273               	subwf	??_display+2,w
   752  0710  1D03               	skipz
   753  0711  2F14               	goto	u55
   754  0712  0871               	movf	??_display,w
   755  0713  0276               	subwf	display@i,w
   756  0714                     u55:
   757  0714  1803               	skipnc
   758  0715  2F17               	goto	u51
   759  0716  2F18               	goto	u50
   760  0717                     u51:
   761  0717  2EE5               	goto	l609
   762  0718                     u50:
   763  0718                     l619:
   764                           
   765                           ;newmain.c: 42:     for(i=8*a+7;i>=8*a;i--)
   766  0718  0875               	movf	display@a,w
   767  0719  00F1               	movwf	??_display
   768  071A  01F2               	clrf	??_display+1
   769  071B  35F1               	lslf	??_display,f
   770  071C  0DF2               	rlf	??_display+1,f
   771  071D  35F1               	lslf	??_display,f
   772  071E  0DF2               	rlf	??_display+1,f
   773  071F  35F1               	lslf	??_display,f
   774  0720  0DF2               	rlf	??_display+1,f
   775  0721  0871               	movf	??_display,w
   776  0722  3E07               	addlw	7
   777  0723  00F6               	movwf	display@i
   778  0724  3000               	movlw	0
   779  0725  3D72               	addwfc	??_display+1,w
   780  0726  00F7               	movwf	display@i+1
   781  0727  2F44               	goto	l629
   782  0728                     l621:
   783                           
   784                           ;newmain.c: 43:         {;newmain.c: 44:             LATCbits.LATC1 = A[i];
   785  0728  0877               	movf	display@i+1,w
   786  0729  00F2               	movwf	??_display+1
   787  072A  0876               	movf	display@i,w
   788  072B  00F1               	movwf	??_display
   789  072C  35F1               	lslf	??_display,f
   790  072D  0DF2               	rlf	??_display+1,f
   791  072E  3060               	movlw	96
   792  072F  00F3               	movwf	??_display+2
   793  0730  3021               	movlw	33
   794  0731  00F4               	movwf	??_display+3
   795  0732  0871               	movf	??_display,w
   796  0733  0773               	addwf	??_display+2,w
   797  0734  0086               	movwf	6
   798  0735  0872               	movf	??_display+1,w
   799  0736  3D74               	addwfc	??_display+3,w
   800  0737  0087               	movwf	7
   801  0738  0C01               	rrf	1,w
   802  0739  0022               	movlb	2	; select bank2
   803  073A  1C03               	skipc
   804  073B  108E               	bcf	14,1	;volatile
   805  073C  1803               	skipnc
   806  073D  148E               	bsf	14,1	;volatile
   807  073E                     l623:
   808                           
   809                           ;newmain.c: 45:             LATCbits.LATC0 = 1;
   810  073E  140E               	bsf	14,0	;volatile
   811  073F                     l625:
   812                           
   813                           ;newmain.c: 46:             LATCbits.LATC0 = 0;
   814  073F  100E               	bcf	14,0	;volatile
   815  0740                     l627:
   816                           
   817                           ;newmain.c: 47:         }
   818  0740  30FF               	movlw	255
   819  0741  07F6               	addwf	display@i,f
   820  0742  30FF               	movlw	255
   821  0743  3DF7               	addwfc	display@i+1,f
   822  0744                     l629:
   823  0744  0875               	movf	display@a,w
   824  0745  00F1               	movwf	??_display
   825  0746  01F2               	clrf	??_display+1
   826  0747  35F1               	lslf	??_display,f
   827  0748  0DF2               	rlf	??_display+1,f
   828  0749  35F1               	lslf	??_display,f
   829  074A  0DF2               	rlf	??_display+1,f
   830  074B  35F1               	lslf	??_display,f
   831  074C  0DF2               	rlf	??_display+1,f
   832  074D  0877               	movf	display@i+1,w
   833  074E  3A80               	xorlw	128
   834  074F  00F3               	movwf	??_display+2
   835  0750  0872               	movf	??_display+1,w
   836  0751  3A80               	xorlw	128
   837  0752  0273               	subwf	??_display+2,w
   838  0753  1D03               	skipz
   839  0754  2F57               	goto	u65
   840  0755  0871               	movf	??_display,w
   841  0756  0276               	subwf	display@i,w
   842  0757                     u65:
   843  0757  1803               	skipnc
   844  0758  2F5A               	goto	u61
   845  0759  2F5B               	goto	u60
   846  075A                     u61:
   847  075A  2F28               	goto	l621
   848  075B                     u60:
   849  075B                     l16:
   850                           
   851                           ;newmain.c: 48:         LATCbits.LATC2 = 1;
   852  075B  0022               	movlb	2	; select bank2
   853  075C  150E               	bsf	14,2	;volatile
   854                           
   855                           ;newmain.c: 49:         LATCbits.LATC2 = 0; }
   856  075D  110E               	bcf	14,2	;volatile
   857  075E                     l17:
   858  075E  0008               	return
   859  075F                     __end_of_display:
   860  007E                     btemp	set	126	;btemp
   861  007E                     wtemp0	set	126
   862  2160                     
   863                           	psect	idloc
   864                           
   865                           ;Config register IDLOC0 @ 0x8000
   866                           ;	unspecified, using default values
   867  8000                     	org	32768
   868  8000  3FFF               	dw	16383
   869                           
   870                           ;Config register IDLOC1 @ 0x8001
   871                           ;	unspecified, using default values
   872  8001                     	org	32769
   873  8001  3FFF               	dw	16383
   874                           
   875                           ;Config register IDLOC2 @ 0x8002
   876                           ;	unspecified, using default values
   877  8002                     	org	32770
   878  8002  3FFF               	dw	16383
   879                           
   880                           ;Config register IDLOC3 @ 0x8003
   881                           ;	unspecified, using default values
   882  8003                     	org	32771
   883  8003  3FFF               	dw	16383
   884                           
   885                           	psect	config
   886                           
   887                           ;Config register CONFIG1 @ 0x8007
   888                           ;	Oscillator Selection Bits
   889                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
   890                           ;	Watchdog Timer Enable
   891                           ;	WDTE = OFF, WDT disabled
   892                           ;	Power-up Timer Enable
   893                           ;	PWRTE = OFF, PWRT disabled
   894                           ;	MCLR Pin Function Select
   895                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
   896                           ;	Flash Program Memory Code Protection
   897                           ;	CP = OFF, Program memory code protection is disabled
   898                           ;	Brown-out Reset Enable
   899                           ;	BOREN = OFF, Brown-out Reset disabled
   900                           ;	Clock Out Enable
   901                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   902                           ;	Internal/External Switchover Mode
   903                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
   904                           ;	Fail-Safe Clock Monitor Enable
   905                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   906  8007                     	org	32775
   907  8007  09E4               	dw	2532
   908                           
   909                           ;Config register CONFIG2 @ 0x8008
   910                           ;	Flash Memory Self-Write Protection
   911                           ;	WRT = OFF, Write protection off
   912                           ;	Stack Overflow/Underflow Reset Enable
   913                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
   914                           ;	Brown-out Reset Voltage Selection
   915                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   916                           ;	Low-Power Brown Out Reset
   917                           ;	LPBOR = OFF, Low-Power BOR is disabled
   918                           ;	Low-Voltage Programming Enable
   919                           ;	LVP = ON, Low-voltage programming enabled
   920  8008                     	org	32776
   921  8008  3DFF               	dw	15871

Data Sizes:
    Strings     0
    Constant    0
    Data        144
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            32      0       0
    BANK5             0      0       0
    BANK6             0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_display

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     468
                                              8 COMMON     5     5      0
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              8     7      1     332
                                              0 COMMON     8     7      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               20      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Mar 25 14:59:59 2022

                      _A 2160                       l16 075B                       l17 075E  
                     u50 0718                       u51 0717                       u60 075B  
                     u61 075A                       u70 06AF                       u55 0714  
                     u71 06AE                       u80 06D1                       u65 0757  
                     u81 06D0                       u75 06AB                       u85 06CD  
                     u97 0699                      l611 06FB                      l621 0728  
                    l613 06FC                      l623 073E                      l615 06FD  
                    l607 06D5                      l631 0684                      l625 073F  
                    l609 06E5                      l617 0701                      l641 0696  
                    l633 068C                      l627 0740                      l619 0718  
                    l651 06B3                      l643 069E                      l629 0744  
                    l653 06B8                      l645 06A2                      l655 06C0  
                    l647 06AF                      l639 068E                      l657 06C4  
                    u107 06BB                      wreg 0009                     _main 0684  
                   fsr0h 0005                     fsr1h 0007                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
                   start 0002                    ?_main 0070          __end_of_display 075F  
                  wtemp0 007E          __initialization 07EF             __end_of_main 06D4  
                 ??_main 0078                ??_display 0071             __pdataBIGRAM 2160  
__end_of__initialization 07FD           __pcstackCOMMON 0070               __pmaintext 0684  
                __ptext1 06D4                  _display 06D4     end_of_initialization 07FD  
                init_ram 0678                  initloop 0679                _TRISCbits 008E  
          __pidataBIGRAM 075F      start_initialization 07EF                ___latbits 0002  
               ?_display 0070                 _LATCbits 010E                main@a_100 007B  
               main@b_98 0079                 display@a 0075                 display@b 0070  
               display@i 0076  
