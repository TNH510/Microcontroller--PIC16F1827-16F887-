

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Apr 10 22:24:39 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F1509 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  008C                     	;# 
    83  008D                     	;# 
    84  008E                     	;# 
    85  0091                     	;# 
    86  0092                     	;# 
    87  0093                     	;# 
    88  0095                     	;# 
    89  0096                     	;# 
    90  0097                     	;# 
    91  0099                     	;# 
    92  009A                     	;# 
    93  009B                     	;# 
    94  009B                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  009F                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  0111                     	;# 
   103  0112                     	;# 
   104  0113                     	;# 
   105  0114                     	;# 
   106  0115                     	;# 
   107  0116                     	;# 
   108  0117                     	;# 
   109  0118                     	;# 
   110  0119                     	;# 
   111  011D                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  018E                     	;# 
   115  0191                     	;# 
   116  0191                     	;# 
   117  0192                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0194                     	;# 
   121  0195                     	;# 
   122  0196                     	;# 
   123  0197                     	;# 
   124  0199                     	;# 
   125  019A                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019C                     	;# 
   129  019D                     	;# 
   130  019E                     	;# 
   131  019F                     	;# 
   132  020C                     	;# 
   133  020D                     	;# 
   134  0211                     	;# 
   135  0211                     	;# 
   136  0212                     	;# 
   137  0212                     	;# 
   138  0213                     	;# 
   139  0213                     	;# 
   140  0214                     	;# 
   141  0214                     	;# 
   142  0215                     	;# 
   143  0215                     	;# 
   144  0215                     	;# 
   145  0216                     	;# 
   146  0216                     	;# 
   147  0217                     	;# 
   148  0217                     	;# 
   149  0391                     	;# 
   150  0392                     	;# 
   151  0393                     	;# 
   152  0394                     	;# 
   153  0395                     	;# 
   154  0396                     	;# 
   155  0498                     	;# 
   156  0498                     	;# 
   157  0499                     	;# 
   158  049A                     	;# 
   159  049B                     	;# 
   160  049B                     	;# 
   161  049C                     	;# 
   162  049D                     	;# 
   163  049E                     	;# 
   164  049F                     	;# 
   165  0611                     	;# 
   166  0612                     	;# 
   167  0613                     	;# 
   168  0613                     	;# 
   169  0614                     	;# 
   170  0615                     	;# 
   171  0616                     	;# 
   172  0616                     	;# 
   173  0617                     	;# 
   174  0618                     	;# 
   175  0619                     	;# 
   176  0619                     	;# 
   177  061A                     	;# 
   178  061B                     	;# 
   179  061C                     	;# 
   180  061C                     	;# 
   181  0691                     	;# 
   182  0692                     	;# 
   183  0693                     	;# 
   184  0694                     	;# 
   185  0695                     	;# 
   186  0F0F                     	;# 
   187  0F10                     	;# 
   188  0F11                     	;# 
   189  0F12                     	;# 
   190  0F13                     	;# 
   191  0F14                     	;# 
   192  0F15                     	;# 
   193  0F16                     	;# 
   194  0F17                     	;# 
   195  0F18                     	;# 
   196  0F19                     	;# 
   197  0F1A                     	;# 
   198  0F1B                     	;# 
   199  0F1C                     	;# 
   200  0F1D                     	;# 
   201  0F1E                     	;# 
   202  0F1F                     	;# 
   203  0F20                     	;# 
   204  0F21                     	;# 
   205  0F22                     	;# 
   206  0F23                     	;# 
   207  0F24                     	;# 
   208  0F25                     	;# 
   209  0F26                     	;# 
   210  0F27                     	;# 
   211  0F28                     	;# 
   212  0F29                     	;# 
   213  0F2A                     	;# 
   214  0F2B                     	;# 
   215  0F2C                     	;# 
   216  0F2D                     	;# 
   217  0F2E                     	;# 
   218  0F2F                     	;# 
   219  0F8C                     	;# 
   220  0F8D                     	;# 
   221  0F91                     	;# 
   222  0F95                     	;# 
   223  0F96                     	;# 
   224  0F97                     	;# 
   225  0F9C                     	;# 
   226  0F9D                     	;# 
   227  0F9E                     	;# 
   228  0FE3                     	;# 
   229  0FE4                     	;# 
   230  0FE5                     	;# 
   231  0FE6                     	;# 
   232  0FE7                     	;# 
   233  0FE8                     	;# 
   234  0FE9                     	;# 
   235  0FEA                     	;# 
   236  0FEB                     	;# 
   237  0FED                     	;# 
   238  0FEE                     	;# 
   239  0FEF                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  0008                     	;# 
   249  0009                     	;# 
   250  000A                     	;# 
   251  000B                     	;# 
   252  000C                     	;# 
   253  000D                     	;# 
   254  000E                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0015                     	;# 
   259  0016                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001C                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  008E                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  0111                     	;# 
   288  0112                     	;# 
   289  0113                     	;# 
   290  0114                     	;# 
   291  0115                     	;# 
   292  0116                     	;# 
   293  0117                     	;# 
   294  0118                     	;# 
   295  0119                     	;# 
   296  011D                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  018E                     	;# 
   300  0191                     	;# 
   301  0191                     	;# 
   302  0192                     	;# 
   303  0193                     	;# 
   304  0193                     	;# 
   305  0194                     	;# 
   306  0195                     	;# 
   307  0196                     	;# 
   308  0197                     	;# 
   309  0199                     	;# 
   310  019A                     	;# 
   311  019B                     	;# 
   312  019B                     	;# 
   313  019C                     	;# 
   314  019D                     	;# 
   315  019E                     	;# 
   316  019F                     	;# 
   317  020C                     	;# 
   318  020D                     	;# 
   319  0211                     	;# 
   320  0211                     	;# 
   321  0212                     	;# 
   322  0212                     	;# 
   323  0213                     	;# 
   324  0213                     	;# 
   325  0214                     	;# 
   326  0214                     	;# 
   327  0215                     	;# 
   328  0215                     	;# 
   329  0215                     	;# 
   330  0216                     	;# 
   331  0216                     	;# 
   332  0217                     	;# 
   333  0217                     	;# 
   334  0391                     	;# 
   335  0392                     	;# 
   336  0393                     	;# 
   337  0394                     	;# 
   338  0395                     	;# 
   339  0396                     	;# 
   340  0498                     	;# 
   341  0498                     	;# 
   342  0499                     	;# 
   343  049A                     	;# 
   344  049B                     	;# 
   345  049B                     	;# 
   346  049C                     	;# 
   347  049D                     	;# 
   348  049E                     	;# 
   349  049F                     	;# 
   350  0611                     	;# 
   351  0612                     	;# 
   352  0613                     	;# 
   353  0613                     	;# 
   354  0614                     	;# 
   355  0615                     	;# 
   356  0616                     	;# 
   357  0616                     	;# 
   358  0617                     	;# 
   359  0618                     	;# 
   360  0619                     	;# 
   361  0619                     	;# 
   362  061A                     	;# 
   363  061B                     	;# 
   364  061C                     	;# 
   365  061C                     	;# 
   366  0691                     	;# 
   367  0692                     	;# 
   368  0693                     	;# 
   369  0694                     	;# 
   370  0695                     	;# 
   371  0F0F                     	;# 
   372  0F10                     	;# 
   373  0F11                     	;# 
   374  0F12                     	;# 
   375  0F13                     	;# 
   376  0F14                     	;# 
   377  0F15                     	;# 
   378  0F16                     	;# 
   379  0F17                     	;# 
   380  0F18                     	;# 
   381  0F19                     	;# 
   382  0F1A                     	;# 
   383  0F1B                     	;# 
   384  0F1C                     	;# 
   385  0F1D                     	;# 
   386  0F1E                     	;# 
   387  0F1F                     	;# 
   388  0F20                     	;# 
   389  0F21                     	;# 
   390  0F22                     	;# 
   391  0F23                     	;# 
   392  0F24                     	;# 
   393  0F25                     	;# 
   394  0F26                     	;# 
   395  0F27                     	;# 
   396  0F28                     	;# 
   397  0F29                     	;# 
   398  0F2A                     	;# 
   399  0F2B                     	;# 
   400  0F2C                     	;# 
   401  0F2D                     	;# 
   402  0F2E                     	;# 
   403  0F2F                     	;# 
   404  0F8C                     	;# 
   405  0F8D                     	;# 
   406  0F91                     	;# 
   407  0F95                     	;# 
   408  0F96                     	;# 
   409  0F97                     	;# 
   410  0F9C                     	;# 
   411  0F9D                     	;# 
   412  0F9E                     	;# 
   413  0FE3                     	;# 
   414  0FE4                     	;# 
   415  0FE5                     	;# 
   416  0FE6                     	;# 
   417  0FE7                     	;# 
   418  0FE8                     	;# 
   419  0FE9                     	;# 
   420  0FEA                     	;# 
   421  0FEB                     	;# 
   422  0FED                     	;# 
   423  0FEE                     	;# 
   424  0FEF                     	;# 
   425  008E                     _TRISC	set	142
   426  010E                     _LATCbits	set	270
   427                           
   428                           	psect	stringtext1
   429  0800                     __pstringtext1:
   430  0800                     STR_1:
   431  0800  3454               	retlw	84	;'T'
   432  0801  3472               	retlw	114	;'r'
   433  0802  3461               	retlw	97	;'a'
   434  0803  346E               	retlw	110	;'n'
   435  0804  3420               	retlw	32	;' '
   436  0805  344E               	retlw	78	;'N'
   437  0806  3467               	retlw	103	;'g'
   438  0807  346F               	retlw	111	;'o'
   439  0808  3463               	retlw	99	;'c'
   440  0809  3420               	retlw	32	;' '
   441  080A  3448               	retlw	72	;'H'
   442  080B  3469               	retlw	105	;'i'
   443  080C  3465               	retlw	101	;'e'
   444  080D  3475               	retlw	117	;'u'
   445  080E  3400               	retlw	0
   446                           
   447                           	psect	stringtext2
   448  080F                     __pstringtext2:
   449  080F                     STR_2:
   450  080F  3432               	retlw	50	;'2'
   451  0810  3431               	retlw	49	;'1'
   452  0811  343A               	retlw	58	;':'
   453  0812  3435               	retlw	53	;'5'
   454  0813  3438               	retlw	56	;'8'
   455  0814  343A               	retlw	58	;':'
   456  0815  3435               	retlw	53	;'5'
   457  0816  3439               	retlw	57	;'9'
   458  0817  3400               	retlw	0
   459                           
   460                           	psect	stringtext3
   461  0000                     __pstringtext3:
   462                           
   463                           	psect	cinit
   464  07FD                     start_initialization:	
   465                           ; #config settings
   466                           
   467  07FD                     __initialization:
   468  07FD                     end_of_initialization:	
   469                           ;End of C runtime variable initialization code
   470                           
   471  07FD                     __end_of__initialization:
   472  07FD  0020               	movlb	0
   473  07FE  3187  2F65         	ljmp	_main	;jump to C main() function
   474                           
   475                           	psect	cstackCOMMON
   476  0070                     __pcstackCOMMON:
   477  0070                     ?_LCD_Initialize:
   478  0070                     ?_LCDPutCmd:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ?_main:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ?_LCDWriteNibble:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ?_LCDPutChar:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     LCDWriteNibble@rs:	
   491                           ; 1 bytes @ 0x0
   492                           
   493                           
   494                           ; 1 bytes @ 0x0
   495  0070                     	ds	1
   496  0071                     ??_LCDWriteNibble:
   497  0071                     LCDWriteNibble@ch:	
   498                           ; 1 bytes @ 0x1
   499                           
   500                           
   501                           ; 1 bytes @ 0x1
   502  0071                     	ds	1
   503  0072                     ??_LCDPutCmd:
   504  0072                     ??_LCDPutChar:	
   505                           ; 1 bytes @ 0x2
   506                           
   507                           
   508                           ; 1 bytes @ 0x2
   509  0072                     	ds	2
   510  0074                     LCDPutChar@ch:
   511  0074                     LCDPutCmd@ch:	
   512                           ; 1 bytes @ 0x4
   513                           
   514                           
   515                           ; 1 bytes @ 0x4
   516  0074                     	ds	1
   517  0075                     ??_LCD_Initialize:
   518  0075                     ?_LCDGoto:	
   519                           ; 1 bytes @ 0x5
   520                           
   521  0075                     ?_LCDPutStr:	
   522                           ; 1 bytes @ 0x5
   523                           
   524  0075                     LCDGoto@ln:	
   525                           ; 1 bytes @ 0x5
   526                           
   527  0075                     LCDPutStr@str:	
   528                           ; 1 bytes @ 0x5
   529                           
   530                           
   531                           ; 2 bytes @ 0x5
   532  0075                     	ds	1
   533  0076                     ??_LCDGoto:
   534  0076                     _LCDGoto$102:	
   535                           ; 1 bytes @ 0x6
   536                           
   537                           
   538                           ; 2 bytes @ 0x6
   539  0076                     	ds	1
   540  0077                     ??_LCDPutStr:
   541                           
   542                           ; 1 bytes @ 0x7
   543  0077                     	ds	1
   544  0078                     LCDGoto@pos:
   545                           
   546                           ; 1 bytes @ 0x8
   547  0078                     	ds	2
   548  007A                     LCDPutStr@i:
   549                           
   550                           ; 1 bytes @ 0xA
   551  007A                     	ds	1
   552  007B                     ??_main:
   553                           
   554                           	psect	maintext
   555  0765                     __pmaintext:	
   556                           ; 1 bytes @ 0xB
   557 ;;
   558 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   559 ;;
   560 ;; *************** function _main *****************
   561 ;; Defined at:
   562 ;;		line 24 in file "newmain.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;		None
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : B1F/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   576 ;;      Params:         0       0       0       0       0       0       0       0
   577 ;;      Locals:         0       0       0       0       0       0       0       0
   578 ;;      Temps:          0       0       0       0       0       0       0       0
   579 ;;      Totals:         0       0       0       0       0       0       0       0
   580 ;;Total ram usage:        0 bytes
   581 ;; Hardware stack levels required when called: 3
   582 ;; This function calls:
   583 ;;		_LCDGoto
   584 ;;		_LCDPutCmd
   585 ;;		_LCDPutStr
   586 ;;		_LCD_Initialize
   587 ;; This function is called by:
   588 ;;		Startup code after reset
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592  0765                     _main:	
   593                           ;psect for function _main
   594                           
   595  0765                     l756:	
   596                           ;incstack = 0
   597                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   598                           
   599                           
   600                           ;newmain.c: 26:     LCD_Initialize();
   601  0765  3187  2742  3187   	fcall	_LCD_Initialize
   602                           
   603                           ;newmain.c: 27:     LCDGoto(1,0);
   604  0768  01F5               	clrf	LCDGoto@ln
   605  0769  3001               	movlw	1
   606  076A  3187  27AE  3187   	fcall	_LCDGoto
   607  076D                     l758:
   608                           
   609                           ;newmain.c: 28:     LCDPutStr("Tran Ngoc Hieu");
   610  076D  3000               	movlw	low (STR_1| (0+32768))
   611  076E  00F5               	movwf	LCDPutStr@str
   612  076F  3088               	movlw	high (STR_1| (0+32768))
   613  0770  00F6               	movwf	LCDPutStr@str+1
   614  0771  3187  2788  3187   	fcall	_LCDPutStr
   615  0774                     l760:
   616                           
   617                           ;newmain.c: 29:     LCDPutCmd(0xC0);
   618  0774  30C0               	movlw	192
   619  0775  3187  2723  3187   	fcall	_LCDPutCmd
   620  0778                     l762:
   621                           
   622                           ;newmain.c: 30:     LCDGoto(4,1);
   623  0778  01F5               	clrf	LCDGoto@ln
   624  0779  0AF5               	incf	LCDGoto@ln,f
   625  077A  3004               	movlw	4
   626  077B  3187  27AE  3187   	fcall	_LCDGoto
   627  077E                     l764:
   628                           
   629                           ;newmain.c: 31:     LCDPutStr("21:58:59");
   630  077E  300F               	movlw	low (STR_2| (0+32768))
   631  077F  00F5               	movwf	LCDPutStr@str
   632  0780  3088               	movlw	high (STR_2| (0+32768))
   633  0781  00F6               	movwf	LCDPutStr@str+1
   634  0782  3187  2788  3187   	fcall	_LCDPutStr
   635  0785                     l13:	
   636                           ;newmain.c: 33:     while(1);
   637                           
   638  0785                     l14:
   639  0785  2F85               	goto	l13
   640  0786  3180  2802         	ljmp	start
   641  0788                     __end_of_main:
   642                           
   643                           	psect	text1
   644  0742                     __ptext1:	
   645 ;; *************** function _LCD_Initialize *****************
   646 ;; Defined at:
   647 ;;		line 46 in file "lcd.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;		None
   650 ;; Auto vars:     Size  Location     Type
   651 ;;		None
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      void 
   654 ;; Registers used:
   655 ;;		wreg, status,2, status,0, pclath, cstack
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   661 ;;      Params:         0       0       0       0       0       0       0       0
   662 ;;      Locals:         0       0       0       0       0       0       0       0
   663 ;;      Temps:          1       0       0       0       0       0       0       0
   664 ;;      Totals:         1       0       0       0       0       0       0       0
   665 ;;Total ram usage:        1 bytes
   666 ;; Hardware stack levels used: 1
   667 ;; Hardware stack levels required when called: 2
   668 ;; This function calls:
   669 ;;		_LCDPutCmd
   670 ;; This function is called by:
   671 ;;		_main
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675  0742                     _LCD_Initialize:	
   676                           ;psect for function _LCD_Initialize
   677                           
   678  0742                     l718:	
   679                           ;incstack = 0
   680                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
   681                           
   682                           
   683                           ;lcd.c: 49:     LATCbits.LATC2 = 0;
   684  0742  0022               	movlb	2	; select bank2
   685  0743  110E               	bcf	14,2	;volatile
   686                           
   687                           ;lcd.c: 50:     LATCbits.LATC1 = 0;
   688  0744  108E               	bcf	14,1	;volatile
   689                           
   690                           ;lcd.c: 51:     LATCbits.LATC0 = 0;
   691  0745  100E               	bcf	14,0	;volatile
   692                           
   693                           ;lcd.c: 52:     LATCbits.LATC3 = 0;
   694  0746  118E               	bcf	14,3	;volatile
   695  0747                     l720:
   696                           
   697                           ;lcd.c: 53:     TRISC = 0x00;
   698  0747  0021               	movlb	1	; select bank1
   699  0748  018E               	clrf	14	;volatile
   700  0749                     l722:
   701                           
   702                           ;lcd.c: 60:     _delay((unsigned long)((15)*(1000000/4000.0)));
   703  0749  3005               	movlw	5
   704  074A  00F5               	movwf	??_LCD_Initialize
   705  074B  30DE               	movlw	222
   706  074C                     u217:
   707  074C  0B89               	decfsz	9,f
   708  074D  2F4C               	goto	u217
   709  074E  0BF5               	decfsz	??_LCD_Initialize,f
   710  074F  2F4C               	goto	u217
   711  0750                     l724:
   712                           
   713                           ;lcd.c: 63:     LCDPutCmd(0x32);
   714  0750  3032               	movlw	50
   715  0751  3187  2723  3187   	fcall	_LCDPutCmd
   716  0754                     l726:
   717                           
   718                           ;lcd.c: 66:     LCDPutCmd(0x28);
   719  0754  3028               	movlw	40
   720  0755  3187  2723  3187   	fcall	_LCDPutCmd
   721  0758                     l728:
   722                           
   723                           ;lcd.c: 69:     LCDPutCmd(0x0C);
   724  0758  300C               	movlw	12
   725  0759  3187  2723  3187   	fcall	_LCDPutCmd
   726  075C                     l730:
   727                           
   728                           ;lcd.c: 71:     LCDPutCmd(0x01);
   729  075C  3001               	movlw	1
   730  075D  3187  2723  3187   	fcall	_LCDPutCmd
   731  0760                     l732:
   732                           
   733                           ;lcd.c: 74:     LCDPutCmd(0x06);
   734  0760  3006               	movlw	6
   735  0761  3187  2723  3187   	fcall	_LCDPutCmd
   736  0764                     l27:
   737  0764  0008               	return
   738  0765                     __end_of_LCD_Initialize:
   739                           
   740                           	psect	text2
   741  0788                     __ptext2:	
   742 ;; *************** function _LCDPutStr *****************
   743 ;; Defined at:
   744 ;;		line 139 in file "lcd.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;  str             2    5[COMMON] PTR const unsigned char 
   747 ;;		 -> STR_2(9), STR_1(15), 
   748 ;; Auto vars:     Size  Location     Type
   749 ;;  i               1   10[COMMON] unsigned char 
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   759 ;;      Params:         2       0       0       0       0       0       0       0
   760 ;;      Locals:         1       0       0       0       0       0       0       0
   761 ;;      Temps:          3       0       0       0       0       0       0       0
   762 ;;      Totals:         6       0       0       0       0       0       0       0
   763 ;;Total ram usage:        6 bytes
   764 ;; Hardware stack levels used: 1
   765 ;; Hardware stack levels required when called: 2
   766 ;; This function calls:
   767 ;;		_LCDPutChar
   768 ;; This function is called by:
   769 ;;		_main
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773  0788                     _LCDPutStr:	
   774                           ;psect for function _LCDPutStr
   775                           
   776  0788                     l748:	
   777                           ;incstack = 0
   778                           ; Regs used in _LCDPutStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   779                           
   780                           
   781                           ;lcd.c: 139: void LCDPutStr(const char *str);lcd.c: 140: {;lcd.c: 141:     uint8_t i=0;
   782  0788  01FA               	clrf	LCDPutStr@i
   783                           
   784                           ;lcd.c: 144:     while (str[i])
   785  0789  2F9D               	goto	l754
   786  078A                     l750:
   787                           
   788                           ;lcd.c: 145:     {;lcd.c: 147:         LCDPutChar(str[i++]);
   789  078A  0876               	movf	LCDPutStr@str+1,w
   790  078B  00F8               	movwf	??_LCDPutStr+1
   791  078C  0875               	movf	LCDPutStr@str,w
   792  078D  00F7               	movwf	??_LCDPutStr
   793  078E  087A               	movf	LCDPutStr@i,w
   794  078F  0777               	addwf	??_LCDPutStr,w
   795  0790  0084               	movwf	4
   796  0791  0878               	movf	??_LCDPutStr+1,w
   797  0792  1803               	skipnc
   798  0793  0A78               	incf	??_LCDPutStr+1,w
   799  0794  0085               	movwf	5
   800  0795  0800               	movf	0,w	;code access
   801  0796  3187  2706  3187   	fcall	_LCDPutChar
   802  0799                     l752:
   803  0799  3001               	movlw	1
   804  079A  00F7               	movwf	??_LCDPutStr
   805  079B  0877               	movf	??_LCDPutStr,w
   806  079C  07FA               	addwf	LCDPutStr@i,f
   807  079D                     l754:
   808                           
   809                           ;lcd.c: 144:     while (str[i])
   810  079D  0876               	movf	LCDPutStr@str+1,w
   811  079E  00F8               	movwf	??_LCDPutStr+1
   812  079F  0875               	movf	LCDPutStr@str,w
   813  07A0  00F7               	movwf	??_LCDPutStr
   814  07A1  087A               	movf	LCDPutStr@i,w
   815  07A2  0777               	addwf	??_LCDPutStr,w
   816  07A3  0084               	movwf	4
   817  07A4  0878               	movf	??_LCDPutStr+1,w
   818  07A5  1803               	skipnc
   819  07A6  0A78               	incf	??_LCDPutStr+1,w
   820  07A7  0085               	movwf	5
   821  07A8  0012               	moviw fsr0++
   822  07A9  1D03               	btfss	3,2
   823  07AA  2FAC               	goto	u201
   824  07AB  2FAD               	goto	u200
   825  07AC                     u201:
   826  07AC  2F8A               	goto	l750
   827  07AD                     u200:
   828  07AD                     l50:
   829  07AD  0008               	return
   830  07AE                     __end_of_LCDPutStr:
   831                           
   832                           	psect	text3
   833  0706                     __ptext3:	
   834 ;; *************** function _LCDPutChar *****************
   835 ;; Defined at:
   836 ;;		line 107 in file "lcd.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;  ch              1    wreg     unsigned char 
   839 ;; Auto vars:     Size  Location     Type
   840 ;;  ch              1    4[COMMON] unsigned char 
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, status,2, status,0, pclath, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   850 ;;      Params:         0       0       0       0       0       0       0       0
   851 ;;      Locals:         1       0       0       0       0       0       0       0
   852 ;;      Temps:          2       0       0       0       0       0       0       0
   853 ;;      Totals:         3       0       0       0       0       0       0       0
   854 ;;Total ram usage:        3 bytes
   855 ;; Hardware stack levels used: 1
   856 ;; Hardware stack levels required when called: 1
   857 ;; This function calls:
   858 ;;		_LCDWriteNibble
   859 ;; This function is called by:
   860 ;;		_LCDPutStr
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864  0706                     _LCDPutChar:	
   865                           ;psect for function _LCDPutChar
   866                           
   867                           
   868                           ;incstack = 0
   869                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
   870                           ;LCDPutChar@ch stored from wreg
   871  0706  00F4               	movwf	LCDPutChar@ch
   872  0707                     l710:
   873                           
   874                           ;lcd.c: 107: void LCDPutChar(uint8_t ch);lcd.c: 108: {;lcd.c: 109:     _delay((unsigned 
      +                          long)((5)*(1000000/4000.0)));
   875  0707  30FA               	movlw	250
   876  0708                     u227:
   877  0708  3200               	nop2
   878  0709  0B89               	decfsz	9,f
   879  070A  2F08               	goto	u227
   880  070B                     l712:
   881                           
   882                           ;lcd.c: 112:     LCDWriteNibble(ch,1);
   883  070B  01F0               	clrf	LCDWriteNibble@rs
   884  070C  0AF0               	incf	LCDWriteNibble@rs,f
   885  070D  0874               	movf	LCDPutChar@ch,w
   886  070E  3187  27D5  3187   	fcall	_LCDWriteNibble
   887  0711                     l714:
   888                           
   889                           ;lcd.c: 115:     ch = (ch << 4);
   890  0711  0874               	movf	LCDPutChar@ch,w
   891  0712  00F2               	movwf	??_LCDPutChar
   892  0713  3003               	movlw	3
   893  0714                     u165:
   894  0714  35F2               	lslf	??_LCDPutChar,f
   895  0715  3EFF               	addlw	-1
   896  0716  1D03               	skipz
   897  0717  2F14               	goto	u165
   898  0718  3572               	lslf	??_LCDPutChar,w
   899  0719  00F3               	movwf	??_LCDPutChar+1
   900  071A  0873               	movf	??_LCDPutChar+1,w
   901  071B  00F4               	movwf	LCDPutChar@ch
   902  071C                     l716:
   903                           
   904                           ;lcd.c: 118:     LCDWriteNibble(ch,1);
   905  071C  01F0               	clrf	LCDWriteNibble@rs
   906  071D  0AF0               	incf	LCDWriteNibble@rs,f
   907  071E  0874               	movf	LCDPutChar@ch,w
   908  071F  3187  27D5  3187   	fcall	_LCDWriteNibble
   909  0722                     l41:
   910  0722  0008               	return
   911  0723                     __end_of_LCDPutChar:
   912                           
   913                           	psect	text4
   914  07AE                     __ptext4:	
   915 ;; *************** function _LCDGoto *****************
   916 ;; Defined at:
   917 ;;		line 152 in file "lcd.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;  pos             1    wreg     unsigned char 
   920 ;;  ln              1    5[COMMON] unsigned char 
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  pos             1    8[COMMON] unsigned char 
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg, status,2, status,0, pclath, cstack
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   932 ;;      Params:         1       0       0       0       0       0       0       0
   933 ;;      Locals:         3       0       0       0       0       0       0       0
   934 ;;      Temps:          0       0       0       0       0       0       0       0
   935 ;;      Totals:         4       0       0       0       0       0       0       0
   936 ;;Total ram usage:        4 bytes
   937 ;; Hardware stack levels used: 1
   938 ;; Hardware stack levels required when called: 2
   939 ;; This function calls:
   940 ;;		_LCDPutCmd
   941 ;; This function is called by:
   942 ;;		_main
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946  07AE                     _LCDGoto:	
   947                           ;psect for function _LCDGoto
   948                           
   949                           
   950                           ;incstack = 0
   951                           ; Regs used in _LCDGoto: [wreg+status,2+status,0+pclath+cstack]
   952                           ;LCDGoto@pos stored from wreg
   953  07AE  00F8               	movwf	LCDGoto@pos
   954  07AF                     l734:
   955                           
   956                           ;lcd.c: 152: void LCDGoto(uint8_t pos,uint8_t ln);lcd.c: 153: {;lcd.c: 155:     if ((ln 
      +                          > (2 -1)) || (pos > (16 -1)))
   957  07AF  3002               	movlw	2
   958  07B0  0275               	subwf	LCDGoto@ln,w
   959  07B1  1803               	skipnc
   960  07B2  2FB4               	goto	u171
   961  07B3  2FB5               	goto	u170
   962  07B4                     u171:
   963  07B4  2FD4               	goto	l56
   964  07B5                     u170:
   965  07B5                     l736:
   966  07B5  3010               	movlw	16
   967  07B6  0278               	subwf	LCDGoto@pos,w
   968  07B7  1C03               	skipc
   969  07B8  2FBA               	goto	u181
   970  07B9  2FBB               	goto	u180
   971  07BA                     u181:
   972  07BA  2FBC               	goto	l738
   973  07BB                     u180:
   974  07BB  2FD4               	goto	l56
   975  07BC                     l738:
   976                           
   977                           ;lcd.c: 162:     LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
   978  07BC  0375               	decf	LCDGoto@ln,w
   979  07BD  1903               	btfsc	3,2
   980  07BE  2FC0               	goto	u191
   981  07BF  2FC1               	goto	u190
   982  07C0                     u191:
   983  07C0  2FC7               	goto	l742
   984  07C1                     u190:
   985  07C1                     l740:
   986  07C1  3080               	movlw	128
   987  07C2  0478               	iorwf	LCDGoto@pos,w
   988  07C3  00F6               	movwf	_LCDGoto$102
   989  07C4  3000               	movlw	0
   990  07C5  00F7               	movwf	_LCDGoto$102+1
   991  07C6  2FCC               	goto	l744
   992  07C7                     l742:
   993  07C7  30C0               	movlw	192
   994  07C8  0478               	iorwf	LCDGoto@pos,w
   995  07C9  00F6               	movwf	_LCDGoto$102
   996  07CA  3000               	movlw	0
   997  07CB  00F7               	movwf	_LCDGoto$102+1
   998  07CC                     l744:
   999  07CC  0876               	movf	_LCDGoto$102,w
  1000  07CD  3187  2723  3187   	fcall	_LCDPutCmd
  1001  07D0                     l746:
  1002                           
  1003                           ;lcd.c: 165:     _delay((unsigned long)((5)*(1000000/4000.0)));
  1004  07D0  30FA               	movlw	250
  1005  07D1                     u237:
  1006  07D1  3200               	nop2
  1007  07D2  0B89               	decfsz	9,f
  1008  07D3  2FD1               	goto	u237
  1009  07D4                     l56:
  1010  07D4  0008               	return
  1011  07D5                     __end_of_LCDGoto:
  1012                           
  1013                           	psect	text5
  1014  0723                     __ptext5:	
  1015 ;; *************** function _LCDPutCmd *****************
  1016 ;; Defined at:
  1017 ;;		line 122 in file "lcd.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;  ch              1    wreg     unsigned char 
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;  ch              1    4[COMMON] unsigned char 
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      void 
  1024 ;; Registers used:
  1025 ;;		wreg, status,2, status,0, pclath, cstack
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1031 ;;      Params:         0       0       0       0       0       0       0       0
  1032 ;;      Locals:         1       0       0       0       0       0       0       0
  1033 ;;      Temps:          2       0       0       0       0       0       0       0
  1034 ;;      Totals:         3       0       0       0       0       0       0       0
  1035 ;;Total ram usage:        3 bytes
  1036 ;; Hardware stack levels used: 1
  1037 ;; Hardware stack levels required when called: 1
  1038 ;; This function calls:
  1039 ;;		_LCDWriteNibble
  1040 ;; This function is called by:
  1041 ;;		_main
  1042 ;;		_LCD_Initialize
  1043 ;;		_LCDGoto
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047  0723                     _LCDPutCmd:	
  1048                           ;psect for function _LCDPutCmd
  1049                           
  1050                           
  1051                           ;incstack = 0
  1052                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
  1053                           ;LCDPutCmd@ch stored from wreg
  1054  0723  00F4               	movwf	LCDPutCmd@ch
  1055  0724                     l700:
  1056                           
  1057                           ;lcd.c: 122: void LCDPutCmd(uint8_t ch);lcd.c: 123: {;lcd.c: 124:     _delay((unsigned l
      +                          ong)((5)*(1000000/4000.0)));
  1058  0724  30FA               	movlw	250
  1059  0725                     u247:
  1060  0725  3200               	nop2
  1061  0726  0B89               	decfsz	9,f
  1062  0727  2F25               	goto	u247
  1063  0728                     l702:
  1064                           
  1065                           ;lcd.c: 127:     LCDWriteNibble(ch,0);
  1066  0728  01F0               	clrf	LCDWriteNibble@rs
  1067  0729  0874               	movf	LCDPutCmd@ch,w
  1068  072A  3187  27D5  3187   	fcall	_LCDWriteNibble
  1069  072D                     l704:
  1070                           
  1071                           ;lcd.c: 130:     ch = (ch << 4);
  1072  072D  0874               	movf	LCDPutCmd@ch,w
  1073  072E  00F2               	movwf	??_LCDPutCmd
  1074  072F  3003               	movlw	3
  1075  0730                     u155:
  1076  0730  35F2               	lslf	??_LCDPutCmd,f
  1077  0731  3EFF               	addlw	-1
  1078  0732  1D03               	skipz
  1079  0733  2F30               	goto	u155
  1080  0734  3572               	lslf	??_LCDPutCmd,w
  1081  0735  00F3               	movwf	??_LCDPutCmd+1
  1082  0736  0873               	movf	??_LCDPutCmd+1,w
  1083  0737  00F4               	movwf	LCDPutCmd@ch
  1084  0738                     l706:
  1085                           
  1086                           ;lcd.c: 132:     _delay((unsigned long)((1)*(1000000/4000.0)));
  1087  0738  3053               	movlw	83
  1088  0739                     u257:
  1089  0739  0B89               	decfsz	9,f
  1090  073A  2F39               	goto	u257
  1091  073B  0000               	nop
  1092  073C                     l708:
  1093                           
  1094                           ;lcd.c: 135:     LCDWriteNibble(ch,0);
  1095  073C  01F0               	clrf	LCDWriteNibble@rs
  1096  073D  0874               	movf	LCDPutCmd@ch,w
  1097  073E  3187  27D5  3187   	fcall	_LCDWriteNibble
  1098  0741                     l44:
  1099  0741  0008               	return
  1100  0742                     __end_of_LCDPutCmd:
  1101                           
  1102                           	psect	text6
  1103  07D5                     __ptext6:	
  1104 ;; *************** function _LCDWriteNibble *****************
  1105 ;; Defined at:
  1106 ;;		line 79 in file "lcd.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;  ch              1    wreg     unsigned char 
  1109 ;;  rs              1    0[COMMON] unsigned char 
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;  ch              1    1[COMMON] unsigned char 
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		wreg, status,0
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1121 ;;      Params:         1       0       0       0       0       0       0       0
  1122 ;;      Locals:         1       0       0       0       0       0       0       0
  1123 ;;      Temps:          0       0       0       0       0       0       0       0
  1124 ;;      Totals:         2       0       0       0       0       0       0       0
  1125 ;;Total ram usage:        2 bytes
  1126 ;; Hardware stack levels used: 1
  1127 ;; This function calls:
  1128 ;;		Nothing
  1129 ;; This function is called by:
  1130 ;;		_LCDPutChar
  1131 ;;		_LCDPutCmd
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135  07D5                     _LCDWriteNibble:	
  1136                           ;psect for function _LCDWriteNibble
  1137                           
  1138                           
  1139                           ;incstack = 0
  1140                           ; Regs used in _LCDWriteNibble: [wreg+status,0]
  1141                           ;LCDWriteNibble@ch stored from wreg
  1142  07D5  00F1               	movwf	LCDWriteNibble@ch
  1143  07D6                     l676:
  1144                           
  1145                           ;lcd.c: 79: void LCDWriteNibble(uint8_t ch,uint8_t rs);lcd.c: 80: {;lcd.c: 81:     if ((
      +                          ch & 0b00010000)==0)
  1146  07D6  1A71               	btfsc	LCDWriteNibble@ch,4
  1147  07D7  2FD9               	goto	u111
  1148  07D8  2FDA               	goto	u110
  1149  07D9                     u111:
  1150  07D9  2FDD               	goto	l30
  1151  07DA                     u110:
  1152  07DA                     l678:
  1153                           
  1154                           ;lcd.c: 82:         LATCbits.LATC2 = 0;
  1155  07DA  0022               	movlb	2	; select bank2
  1156  07DB  110E               	bcf	14,2	;volatile
  1157  07DC  2FDF               	goto	l680
  1158  07DD                     l30:	
  1159                           ;lcd.c: 83:     else LATCbits.LATC2 = 1 ;
  1160                           
  1161  07DD  0022               	movlb	2	; select bank2
  1162  07DE  150E               	bsf	14,2	;volatile
  1163  07DF                     l680:
  1164                           
  1165                           ;lcd.c: 84:     if ((ch & 0b00100000)==0)
  1166  07DF  1AF1               	btfsc	LCDWriteNibble@ch,5
  1167  07E0  2FE2               	goto	u121
  1168  07E1  2FE3               	goto	u120
  1169  07E2                     u121:
  1170  07E2  2FE5               	goto	l32
  1171  07E3                     u120:
  1172  07E3                     l682:
  1173                           
  1174                           ;lcd.c: 85:         LATCbits.LATC1 = 0;
  1175  07E3  108E               	bcf	14,1	;volatile
  1176  07E4  2FE6               	goto	l684
  1177  07E5                     l32:	
  1178                           ;lcd.c: 86:     else LATCbits.LATC1 = 1 ;
  1179                           
  1180  07E5  148E               	bsf	14,1	;volatile
  1181  07E6                     l684:
  1182                           
  1183                           ;lcd.c: 87:     if ((ch & 0b01000000)==0)
  1184  07E6  1B71               	btfsc	LCDWriteNibble@ch,6
  1185  07E7  2FE9               	goto	u131
  1186  07E8  2FEA               	goto	u130
  1187  07E9                     u131:
  1188  07E9  2FEC               	goto	l34
  1189  07EA                     u130:
  1190  07EA                     l686:
  1191                           
  1192                           ;lcd.c: 88:         LATCbits.LATC0 = 0;
  1193  07EA  100E               	bcf	14,0	;volatile
  1194  07EB  2FED               	goto	l688
  1195  07EC                     l34:	
  1196                           ;lcd.c: 89:     else LATCbits.LATC0 = 1 ;
  1197                           
  1198  07EC  140E               	bsf	14,0	;volatile
  1199  07ED                     l688:
  1200                           
  1201                           ;lcd.c: 90:     if ((ch & 0b10000000)==0)
  1202  07ED  1BF1               	btfsc	LCDWriteNibble@ch,7
  1203  07EE  2FF0               	goto	u141
  1204  07EF  2FF1               	goto	u140
  1205  07F0                     u141:
  1206  07F0  2FF3               	goto	l36
  1207  07F1                     u140:
  1208  07F1                     l690:
  1209                           
  1210                           ;lcd.c: 91:         LATCbits.LATC3 = 0;
  1211  07F1  118E               	bcf	14,3	;volatile
  1212  07F2  2FF4               	goto	l692
  1213  07F3                     l36:	
  1214                           ;lcd.c: 92:     else LATCbits.LATC3 = 1;
  1215                           
  1216  07F3  158E               	bsf	14,3	;volatile
  1217  07F4                     l692:
  1218                           
  1219                           ;lcd.c: 95:     LATCbits.LATC7 = rs;
  1220  07F4  0C70               	rrf	LCDWriteNibble@rs,w
  1221  07F5  1C03               	skipc
  1222  07F6  138E               	bcf	14,7	;volatile
  1223  07F7  1803               	skipnc
  1224  07F8  178E               	bsf	14,7	;volatile
  1225  07F9                     l694:
  1226                           
  1227                           ;lcd.c: 98:     LATCbits.LATC6 = 0;
  1228  07F9  130E               	bcf	14,6	;volatile
  1229  07FA                     l696:
  1230                           
  1231                           ;lcd.c: 101:     LATCbits.LATC5 = 1;
  1232  07FA  168E               	bsf	14,5	;volatile
  1233  07FB                     l698:
  1234                           
  1235                           ;lcd.c: 104:     LATCbits.LATC5 = 0;
  1236  07FB  128E               	bcf	14,5	;volatile
  1237  07FC                     l38:
  1238  07FC  0008               	return
  1239  07FD                     __end_of_LCDWriteNibble:
  1240  007E                     btemp	set	126	;btemp
  1241  007E                     wtemp0	set	126
  1242                           
  1243                           	psect	idloc
  1244                           
  1245                           ;Config register IDLOC0 @ 0x8000
  1246                           ;	unspecified, using default values
  1247  8000                     	org	32768
  1248  8000  3FFF               	dw	16383
  1249                           
  1250                           ;Config register IDLOC1 @ 0x8001
  1251                           ;	unspecified, using default values
  1252  8001                     	org	32769
  1253  8001  3FFF               	dw	16383
  1254                           
  1255                           ;Config register IDLOC2 @ 0x8002
  1256                           ;	unspecified, using default values
  1257  8002                     	org	32770
  1258  8002  3FFF               	dw	16383
  1259                           
  1260                           ;Config register IDLOC3 @ 0x8003
  1261                           ;	unspecified, using default values
  1262  8003                     	org	32771
  1263  8003  3FFF               	dw	16383
  1264                           
  1265                           	psect	config
  1266                           
  1267                           ;Config register CONFIG1 @ 0x8007
  1268                           ;	Oscillator Selection Bits
  1269                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1270                           ;	Watchdog Timer Enable
  1271                           ;	WDTE = OFF, WDT disabled
  1272                           ;	Power-up Timer Enable
  1273                           ;	PWRTE = OFF, PWRT disabled
  1274                           ;	MCLR Pin Function Select
  1275                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  1276                           ;	Flash Program Memory Code Protection
  1277                           ;	CP = OFF, Program memory code protection is disabled
  1278                           ;	Brown-out Reset Enable
  1279                           ;	BOREN = OFF, Brown-out Reset disabled
  1280                           ;	Clock Out Enable
  1281                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1282                           ;	Internal/External Switchover Mode
  1283                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  1284                           ;	Fail-Safe Clock Monitor Enable
  1285                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1286  8007                     	org	32775
  1287  8007  09E4               	dw	2532
  1288                           
  1289                           ;Config register CONFIG2 @ 0x8008
  1290                           ;	Flash Memory Self-Write Protection
  1291                           ;	WRT = OFF, Write protection off
  1292                           ;	Stack Overflow/Underflow Reset Enable
  1293                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  1294                           ;	Brown-out Reset Voltage Selection
  1295                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1296                           ;	Low-Power Brown Out Reset
  1297                           ;	LPBOR = OFF, Low-Power BOR is disabled
  1298                           ;	Low-Voltage Programming Enable
  1299                           ;	LVP = ON, Low-voltage programming enabled
  1300  8008                     	org	32776
  1301  8008  3DFF               	dw	15871

Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[9]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_LCDPutStr
    _LCD_Initialize->_LCDPutCmd
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2452
                            _LCDGoto
                          _LCDPutCmd
                          _LCDPutStr
                     _LCD_Initialize
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       1     1      0     481
                                              5 COMMON     1     1      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            6     4      2     723
                                              5 COMMON     6     4      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     481
                                              2 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              4     3      1     767
                                              5 COMMON     4     3      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            3     3      0     481
                                              2 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       2     1      1     414
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDGoto
     _LCDPutCmd
       _LCDWriteNibble
   _LCDPutCmd
   _LCDPutStr
     _LCDPutChar
       _LCDWriteNibble
   _LCD_Initialize
     _LCDPutCmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Apr 10 22:24:39 2022

         _LCD_Initialize 0742                       l13 0785                       l30 07DD  
                     l14 0785                       l32 07E5                       l41 0722  
                     l34 07EC                       l50 07AD                       l27 0764  
            ?_LCDPutChar 0070                       l36 07F3                       l44 0741  
                     l38 07FC                       l56 07D4                      l700 0724  
                    l702 0728                      l710 0707                      l704 072D  
                    l712 070B                      l720 0747                      l706 0738  
                    l714 0711                      l730 075C                      l722 0749  
                    l708 073C                      l740 07C1                      l716 071C  
                    l732 0760                      l724 0750                      l742 07C7  
                    l734 07AF                      l750 078A                      l726 0754  
                    l718 0742                      l680 07DF                      l744 07CC  
                    l736 07B5                      l752 0799                      l728 0758  
                    l760 0774                      l690 07F1                      l682 07E3  
                    l746 07D0                      l738 07BC                      l754 079D  
                    l762 0778                      l692 07F4                      l684 07E6  
                    l676 07D6                      l748 0788                      l764 077E  
                    l756 0765                      l694 07F9                      l686 07EA  
                    l678 07DA                      l758 076D                      l696 07FA  
                    l688 07ED                      l698 07FB                      u110 07DA  
                    u111 07D9                      u120 07E3                      u200 07AD  
                    u121 07E2                      u201 07AC                      u130 07EA  
                    u131 07E9                      u140 07F1                      u141 07F0  
                    u217 074C                      u170 07B5                      u155 0730  
                    u171 07B4                      u227 0708                      u180 07BB  
                    u237 07D1                      u181 07BA                      u165 0714  
                    u190 07C1                      u247 0725                      u191 07C0  
                    u257 0739                      wreg 0009          __end_of_LCDGoto 07D5  
                   STR_1 0800                     STR_2 080F                     _main 0765  
                   fsr0h 0005                     indf0 0000                     fsr0l 0004  
                   btemp 007E                     start 0002   __end_of_LCD_Initialize 0765  
            LCDPutCmd@ch 0074                    ?_main 0070                    _TRISC 008E  
                  status 0003                    wtemp0 007E          ?_LCD_Initialize 0070  
        __initialization 07FD             __end_of_main 0788                   ??_main 007B  
              ??_LCDGoto 0076        __end_of_LCDPutCmd 0742             LCDPutChar@ch 0074  
      __end_of_LCDPutStr 07AE             LCDPutStr@str 0075           _LCDWriteNibble 07D5  
 __end_of_LCDWriteNibble 07FD  __end_of__initialization 07FD                LCDGoto@ln 0075  
         __pcstackCOMMON 0070             ??_LCDPutChar 0072          ?_LCDWriteNibble 0070  
     __end_of_LCDPutChar 0723               __pmaintext 0765                  _LCDGoto 07AE  
       ??_LCD_Initialize 0075                  __ptext1 0742                  __ptext2 0788  
                __ptext3 0706                  __ptext4 07AE                  __ptext5 0723  
                __ptext6 07D5                _LCDPutCmd 0723                _LCDPutStr 0788  
   end_of_initialization 07FD               ?_LCDPutCmd 0070               ?_LCDPutStr 0075  
             LCDGoto@pos 0078               LCDPutStr@i 007A      start_initialization 07FD  
       ??_LCDWriteNibble 0071                 ?_LCDGoto 0075                ___latbits 0002  
            ??_LCDPutCmd 0072              ??_LCDPutStr 0077         LCDWriteNibble@ch 0071  
       LCDWriteNibble@rs 0070                 _LATCbits 010E              _LCDGoto$102 0076  
             _LCDPutChar 0706            __pstringtext1 0800            __pstringtext2 080F  
          __pstringtext3 0000  
